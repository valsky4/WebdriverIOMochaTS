/**
 * Applies a series of migration functions to a manifest to update its manifest schema version.
 *
 * `data` is modified in-place.
 *
 * @param {Manifest} manifest
 * @param {AnyManifestDataVersion} data
 * @returns {Promise<boolean>} If `true` existing packages should be synced from disk and the manifest should be persisted.
 */
export function migrate(manifest: Manifest, data: AnyManifestDataVersion): Promise<boolean>;
/**
 * Migration functions take a {@linkcode Manifest } and its data and **mutates `data` in-place**.
 *
 * A migration function should not modify `schemaRev`, as this is done automatically.
 *
 * A migration function can also call out to, say, {@linkcode Manifest.syncWithInstalledExtensions }, which
 * may apply the mutation itself.
 *
 * Note that at the time of writing, we're not able to determine the version of the _current_ manifest file if there is no `schemaRev` prop present (and we may not want to trust it anyway).
 */
export type Migration = (data: AnyManifestDataVersion, manifest: Manifest) => boolean | Promise<boolean>;
export type ManifestData = import('appium/types').ManifestData;
export type AnyManifestDataVersion = import('appium/types').AnyManifestDataVersion;
export type ManifestDataVersions = import('appium/types').ManifestDataVersions;
export type ManifestDataV2 = import('appium/types').ManifestV2.ManifestData;
export type Manifest = import('./manifest').Manifest;
//# sourceMappingURL=manifest-migrations.d.ts.map