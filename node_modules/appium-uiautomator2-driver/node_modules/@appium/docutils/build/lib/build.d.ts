import { TypeDocOptions } from 'typedoc';
/**
 * Executes TypeDoc in the current process
 *
 * Monkeypatch's TypeDoc's homebrew "glob" implementation because it is broken
 * @param pkgRoot - Package root path
 * @param opts - TypeDoc options
 */
export declare function runTypedoc(pkgRoot: string, opts: TypeDocOptions): import("typedoc").ProjectReflection | undefined;
export interface BuildTypedocOptions {
    typedocJson?: string;
    cwd?: string;
    packageJson?: string;
    tsconfigJson?: string;
    title?: string;
}
export declare function buildTypedoc({ typedocJson: typeDocJsonPath, cwd, packageJson: packageJsonPath, tsconfigJson: tsconfig, title, }?: BuildTypedocOptions): Promise<void>;
export declare function buildReference(opts?: BuildReferenceOptions): Promise<void>;
export interface BuildReferenceOptions extends BuildTypedocOptions {
}
//# sourceMappingURL=build.d.ts.map