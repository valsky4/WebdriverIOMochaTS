/**
 * Functions for running `mkdocs`
 *
 * @module
 */
import { SubProcess, TeenProcessExecOptions } from 'teen_process';
import { TupleToObject } from '../util';
/**
 * Runs `mkdocs build` or `mkdocs serve`
 * @param opts
 */
export declare function buildMkDocs({ mkdocsYml: mkDocsYmlPath, siteDir, theme, cwd, serve, serveOpts, execOpts, }?: BuildMkDocsOpts): Promise<void>;
/**
 * Options for {@linkcode buildMkDocs}.
 */
export interface BuildMkDocsOpts {
    /**
     * Path to `mkdocs.yml`
     */
    mkdocsYml?: string;
    /**
     * Path to output directory
     */
    siteDir?: string;
    /**
     * MkDocs theme to use
     * @defaultValue 'mkdocs'
     */
    theme?: string;
    /**
     * Current working directory
     * @defaultValue `process.cwd()`
     */
    cwd?: string;
    /**
     * Path to `package.json`
     *
     * Used to find `mkdocs.yml` if unspecified.
     */
    packageJson?: string;
    /**
     * If `true`, run `mkdocs serve` instead of `mkdocs build`
     */
    serve?: boolean;
    /**
     * Extra options for {@linkcode teen_process.exec}
     */
    execOpts?: TeenProcessExecOptions;
    /**
     * Extra options for {@linkcode teen_process.Subprocess.start}
     */
    serveOpts?: TeenProcessSubprocessStartOpts;
}
/**
 * Conversion of the parameters of {@linkcode Subprocess.start} to an object.
 */
export declare type TeenProcessSubprocessStartOpts = Partial<TupleToObject<Parameters<SubProcess['start']>, ['startDetector', 'detach', 'timeoutMs']>>;
//# sourceMappingURL=mkdocs.d.ts.map