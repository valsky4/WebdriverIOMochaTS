import { CommandModule, InferredOptionTypes } from 'yargs';
declare const opts: {
    readonly python: {
        readonly default: true;
        readonly description: "Validate Python 3 environment";
        readonly group: "Validation:";
        readonly type: "boolean";
    };
    readonly 'python-path': {
        readonly defaultDescription: "(derived from shell)";
        readonly description: "Path to python 3 executable";
        readonly group: "Validation:";
        readonly nargs: 1;
        readonly normalize: true;
        readonly requiresArg: true;
        readonly type: "string";
    };
    readonly 'tsconfig-json': {
        readonly defaultDescription: "./tsconfig.json";
        readonly describe: "Path to tsconfig.json";
        readonly group: "Validation:";
        readonly nargs: 1;
        readonly normalize: true;
        readonly requiresArg: true;
        readonly type: "string";
    };
    readonly typedoc: {
        readonly default: true;
        readonly description: "Validate TypoDoc config";
        readonly group: "Validation:";
        readonly type: "boolean";
    };
    readonly 'typedoc-json': {
        readonly defaultDescription: "./typedoc.json";
        readonly describe: "Path to typedoc.json";
        readonly group: "Validation:";
        readonly nargs: 1;
        readonly normalize: true;
        readonly requiresArg: true;
        readonly type: "string";
    };
    readonly typescript: {
        readonly default: true;
        readonly description: "Validate TypeScript config";
        readonly group: "Validation:";
        readonly type: "boolean";
    };
};
declare type ValidateOptions = InferredOptionTypes<typeof opts>;
declare const validateCommand: CommandModule<{}, ValidateOptions>;
export default validateCommand;
//# sourceMappingURL=command-validate.d.ts.map