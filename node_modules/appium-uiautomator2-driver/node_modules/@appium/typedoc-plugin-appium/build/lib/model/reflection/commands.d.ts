import { DeclarationReflection } from 'typedoc';
import { ModuleCommands } from '../module-commands';
import { ExecMethodDataSet, ParentReflection, RouteMap } from '../types';
/**
 * A reflection containing data about commands and/or execute methods.
 *
 * Methods may be invoked directly by Handlebars templates.
 */
export declare class CommandsReflection extends DeclarationReflection {
    /**
     * Info about execute methods
     */
    readonly execMethodDataSet: ExecMethodDataSet;
    /**
     * Info about routes/commands
     */
    readonly routeMap: RouteMap;
    constructor(name: string, parent: ParentReflection, { routeMap, execMethodDataSet }: ModuleCommands);
    /**
     * Returns `true` if there are any "execute commands" in this set.
     *
     * Used by templates
     */
    get hasExecuteMethod(): boolean;
    /**
     * Returns `true` if there are any "regular" commands in this set.
     *
     * Used by templates
     */
    get hasRoute(): boolean;
    /**
     * Returns number of routes ("commands") in this in this data
     */
    get routeCount(): number;
    /**
     * Returns number of execute methods in this data
     */
    get execMethodCount(): number;
}
//# sourceMappingURL=commands.d.ts.map