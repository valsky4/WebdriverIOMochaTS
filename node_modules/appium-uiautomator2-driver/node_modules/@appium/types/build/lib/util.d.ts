import type { Class as _Class } from 'type-fest';
/**
 * Utility type for a object with string-only props
 */
export declare type StringRecord<T = any> = Record<string, T>;
/**
 * Wraps {@linkcode _Class `type-fest`'s `Class`} to include static members.
 */
export declare type Class<Proto, StaticMembers extends object = {}, Args extends unknown[] = any[]> = _Class<Proto, Args> & StaticMembers;
/**
 * Possible HTTP methods, as stolen from `axios`.
 *
 * @see https://npm.im/axios
 */
export declare type HTTPMethod = 'get' | 'GET' | 'delete' | 'DELETE' | 'head' | 'HEAD' | 'options' | 'OPTIONS' | 'post' | 'POST' | 'put' | 'PUT' | 'patch' | 'PATCH' | 'purge' | 'PURGE' | 'link' | 'LINK' | 'unlink' | 'UNLINK';
//# sourceMappingURL=util.d.ts.map