{"version":3,"file":"battery.js","names":["extensions","commands","exports","mobileGetBatteryInfo","proxyCommand","Object","assign","_default","default"],"sources":["../../../lib/commands/battery.js"],"sourcesContent":["let extensions = {}, commands = {};\n\n/**\n * @typedef {Object} BatteryInfo\n *\n * @property {number} level - Battery level in range [0.0, 1.0], where\n *                            1.0 means 100% charge.\n * @property {number} state - Battery state. The following values are possible:\n *   UIDeviceBatteryStateUnknown = 0\n *   UIDeviceBatteryStateUnplugged = 1  // on battery, discharging\n *   UIDeviceBatteryStateCharging = 2   // plugged in, less than 100%\n *   UIDeviceBatteryStateFull = 3       // plugged in, at 100%\n */\n\n/**\n * Reads the battery information from the device under test.\n * This endpoint only returns reliable result on real devices.\n *\n * @returns {BatteryInfo} The actual battery info\n */\ncommands.mobileGetBatteryInfo = async function mobileGetBatteryInfo () {\n  return await this.proxyCommand('/wda/batteryInfo', 'GET');\n};\n\nObject.assign(extensions, commands);\nexport { commands };\nexport default extensions;\n"],"mappings":";;;;;;;AAAA,IAAIA,UAAU,GAAG,CAAC,CAAC;EAAEC,QAAQ,GAAG,CAAC,CAAC;AAACC,OAAA,CAAAD,QAAA,GAAAA,QAAA;AAoBnCA,QAAQ,CAACE,oBAAoB,GAAG,eAAeA,oBAAoBA,CAAA,EAAI;EACrE,OAAO,MAAM,IAAI,CAACC,YAAY,CAAC,kBAAkB,EAAE,KAAK,CAAC;AAC3D,CAAC;AAEDC,MAAM,CAACC,MAAM,CAACN,UAAU,EAAEC,QAAQ,CAAC;AAAC,IAAAM,QAAA,GAErBP,UAAU;AAAAE,OAAA,CAAAM,OAAA,GAAAD,QAAA"}