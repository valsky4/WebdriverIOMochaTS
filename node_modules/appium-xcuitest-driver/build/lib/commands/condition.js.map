{"version":3,"file":"condition.js","names":["_appiumIosDevice","require","_lodash","_interopRequireDefault","_support","commands","exports","requireConditionInducerCompatibleDevice","driver","isSimulator","log","errorAndThrow","util","compareVersions","opts","platformVersion","mobileListConditionInducers","listConditionInducers","conditionInducerService","services","startInstrumentService","device","udid","ret","callChannel","INSTRUMENT_CHANNEL","CONDITION_INDUCER","selector","close","mobileEnableConditionInducer","enableConditionInducer","options","_conditionInducerService","_socketClient","destroyed","conditionID","profileID","_","isBoolean","JSON","stringify","mobileDisableConditionInducer","disableConditionInducer","warn","_default","default"],"sources":["../../../lib/commands/condition.js"],"sourcesContent":["import { INSTRUMENT_CHANNEL, services } from 'appium-ios-device';\nimport _ from 'lodash';\nimport { util } from 'appium/support';\n\nconst commands = {};\n\nfunction requireConditionInducerCompatibleDevice (driver) {\n    if (driver.isSimulator()) {\n      driver.log.errorAndThrow('Condition inducer only works on real devices');\n    }\n    if (util.compareVersions(driver.opts.platformVersion, '<', '13.0')) {\n      driver.log.errorAndThrow('Condition inducer is only supported since iOS 13+');\n    }\n  }\n\n/**\n * @typedef {Object} Profile\n * @property {String} name\n * @property {String} identifier  the property is profileID used in MobileEnableConditionInducer\n * @property {String} description Configuration details\n */\n\n/**\n * We can use the returned data to determine whether the Condition is enabled and the currently enabled configuration information\n * @typedef {Object} Condition\n * @property {Array<Profile>} profiles\n * @property {String} identifier the property is conditionID used in MobileEnableConditionInducer\n * @property {boolean} profilesSorted\n * @property {boolean} isDestructive\n * @property {boolean} isInternal\n * @property {boolean} isActive `true` if this condition identifier is enabled\n * @property {String} activeProfile  enabled profiles identifier\n */\n\n/**\n * Get all ConditionInducer configuration information\n * We will use conditionID and profileID in the mobileEnableConditionInducer\n * @returns {Array<Condition>}\n * [{\n *     \"profiles\": [\n *          {\n *             \"name\": \"100% packet loss\",\n *             \"identifier\": \"SlowNetwork100PctLoss\",  // MobileEnableConditionInducer profileID\n *             \"description\": \"Name: 100% Loss Scenario\\n\n *                             Downlink Bandwidth: 0 Mbps\\n\n *                             Downlink Latency:0 ms\\n\n *                             Downlink Packet Loss Ratio: 100%\\n\n *                             Uplink Bandwidth: 0 Mbps\\n\n *                             Uplink Latency: 0 ms\\n\n *                             Uplink Packet Loss Ratio: 100%\"\n *         }\n *     ],\n *     \"profilesSorted\": true,\n *     \"identifier\": \"SlowNetworkCondition\",    // MobileEnableConditionInducer conditionID\n *     \"isDestructive\": false,\n *     \"isInternal\": false,\n *     \"activeProfile\": \"\",\n *     \"name\": \"Network Link\",\n *     \"isActive\": false\n * }]\n */\ncommands.mobileListConditionInducers = async function listConditionInducers () {\n  requireConditionInducerCompatibleDevice(this);\n  const conditionInducerService = await services.startInstrumentService(this.opts.device.udid);\n  try {\n    const ret = await conditionInducerService.callChannel(INSTRUMENT_CHANNEL.CONDITION_INDUCER, 'availableConditionInducers');\n    return ret.selector;\n  } finally {\n    conditionInducerService.close();\n  }\n};\n\n/**\n * Enable condition inducer. The socket needs to remain connected during operation\n * conditionID  Condition[0].identifier\n * profileID    Condition[0].profiles[0].identifier\n * @param {{conditionID,profileID}} options\n * @returns {boolean} `true` if enable the condition succeeded\n * @throws {Error} If try to start another Condition and the previous Condition has not stopped, it will throw an error\n */\ncommands.mobileEnableConditionInducer = async function enableConditionInducer (options = {}) {\n  requireConditionInducerCompatibleDevice(this);\n  if (this._conditionInducerService && !this._conditionInducerService._socketClient.destroyed) {\n    this.log.errorAndThrow(`Condition inducer has been started. A condition is already active.`);\n  }\n  const {\n    conditionID,\n    profileID,\n  } = options;\n  this._conditionInducerService = await services.startInstrumentService(this.opts.device.udid);\n  const ret = await this._conditionInducerService.callChannel(INSTRUMENT_CHANNEL.CONDITION_INDUCER,\n    'enableConditionWithIdentifier:profileIdentifier:', conditionID, profileID);\n  if (!_.isBoolean(ret.selector)) {\n    this._conditionInducerService.close();\n    this._conditionInducerService = null;\n    this.log.errorAndThrow(`Enable condition inducer error: '${JSON.stringify(ret.selector)}'`);\n  }\n  return ret.selector;\n};\n\n/**\n * Disable condition inducer\n * this call upon driver deletion\n * @returns {boolean} `true` if disable the condition succeeded\n */\ncommands.mobileDisableConditionInducer = async function disableConditionInducer () {\n  if (!this._conditionInducerService) {\n    this.log.warn('Condition inducer server is not started');\n    return false;\n  }\n  try {\n    const ret = await this._conditionInducerService.callChannel(INSTRUMENT_CHANNEL.CONDITION_INDUCER, 'disableActiveCondition');\n    if (!_.isBoolean(ret.selector)) {\n      this.log.warn(`Disable condition inducer error: '${JSON.stringify(ret.selector)}'`);\n      return false;\n    }\n    return ret.selector;\n  } finally {\n    if (this._conditionInducerService) {\n      this._conditionInducerService.close();\n      this._conditionInducerService = null;\n    }\n  }\n};\n\nexport {commands};\nexport default commands;\n"],"mappings":"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"}