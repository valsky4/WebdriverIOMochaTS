{"version":3,"file":"context.js","names":["_appiumRemoteDebugger","require","_driver","_support","_bluebird","_interopRequireDefault","_iosPerformanceLog","_lodash","NATIVE_WIN","WEBVIEW_WIN","WEBVIEW_BASE","RECENT_WEBVIEW_DETECTION_TIMEOUT_MS","commands","helpers","extensions","getCurrentContext","curContext","getContextsAndViews","useUrl","log","debug","webviews","listWebFrames","ctxs","id","view","contexts","push","toString","useNewSafari","isRealDevice","opts","safari","activateRecentWebview","timer","timing","Timer","start","spinTimeMs","spinHandles","contextId","getRecentWebviewContextId","err","message","includes","error","Error","stack","setContext","remote","cancelPageLoad","getDuration","asMilliSeconds","warn","B","delay","element","findUIElementOrElements","nativeClick","stopRemote","closeWindowBeforeDisconnecting","errorAndThrow","closeWindow","disconnect","curWebFrames","curWebCoords","setCurrentUrl","url","_currentUrl","getCurrentUrl","titleRegExp","urlRegExp","_contexts$find","_","isRegExp","errors","InvalidArgumentError","currentUrl","filter","ctx","find","title","test","isWebContext","isWebview","getNewRemoteDebugger","socketPath","device","getWebInspectorSocket","createRemoteDebugger","bundleId","additionalBundleIds","additionalWebviewBundleIds","isSafari","includeSafari","includeSafariInWebviews","pageLoadMs","platformVersion","remoteDebugProxy","garbageCollectOnExecute","util","hasValue","safariGarbageCollect","udid","logAllCommunication","safariLogAllCommunication","logAllCommunicationHexDump","safariLogAllCommunicationHexDump","socketChunkSize","safariSocketChunkSize","webInspectorMaxFrameLength","safariWebInspectorMaxFrameLength","name","callback","skipReadyCheck","alreadyInContext","desired","current","isNativeContext","context","replace","isUndefined","getContexts","NoSuchContextError","oldContext","curWindowHandle","appIdKey","pageIdKey","map","split","parseInt","selectingNewPage","selectPage","enablePerformanceLogging","logs","performance","IOSPerformanceLog","startCapture","safariConsole","startConsole","addLogLine","bind","safariNetwork","startNetwork","connectToRemoteDebugger","on","RemoteDebugger","EVENT_PAGE_CHANGE","onPageChange","EVENT_FRAMES_DETACHED","isEmpty","pluralize","length","join","connect","webviewConnectTimeout","setConnectionKey","getWebviewPages","selectApp","undefined","webviewConnectRetries","ignoreAboutBlankUrl","pageArray","mapFn","fullContextList","mobileGetContexts","waitForWebviewMs","isNumber","isNaN","curOpt","toFixed","setWindow","noop","isErrorType","NoSuchWindowError","getWindowHandle","NotImplementedError","getWindowHandles","pageChangeNotification","JSON","stringify","isConnected","newIds","newPages","keyId","isUrlIgnored","safariIgnoreWebHostnames","ignoredHosts","b","trim","ignoredHost","hostname","URL","ign","page","isKey","info","curAppIdKey","curPageIdKey","newPage","last","needsPageLoad","contextArray","isEqual","pageLoad","currentPageId","p","catch","windowHandleCache","Object","assign","_default","exports","default"],"sources":["../../../lib/commands/context.js"],"sourcesContent":["import { createRemoteDebugger, RemoteDebugger } from 'appium-remote-debugger';\nimport { errors, isErrorType } from 'appium/driver';\nimport { util, timing } from 'appium/support';\nimport B from 'bluebird';\nimport IOSPerformanceLog from '../device-log/ios-performance-log';\nimport _ from 'lodash';\n\nconst NATIVE_WIN = 'NATIVE_APP';\nconst WEBVIEW_WIN = 'WEBVIEW';\nconst WEBVIEW_BASE = `${WEBVIEW_WIN}_`;\nconst RECENT_WEBVIEW_DETECTION_TIMEOUT_MS = 90000;\n\nconst commands = {}, helpers = {}, extensions = {};\n\n\ncommands.getCurrentContext = async function getCurrentContext () { // eslint-disable-line require-await\n  if (this.curContext && this.curContext !== NATIVE_WIN) {\n    return `${WEBVIEW_BASE}${this.curContext}`;\n  }\n  return NATIVE_WIN;\n};\n\nextensions.getContextsAndViews = async function getContextsAndViews (useUrl = true) {\n  this.log.debug('Retrieving contexts and views');\n  let webviews = await this.listWebFrames(useUrl);\n\n  let ctxs = [{id: NATIVE_WIN, view: {}}];\n  this.contexts = [NATIVE_WIN];\n  for (let view of webviews) {\n    ctxs.push({id: `${WEBVIEW_BASE}${view.id}`, view});\n    this.contexts.push(view.id.toString());\n  }\n  return ctxs;\n};\n\n// Right now we don't necessarily wait for webview\n// and frame to load, which leads to race conditions and flakiness,\n// let's see if we can transition to something better\nextensions.useNewSafari = function useNewSafari () {\n  return !this.isRealDevice() && this.opts.safari;\n};\n\nextensions.activateRecentWebview = async function activateRecentWebview () {\n  this.log.debug('Activating a recent webview');\n  const timer = new timing.Timer().start();\n  const spinTimeMs = 500;\n  const spinHandles = async () => {\n    let contextId;\n    try {\n      contextId = await this.getRecentWebviewContextId(/.*/, /.*/);\n    } catch (err) {\n      if (!err.message.includes('Could not connect to a valid app after')) {\n        const error = new Error(`Could not navigate to webview! Err: ${err.message}`);\n        error.stack += `\\nCaused by: ${err.stack}`;\n        throw error;\n      }\n      this.log.debug('Could not navigate to webview. Retrying if possible.');\n    }\n    if (contextId) {\n      this.log.debug(`Picking webview '${contextId}'`);\n      await this.setContext(contextId);\n      await this.remote.cancelPageLoad();\n      return;\n    }\n\n    // no webview was found\n    if (timer.getDuration().asMilliSeconds >= RECENT_WEBVIEW_DETECTION_TIMEOUT_MS) {\n      // too slow, get out\n      throw new Error('Could not navigate to webview; there are none!');\n    }\n\n    this.log.warn('Could not find any webviews yet, refreshing/retrying');\n    if (this.isRealDevice() || !this.opts.safari) {\n      // on a real device, when not using Safari, we just want to try again\n      await B.delay(spinTimeMs);\n      return await spinHandles();\n    }\n\n    // find the reload button and tap it, if possible\n    let element;\n    try {\n      this.log.debug('Finding and tapping reload button');\n      element = await this.findUIElementOrElements('accessibility id', 'ReloadButton', '', false);\n      await this.nativeClick(element);\n    } catch (err) {\n      this.log.warn(`Error finding and tapping reload button: ${err.message}`);\n      this.log.warn('Retrying.');\n      await B.delay(spinTimeMs);\n    }\n\n    // try it all again\n    return await spinHandles();\n  };\n  await spinHandles();\n};\n\nhelpers.stopRemote = async function stopRemote (closeWindowBeforeDisconnecting = false) {\n  if (!this.remote) {\n    this.log.errorAndThrow('Tried to leave a web frame but were not in one');\n  }\n\n  if (closeWindowBeforeDisconnecting) {\n    await this.closeWindow();\n  }\n  await this.remote.disconnect();\n  this.curContext = null;\n  this.curWebFrames = [];\n  this.curWebCoords = null;\n  this.remote = null;\n};\n\nhelpers.setCurrentUrl = function setCurrentUrl (url) {\n  this._currentUrl = url;\n};\n\nhelpers.getCurrentUrl = function getCurrentUrl () {\n  return this._currentUrl;\n};\n\nextensions.getRecentWebviewContextId = async function getRecentWebviewContextId (titleRegExp, urlRegExp) {\n  if (!_.isRegExp(titleRegExp) && !_.isRegExp(urlRegExp)) {\n    throw new errors.InvalidArgumentError(\n      'A regular expression for either web view title or url must be provided'\n    );\n  }\n\n  const currentUrl = this.getCurrentUrl();\n  const contexts = _.filter(await this.getContextsAndViews(false), 'view');\n  // first try to match by current url\n  if (currentUrl) {\n    const ctx = contexts.find(({view}) => (view.url || '') === currentUrl);\n    if (ctx) {\n      return ctx.id;\n    }\n  }\n  // if not, try to match by regular expression\n  return (contexts.find(({view}) =>\n    view.title && titleRegExp?.test(view.title) || view.url && urlRegExp?.test(view.url)\n  ))?.id;\n};\n\nextensions.isWebContext = function isWebContext () {\n  return !!this.curContext && this.curContext !== NATIVE_WIN;\n};\n\nextensions.isWebview = function isWebview () {\n  return this.isWebContext();\n};\n\nextensions.getNewRemoteDebugger = async function getNewRemoteDebugger () {\n  let socketPath;\n  if (!this.isRealDevice()) {\n    socketPath = await this.opts.device.getWebInspectorSocket();\n  }\n  return createRemoteDebugger({\n    bundleId: this.opts.bundleId,\n    additionalBundleIds: this.opts.additionalWebviewBundleIds,\n    isSafari: this.isSafari(),\n    includeSafari: this.opts.includeSafariInWebviews,\n    useNewSafari: this.useNewSafari(),\n    pageLoadMs: this.pageLoadMs,\n    platformVersion: this.opts.platformVersion,\n    socketPath,\n    remoteDebugProxy: this.opts.remoteDebugProxy,\n    garbageCollectOnExecute: util.hasValue(this.opts.safariGarbageCollect)\n      ? !!this.opts.safariGarbageCollect\n      : false,\n    udid: this.opts.udid,\n    logAllCommunication: this.opts.safariLogAllCommunication,\n    logAllCommunicationHexDump: this.opts.safariLogAllCommunicationHexDump,\n    socketChunkSize: this.opts.safariSocketChunkSize,\n    webInspectorMaxFrameLength: this.opts.safariWebInspectorMaxFrameLength\n  }, this.isRealDevice());\n};\n\n/**\n * Set context\n *\n * @param {?string} name - The name of context to set. It could be 'null' as NATIVE_WIN.\n * @param {callback} callback The callback. (It is not called in this method)\n * @param {boolean} skipReadyCheck - Whether it waits for the new context is ready\n */\ncommands.setContext = async function setContext (name, callback, skipReadyCheck) {\n  function alreadyInContext (desired, current) {\n    return (desired === current ||\n      (desired === null && current === NATIVE_WIN) ||\n      (desired === NATIVE_WIN && current === null));\n  }\n  function isNativeContext (context) {\n    return context === NATIVE_WIN || context === null;\n  }\n\n  // allow the full context list to be passed in\n  if (name && name.id) {\n    name = name.id;\n  }\n\n  this.log.debug(`Attempting to set context to '${name || NATIVE_WIN}' from '${this.curContext ? this.curContext : NATIVE_WIN}'`);\n\n  if (alreadyInContext(name, this.curContext) || alreadyInContext(_.replace(name, WEBVIEW_BASE, ''), this.curContext)) {\n    // already in the named context, no need to do anything\n    this.log.debug(`Already in '${name || NATIVE_WIN}' context. Doing nothing.`);\n    return;\n  }\n  if (isNativeContext(name)) {\n    // switching into the native context\n    this.curContext = null;\n    return;\n  }\n\n  // switching into a webview context\n\n  // if contexts have not already been retrieved, get them\n  if (_.isUndefined(this.contexts)) {\n    await this.getContexts();\n  }\n\n  let contextId = _.replace(name, WEBVIEW_BASE, '');\n  if (contextId === '') {\n    // allow user to pass in \"WEBVIEW\" without an index\n    // the second context will be the first webview as\n    // the first is always NATIVE_APP\n    contextId = this.contexts[1];\n  }\n  if (!_.includes(this.contexts, contextId)) {\n    throw new errors.NoSuchContextError();\n  }\n\n  const oldContext = this.curContext;\n  this.curContext = this.curWindowHandle = contextId;\n\n  // `contextId` will be in the form of `appId.pageId` in this case\n  const [appIdKey, pageIdKey] = _.map(contextId.split('.'), (id) => parseInt(id, 10));\n  try {\n    this.selectingNewPage = true;\n    await this.remote.selectPage(appIdKey, pageIdKey, skipReadyCheck);\n  } catch (err) {\n    this.curContext = this.curWindowHandle = oldContext;\n    throw err;\n  } finally {\n    this.selectingNewPage = false;\n  }\n\n  // attempt to start performance logging, if requested\n  if (this.opts.enablePerformanceLogging && this.remote) {\n    this.log.debug(`Starting performance log on '${this.curContext}'`);\n    this.logs.performance = new IOSPerformanceLog(this.remote);\n    await this.logs.performance.startCapture();\n  }\n\n  // start safari logging if the logs handlers are active\n  if (name && name !== NATIVE_WIN && this.logs) {\n    if (this.logs.safariConsole) {\n      await this.remote.startConsole(this.logs.safariConsole.addLogLine.bind(this.logs.safariConsole));\n    }\n    if (this.logs.safariNetwork) {\n      await this.remote.startNetwork(this.logs.safariNetwork.addLogLine.bind(this.logs.safariNetwork));\n    }\n  }\n};\n\nextensions.connectToRemoteDebugger = async function connectToRemoteDebugger () {\n  this.remote = await this.getNewRemoteDebugger();\n\n  this.remote.on(RemoteDebugger.EVENT_PAGE_CHANGE, this.onPageChange.bind(this));\n  this.remote.on(RemoteDebugger.EVENT_FRAMES_DETACHED, () => {\n    if (!_.isEmpty(this.curWebFrames)) {\n      this.log.debug(`Clearing ${util.pluralize('frame', this.curWebFrames.length, true)}: ${this.curWebFrames.join(', ')}`);\n    }\n    this.curWebFrames = [];\n  });\n\n  await this.remote.connect(this.opts.webviewConnectTimeout);\n};\n\nextensions.listWebFrames = async function listWebFrames (useUrl = true) {\n  useUrl = useUrl && !this.isRealDevice() && !!this.getCurrentUrl();\n  this.log.debug(`Selecting by url: ${useUrl}${useUrl ? ` (expected url: '${this.getCurrentUrl()}')` : ''}`);\n\n  if (!this.remote) {\n    await this.connectToRemoteDebugger();\n    if (!this.remote.appIdKey) {\n      await this.remote.setConnectionKey();\n    }\n  }\n  const getWebviewPages = async () => {\n    try {\n      return await this.remote.selectApp(\n        useUrl ? this.getCurrentUrl() : undefined,\n        this.opts.webviewConnectRetries,\n        this.opts.ignoreAboutBlankUrl\n      );\n    } catch (err) {\n      this.log.debug(`No available web pages: ${err.message}`);\n      return [];\n    }\n  };\n  const pageArray = await getWebviewPages();\n  if (_.isEmpty(pageArray)) {\n    // we have no web frames, but continue anyway\n    this.log.debug('No web frames found.');\n  }\n  return pageArray;\n};\n\ncommands.getContexts = async function getContexts () {\n  this.log.debug('Getting list of available contexts');\n  const contexts = await this.getContextsAndViews(false);\n\n  const mapFn = this.opts.fullContextList\n    ? function (context) {\n      return {\n        id: context.id.toString(),\n        title: context.view.title,\n        url: context.view.url,\n        bundleId: context.view.bundleId,\n      };\n    }\n    : (context) => context.id.toString();\n  return contexts.map(mapFn);\n};\n\n/**\n * @typedef {Object} Context\n *\n * @property {string} id - The identifier of the context. The native context\n *                          will be 'NATIVE_APP' and the webviews will be\n *                          'WEBVIEW_xxx'\n * @property {?string} title - The title associated with the webview content\n * @property {?string} url - The url associated with the webview content\n */\n\n/**\n * Get the contexts available, with information about the url and title of each\n * webview\n *\n * @param {Object} opts - Options set, which can include `waitForWebviewMs` to\n *                        specify the period to poll for available webviews\n * @returns {Array} List of Context objects\n */\nextensions.mobileGetContexts = async function mobileGetContexts (opts = {}) {\n  let {\n    waitForWebviewMs = 0,\n  } = opts;\n\n  // make sure it is a number, so the duration check works properly\n  if (!_.isNumber(waitForWebviewMs)) {\n    waitForWebviewMs = parseInt(waitForWebviewMs, 10);\n    if (isNaN(waitForWebviewMs)) {\n      waitForWebviewMs = 0;\n    }\n  }\n\n  const curOpt = this.opts.fullContextList;\n  this.opts.fullContextList = true;\n\n  const timer = new timing.Timer().start();\n  try {\n    let contexts;\n    do {\n      contexts = await this.getContexts();\n\n      if (contexts.length >= 2) {\n        this.log.debug(`Found webview context after ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n        return contexts;\n      }\n      this.log.debug(`No webviews found in ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    } while (timer.getDuration().asMilliSeconds < waitForWebviewMs);\n    return contexts;\n  } finally {\n    // reset the option so there are no side effects\n    this.opts.fullContextList = curOpt;\n  }\n};\n\ncommands.setWindow = async function setWindow (name, skipReadyCheck) {\n  try {\n    await this.setContext(name, _.noop, skipReadyCheck);\n  } catch (err) {\n    // translate the error in terms of windows\n    throw isErrorType(err, errors.NoSuchContextError)\n      ? new errors.NoSuchWindowError()\n      : err;\n  }\n};\n\ncommands.getWindowHandle = async function getWindowHandle () { // eslint-disable-line require-await\n  if (!this.isWebContext()) {\n    throw new errors.NotImplementedError();\n  }\n  this.log.debug(`Getting current window handle`);\n  return this.curContext;\n};\n\ncommands.getWindowHandles = async function getWindowHandles () {\n  if (!this.isWebContext()) {\n    throw new errors.NotImplementedError();\n  }\n  this.log.debug('Getting list of available window handles');\n  const contexts = await this.getContextsAndViews(false);\n  return contexts\n    // get rid of the native app context\n    .filter((context) => context.id !== NATIVE_WIN)\n    // get the `app.id` format expected\n    .map((context) => context.view.id.toString());\n};\n\nextensions.onPageChange = async function onPageChange (pageChangeNotification) {\n  this.log.debug(`Remote debugger notified us of a new page listing: ${JSON.stringify(pageChangeNotification)}`);\n  if (this.selectingNewPage) {\n    this.log.debug('We are in the middle of selecting a page, ignoring');\n    return;\n  }\n  if (!this.remote || !this.remote.isConnected) {\n    this.log.debug('We have not yet connected, ignoring');\n    return;\n  }\n\n  const {appIdKey, pageArray} = pageChangeNotification;\n\n  let newIds = [];\n  let newPages = [];\n  let keyId = null;\n\n  // Checks if a URL is blacklisted in the 'safariIgnoreWebHostnames' capability\n  function isUrlIgnored (url, safariIgnoreWebHostnames) {\n    const ignoredHosts = (safariIgnoreWebHostnames || '')\n      .split(',')\n      .map((b) => b.trim())\n      .filter((b) => !_.isEmpty(b));\n    for (const ignoredHost of ignoredHosts) {\n      if (ignoredHost === 'about:blank' && url === 'about:blank') {\n        return true;\n      } else {\n        try {\n          const hostname = new URL(url).hostname;\n          if (hostname === ignoredHost) {\n            return true;\n          }\n        } catch (ign) {\n          // do nothing if invalid URL\n        }\n      }\n    }\n    return false;\n  }\n\n  for (const page of pageArray) {\n    const id = page.id.toString();\n    newIds.push(id);\n    if (page.isKey) {\n      keyId = id;\n    }\n    const contextId = `${appIdKey}.${id}`;\n\n    // add if this is a new page\n    if (!_.includes(this.contexts, contextId)) {\n      if (isUrlIgnored(page.url, this.opts.safariIgnoreWebHostnames)) {\n        this.log.info(`Not tracking '${page.url}' page because it is blacklisted. ` +\n          `'safariIgnoreWebHostnames'=${this.opts.safariIgnoreWebHostnames}`);\n      } else {\n        newPages.push(id);\n        this.contexts.push(contextId);\n      }\n    }\n  }\n\n  if (!keyId) {\n    // if there is no key id, pull the first id from the page array and use that\n    // as a stand in\n    this.log.debug('No key id found. Choosing first id from page array');\n    keyId = newIds[0] || null;\n  }\n\n  if (!util.hasValue(this.curContext)) {\n    this.log.debug('We do not appear to have window set yet, ignoring');\n    return;\n  }\n\n  const [curAppIdKey, curPageIdKey] = this.curContext.split('.');\n\n  if (curAppIdKey !== appIdKey) {\n    this.log.debug('Page change not referring to currently selected app, ignoring.');\n    return;\n  }\n\n  let newPage = null;\n  if (newPages.length) {\n    newPage = _.last(newPages);\n    this.log.debug(`We have new pages, selecting page '${newPage}'`);\n  } else if (!_.includes(newIds, curPageIdKey)) {\n    this.log.debug('New page listing from remote debugger does not contain ' +\n                 'current window; assuming it is closed');\n    if (!util.hasValue(keyId)) {\n      this.log.error('Do not have our current window anymore, and there ' +\n                   'are not any more to load! Doing nothing...');\n      this.setCurrentUrl(undefined);\n      return;\n    }\n\n    this.log.debug(`Debugger already selected page '${keyId}', ` +\n                 `confirming that choice.`);\n    this.curContext = `${appIdKey}.${keyId}`;\n    newPage = keyId;\n  } else {\n    // at this point, there are no new pages, and the current page still exists\n    this.log.debug('Checking if page needs to load');\n    // If a window navigates to an anchor it doesn't always fire a page\n    // callback event. Let's check if we wound up in such a situation.\n    const needsPageLoad = (() => {\n      // need to map the page ids to context ids\n      const contextArray = _.map(pageArray, (page) => `${appIdKey}.${page.id}`);\n      // check if the current context exists in both our recorded contexts,\n      // and the page array\n      return !_.isEqual(_.find(this.contexts, this.curContext), _.find(contextArray, this.curContext));\n    })();\n\n    if (needsPageLoad) {\n      this.log.debug('Page load needed. Loading...');\n      await this.remote.pageLoad();\n    }\n\n    this.log.debug('New page listing is same as old, doing nothing');\n  }\n\n  // make sure that the page listing isn't indicating a redirect\n  if (util.hasValue(this.curContext)) {\n    let currentPageId = parseInt(_.last(this.curContext.split('.')), 10);\n    let page = _.find(pageArray, (p) => parseInt(p.id, 10) === currentPageId);\n    if (page && page.url !== this.getCurrentUrl()) {\n      this.log.debug(`Redirected from '${this.getCurrentUrl()}' to '${page.url}'`);\n      this.setCurrentUrl(page.url);\n    }\n  }\n\n  if (util.hasValue(newPage)) {\n    this.selectingNewPage = true;\n    const oldContext = this.curContext;\n    this.curContext = `${appIdKey}.${newPage}`;\n    // do not wait, as this can take a long time, and the response is not necessary\n    // eslint-disable-next-line promise/prefer-await-to-callbacks, promise/prefer-await-to-then\n    this.remote.selectPage(appIdKey, parseInt(newPage, 10)).catch((err) => {\n      this.log.warn(`Failed to select page: ${err.message}`);\n      this.curContext = oldContext;\n    });\n    this.selectingNewPage = false;\n  }\n  this.windowHandleCache = pageArray;\n};\n\n\nObject.assign(commands, extensions, helpers);\nexport default commands;\n"],"mappings":"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"}