{"version":3,"file":"execute.js","names":["_lodash","_interopRequireDefault","require","_driver","_support","extensions","receiveAsyncResponse","status","value","log","debug","JSON","stringify","util","hasValue","asyncPromise","warn","reject","errorFromCode","message","_","isString","error","errorFromW3CJsonCode","stacktrace","resolve","execute","script","args","match","replace","trim","executeMobile","isArray","isWebContext","convertElementsForAtoms","result","executeAtom","cacheWebElements","errors","NotImplementedError","executeAsync","asyncWaitMs","promise","remote","executeAtomAsync","curWebFrames","waitForAtom","mobileCommand","opts","commandMap","tap","scroll","selectPickerWheelValue","swipe","pinch","doubleTap","twoFingerTap","tapWithNumberOfTaps","touchAndHold","dragFromToForDuration","rotateElement","dragFromToWithVelocity","forcePress","scrollToElement","alert","setPasteboard","getPasteboard","source","getContexts","installApp","isAppInstalled","removeApp","launchApp","terminateApp","killApp","queryAppState","activateApp","listApps","viewportScreenshot","viewportRect","startPerfRecord","stopPerfRecord","installCertificate","listCertificates","startLogsBroadcast","stopLogsBroadcast","batteryInfo","deviceInfo","getDeviceTime","activeAppInfo","deviceScreenInfo","pressButton","enrollBiometric","sendBiometricMatch","isBiometricEnrolled","clearKeychains","getPermission","setPermission","resetPermission","getAppearance","setAppearance","siriCommand","pushFile","pullFile","pullFolder","deleteFile","deleteFolder","startAudioRecording","stopAudioRecording","runXCTest","installXCTestBundle","listXCTestBundles","listXCTestsInTestBundle","pushNotification","expectNotification","performIoHidEvent","configureLocalization","resetLocationService","startPcap","stopPcap","listConditionInducers","enableConditionInducer","disableConditionInducer","updateSafariPreferences","deepLink","setSimulatedLocation","getSimulatedLocation","resetSimulatedLocation","has","UnknownCommandError","keys","join","_default","exports","default"],"sources":["../../../lib/commands/execute.js"],"sourcesContent":["import _ from 'lodash';\nimport {\n  errors, errorFromCode, errorFromW3CJsonCode\n} from 'appium/driver';\nimport { util } from 'appium/support';\n\nconst extensions = {};\n\nextensions.receiveAsyncResponse = async function receiveAsyncResponse (status, value) { // eslint-disable-line require-await\n  this.log.debug(`Received async response: ${JSON.stringify(value)}`);\n  if (!util.hasValue(this.asyncPromise)) {\n    this.log.warn(`Received async response when we were not expecting one! ` +\n      `Response was: ${JSON.stringify(value)}`);\n    return;\n  }\n\n  if (util.hasValue(status) && status !== 0) {\n    // MJSONWP\n    return this.asyncPromise.reject(errorFromCode(status, value.message));\n  }\n  if (!util.hasValue(status) && value && _.isString(value.error)) {\n    // W3C\n    return this.asyncPromise.reject(errorFromW3CJsonCode(value.error, value.message, value.stacktrace));\n  }\n  return this.asyncPromise.resolve(value);\n};\n\nextensions.execute = async function execute (script, args) {\n  if (script.match(/^mobile:/)) {\n    script = script.replace(/^mobile:/, '').trim();\n    return await this.executeMobile(script, _.isArray(args) ? args[0] : args);\n  } else if (this.isWebContext()) {\n    args = this.convertElementsForAtoms(args);\n    const result = await this.executeAtom('execute_script', [script, args]);\n    return this.cacheWebElements(result);\n  } else {\n    throw new errors.NotImplementedError();\n  }\n};\n\nextensions.executeAsync = async function executeAsync (script, args) {\n  if (!this.isWebContext()) {\n    throw new errors.NotImplementedError();\n  }\n\n  args = this.convertElementsForAtoms(args);\n  this.asyncWaitMs = this.asyncWaitMs || 0;\n  const promise = this.remote.executeAtomAsync('execute_async_script', [\n    script, args, this.asyncWaitMs\n  ], this.curWebFrames);\n  return this.cacheWebElements(await this.waitForAtom(promise));\n};\n\nextensions.executeMobile = async function executeMobile (mobileCommand, opts = {}) {\n  const commandMap = {\n    //region gestures support\n    tap: 'mobileTap',\n    scroll: 'mobileScroll',\n    selectPickerWheelValue: 'mobileSelectPickerWheelValue',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618668-swipeleft?language=objc\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618674-swiperight?language=objc\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618667-swipeup?language=objc\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618664-swipedown?language=objc\n    swipe: 'mobileSwipe',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618669-pinchwithscale?language=objc\n    pinch: 'mobilePinch',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618673-doubletap?language=objc\n    doubleTap: 'mobileDoubleTap',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618675-twofingertap?language=objc\n    twoFingerTap: 'mobileTwoFingerTap',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618671-tapwithnumberoftaps?language=objc\n    tapWithNumberOfTaps: 'mobileTapWithNumberOfTaps',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618663-pressforduration?language=objc\n    touchAndHold: 'mobileTouchAndHold',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618670-pressforduration?language=objc\n    dragFromToForDuration: 'mobileDragFromToForDuration',\n    // https://developer.apple.com/documentation/xctest/xcuielement/1618665-rotate?language=objc\n    rotateElement: 'mobileRotateElement',\n    // https://developer.apple.com/documentation/xctest/xcuicoordinate/3551692-pressforduration?language=objc\n    dragFromToWithVelocity: 'mobileDragFromToWithVelocity',\n    forcePress: 'mobileForcePress',\n    scrollToElement: 'mobileScrollToElement',\n\n    //endregion gestures support\n    alert: 'mobileHandleAlert',\n\n    setPasteboard: 'mobileSetPasteboard',\n    getPasteboard: 'mobileGetPasteboard',\n\n    source: 'mobileGetSource',\n    getContexts: 'mobileGetContexts',\n\n    //region multiple apps management\n    installApp: 'mobileInstallApp',\n    isAppInstalled: 'mobileIsAppInstalled',\n    removeApp: 'mobileRemoveApp',\n    launchApp: 'mobileLaunchApp',\n    terminateApp: 'mobileTerminateApp',\n    killApp: 'mobileKillApp',\n    queryAppState: 'mobileQueryAppState',\n    activateApp: 'mobileActivateApp',\n    listApps: 'mobileListApps',\n    //endregion multiple apps management\n\n    viewportScreenshot: 'getViewportScreenshot',\n    viewportRect: 'getViewportRect',\n\n    startPerfRecord: 'mobileStartPerfRecord',\n    stopPerfRecord: 'mobileStopPerfRecord',\n\n    installCertificate: 'mobileInstallCertificate',\n    listCertificates: 'mobileListCertificates',\n\n    startLogsBroadcast: 'mobileStartLogsBroadcast',\n    stopLogsBroadcast: 'mobileStopLogsBroadcast',\n\n    batteryInfo: 'mobileGetBatteryInfo',\n    deviceInfo: 'mobileGetDeviceInfo',\n    getDeviceTime: 'mobileGetDeviceTime',\n    activeAppInfo: 'mobileGetActiveAppInfo',\n    deviceScreenInfo: 'getScreenInfo',\n\n    pressButton: 'mobilePressButton',\n\n    enrollBiometric: 'mobileEnrollBiometric',\n    sendBiometricMatch: 'mobileSendBiometricMatch',\n    isBiometricEnrolled: 'mobileIsBiometricEnrolled',\n\n    clearKeychains: 'mobileClearKeychains',\n\n    getPermission: 'mobileGetPermission',\n    setPermission: 'mobileSetPermissions',\n    resetPermission: 'mobileResetPermission',\n\n    getAppearance: 'mobileGetAppearance',\n    setAppearance: 'mobileSetAppearance',\n\n    siriCommand: 'mobileSiriCommand',\n\n    pushFile: 'mobilePushFile',\n    pullFile: 'mobilePullFile',\n    pullFolder: 'mobilePullFolder',\n    deleteFile: 'mobileDeleteFile',\n    deleteFolder: 'mobileDeleteFolder',\n\n    startAudioRecording: 'startAudioRecording',\n    stopAudioRecording: 'stopAudioRecording',\n\n    // XCTest\n    runXCTest: 'mobileRunXCTest',\n    installXCTestBundle: 'mobileInstallXCTestBundle',\n    listXCTestBundles: 'mobileListXCTestBundles',\n    listXCTestsInTestBundle: 'mobileListXCTestsInTestBundle',\n\n    pushNotification: 'mobilePushNotification',\n    expectNotification: 'mobileExpectNotification',\n\n    performIoHidEvent: 'mobilePerformIoHidEvent',\n\n    configureLocalization: 'mobileConfigureLocalization',\n\n    resetLocationService: 'mobileResetLocationService',\n\n    startPcap: 'mobileStartPcap',\n    stopPcap: 'mobileStopPcap',\n    listConditionInducers: 'mobileListConditionInducers',\n    enableConditionInducer: 'mobileEnableConditionInducer',\n    disableConditionInducer: 'mobileDisableConditionInducer',\n\n    updateSafariPreferences: 'mobileUpdateSafariPreferences',\n\n    deepLink: 'mobileDeepLink',\n\n    setSimulatedLocation: 'mobileSetSimulatedLocation',\n    getSimulatedLocation: 'mobileGetSimulatedLocation',\n    resetSimulatedLocation: 'mobileResetSimulatedLocation',\n  };\n\n  if (!_.has(commandMap, mobileCommand)) {\n    throw new errors.UnknownCommandError(`Unknown mobile command '${mobileCommand}'. Only ${_.keys(commandMap).join(', ')} commands are supported.`);\n  }\n  return await this[commandMap[mobileCommand]](opts);\n};\n\nexport default extensions;\n"],"mappings":"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"}