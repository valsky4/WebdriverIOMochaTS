{"version":3,"file":"find.js","names":["_lodash","_interopRequireDefault","require","_cssConverter","_driver","_support","MAGIC_FIRST_VIS_CHILD_SEL","MAGIC_SCROLLABLE_SEL","WDA_CLASS_CHAIN_STRATEGY","helpers","commands","extensions","exports","findElOrEls","strategy","selector","mult","context","isWebview","findWebElementOrElements","findNativeElementOrElements","initSelector","rewroteSelector","CssConverter","toIosClassChainSelector","stripViewFromSelector","keepView","includes","indexOf","length","substr","startsWith","substring","test","getFirstVisibleChild","rewriteMagicScrollable","log","replace","str","g1","g2","g3","info","doNativeFind","util","unwrapElement","endpoint","body","using","value","method","els","implicitWaitForCondition","proxyCommand","err","_","isEmpty","message","match","errors","NoSuchElementError","Error","index","nthChild","visible","getAttribute","pred","map","t","join","Object","assign","_default","default"],"sources":["../../../lib/commands/find.js"],"sourcesContent":["import _ from 'lodash';\nimport CssConverter from '../css-converter';\nimport { errors } from 'appium/driver';\nimport { util } from 'appium/support';\n\n// we override the xpath search for this first-visible-child selector, which\n// looks like /*[@firstVisible=\"true\"]\nconst MAGIC_FIRST_VIS_CHILD_SEL = /\\/\\*\\[@firstVisible\\s*=\\s*('|\")true\\1\\]/;\n\n// we likewise override xpath search to provide a shortcut for finding all\n// scrollable elements\nconst MAGIC_SCROLLABLE_SEL = /\\/\\/\\*\\[@scrollable\\s*=\\s*('|\")true\\1\\]/;\n\nconst WDA_CLASS_CHAIN_STRATEGY = 'class chain';\n\nlet helpers = {}, commands = {}, extensions = {};\n\nhelpers.findElOrEls = async function findElOrEls (strategy, selector, mult, context) {\n  if (this.isWebview()) {\n    return await this.findWebElementOrElements(strategy, selector, mult, context);\n  } else {\n    return await this.findNativeElementOrElements(strategy, selector, mult, context);\n  }\n};\n\nhelpers.findNativeElementOrElements = async function findNativeElementOrElements (strategy, selector, mult, context) {\n  const initSelector = selector;\n  let rewroteSelector = false;\n  if (strategy === '-ios predicate string') {\n    // WebDriverAgent uses 'predicate string'\n    strategy = 'predicate string';\n  } else if (strategy === '-ios class chain') {\n    // WebDriverAgent uses 'class chain'\n    strategy = WDA_CLASS_CHAIN_STRATEGY;\n  } else if (strategy === 'css selector') {\n    strategy = WDA_CLASS_CHAIN_STRATEGY;\n    selector = CssConverter.toIosClassChainSelector(selector);\n  }\n\n  // Check if the word 'View' is appended to selector and if it is, strip it out\n  function stripViewFromSelector (selector) {\n    // Don't strip it out if it's one of these 4 element types\n    // (see https://github.com/facebook/WebDriverAgent/blob/master/WebDriverAgentLib/Utilities/FBElementTypeTransformer.m for reference)\n    const keepView = [\n      'XCUIElementTypeScrollView',\n      'XCUIElementTypeCollectionView',\n      'XCUIElementTypeTextView',\n      'XCUIElementTypeWebView',\n    ].includes(selector);\n\n    if (!keepView && selector.indexOf('View') === selector.length - 4) {\n      return selector.substr(0, selector.length - 4);\n    } else {\n      return selector;\n    }\n  }\n\n  if (strategy === 'class name') {\n    // XCUITest classes have `XCUIElementType` prepended\n    // first check if there is the old `UIA` prefix\n    if (selector.startsWith('UIA')) {\n      selector = selector.substring(3);\n    }\n    // now check if we need to add `XCUIElementType`\n    if (!selector.startsWith('XCUIElementType')) {\n      selector = stripViewFromSelector(`XCUIElementType${selector}`);\n      rewroteSelector = true;\n    }\n  }\n\n  if (strategy === 'xpath' && MAGIC_FIRST_VIS_CHILD_SEL.test(selector)) {\n    return await this.getFirstVisibleChild(mult, context);\n  } else if (strategy === 'xpath' && MAGIC_SCROLLABLE_SEL.test(selector)) {\n    [strategy, selector] = rewriteMagicScrollable(mult, this.log);\n  } else if (strategy === 'xpath') {\n    // Replace UIA if it comes after a forward slash or is at the beginning of the string\n    selector = selector.replace(/(^|\\/)(UIA)([^[/]+)/g, (str, g1, g2, g3) => {\n      rewroteSelector = true;\n      return g1 + stripViewFromSelector(`XCUIElementType${g3}`);\n    });\n  }\n\n  if (rewroteSelector) {\n    this.log.info(`Rewrote incoming selector from '${initSelector}' to ` +\n             `'${selector}' to match XCUI type. You should consider ` +\n             `updating your tests to use the new selectors directly`);\n  }\n\n  return await this.doNativeFind(strategy, selector, mult, context);\n};\n\nhelpers.doNativeFind = async function doNativeFind (strategy, selector, mult, context) {\n  context = util.unwrapElement(context);\n\n  let endpoint = `/element${context ? `/${context}/element` : ''}${mult ? 's' : ''}`;\n\n  let body = {\n    using: strategy,\n    value: selector\n  };\n\n  let method = 'POST';\n\n  // This is either an array is mult === true\n  // or an object if mult === false\n  let els;\n  try {\n    await this.implicitWaitForCondition(async () => {\n      try {\n        els = await this.proxyCommand(endpoint, method, body);\n      } catch (err) {\n        els = [];\n      }\n      // we succeed if we get some elements\n      return !_.isEmpty(els);\n    });\n  } catch (err) {\n    if (err.message && err.message.match(/Condition unmet/)) {\n      // condition was not met setting res to empty array\n      els = [];\n    } else {\n      throw err;\n    }\n  }\n  if (mult) {\n    return els;\n  }\n  if (_.isEmpty(els)) {\n    throw new errors.NoSuchElementError();\n  }\n  return els;\n};\n\nhelpers.getFirstVisibleChild = async function getFirstVisibleChild (mult, context) {\n  this.log.info(`Getting first visible child`);\n  if (mult) {\n    throw new Error('Cannot get multiple first visible children!');\n  }\n  if (!context) {\n    throw new Error('Cannot get first visible child without a context element');\n  }\n  let index = 1;\n  // loop through children via class-chain finds, until we run out of children\n  // or we find a visible one. This loop looks infinite but its not, because at\n  // some point the call to doNativeFind will throw with an Element Not Found\n  // error, when the index gets higher than the number of child elements. This\n  // is what we want because that error will halt the loop and make it all the\n  // way to the client.\n  while (true) { // eslint-disable-line no-constant-condition\n    const strategy = WDA_CLASS_CHAIN_STRATEGY;\n    const selector = `*[${index}]`;\n    const nthChild = await this.doNativeFind(strategy, selector, false, context);\n    const visible = await this.getAttribute('visible', nthChild);\n    if (visible === 'true') {\n      this.log.info(`Found first visible child at position ${index}`);\n      return nthChild;\n    }\n    index++;\n  }\n};\n\nfunction rewriteMagicScrollable (mult, log = null) {\n  const pred = [\n    'ScrollView',\n    'Table',\n    'CollectionView',\n    'WebView'\n  ].map((t) => `type == \"XCUIElementType${t}\"`).join(' OR ');\n  const strategy = WDA_CLASS_CHAIN_STRATEGY;\n  let selector = '**/*[`' + pred + '`]';\n  if (!mult) {\n    selector += '[1]';\n  }\n  log?.info('Rewrote request for scrollable descendants to class chain ' +\n    `format with selector '${selector}'`);\n  return [strategy, selector];\n}\n\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers};\nexport default extensions;\n"],"mappings":"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"}