{"version":3,"file":"geolocation.js","names":["_utils","require","commands","exports","mobileGetSimulatedLocation","proxyCommand","mobileSetSimulatedLocation","opts","latitude","longitude","requireArgs","mobileResetSimulatedLocation","_default","default"],"sources":["../../../lib/commands/geolocation.js"],"sourcesContent":["import { requireArgs } from '../utils';\n\nconst commands = {};\n\n/**\n * @typedef {Object} GeolocationInfo\n * @property {number} latitude Measurement of distance north or south of the Equator.\n * @property {number} longitude Measurement of distance east or west of the prime meridian.\n */\n\n/**\n * Retrieves simulated geolocation value.\n * Only works since Xcode 14.3/iOS 16.4\n *\n * @returns {GeolocationInfo} All entry values are set to null if no simulated location has\n * been set prior to calling this API.\n * @throws {Error} If the device under test does not support gelolocation simulation.\n */\ncommands.mobileGetSimulatedLocation = async function mobileGetSimulatedLocation () {\n  return await this.proxyCommand('/wda/simulatedLocation', 'GET');\n};\n\n/**\n * Sets simulated geolocation value.\n * Only works since Xcode 14.3/iOS 16.4\n *\n * @param {GeolocationInfo} opts\n * @throws {Error} If the device under test does not support gelolocation simulation.\n */\ncommands.mobileSetSimulatedLocation = async function mobileGetSimulatedLocation (opts = {}) {\n  const {latitude, longitude} = requireArgs(['latitude', 'longitude'], opts);\n  return await this.proxyCommand('/wda/simulatedLocation', 'POST', {latitude, longitude});\n};\n\n/**\n * Resets simulated geolocation value.\n * Only works since Xcode 14.3/iOS 16.4.\n * ! Do not forget to reset the simulated geolocation value after your automated test is finished.\n * ! If the value is not reset explcitly then the simulated one will remain until the next device restart.\n *\n * @throws {Error} If the device under test does not support gelolocation simulation.\n */\ncommands.mobileResetSimulatedLocation = async function mobileGetSimulatedLocation () {\n  return await this.proxyCommand('/wda/simulatedLocation', 'DELETE');\n};\n\nexport { commands };\nexport default commands;\n"],"mappings":";;;;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAG,CAAC,CAAC;AAACC,OAAA,CAAAD,QAAA,GAAAA,QAAA;AAgBpBA,QAAQ,CAACE,0BAA0B,GAAG,eAAeA,0BAA0BA,CAAA,EAAI;EACjF,OAAO,MAAM,IAAI,CAACC,YAAY,CAAC,wBAAwB,EAAE,KAAK,CAAC;AACjE,CAAC;AASDH,QAAQ,CAACI,0BAA0B,GAAG,eAAeF,0BAA0BA,CAAEG,IAAI,GAAG,CAAC,CAAC,EAAE;EAC1F,MAAM;IAACC,QAAQ;IAAEC;EAAS,CAAC,GAAG,IAAAC,kBAAW,EAAC,CAAC,UAAU,EAAE,WAAW,CAAC,EAAEH,IAAI,CAAC;EAC1E,OAAO,MAAM,IAAI,CAACF,YAAY,CAAC,wBAAwB,EAAE,MAAM,EAAE;IAACG,QAAQ;IAAEC;EAAS,CAAC,CAAC;AACzF,CAAC;AAUDP,QAAQ,CAACS,4BAA4B,GAAG,eAAeP,0BAA0BA,CAAA,EAAI;EACnF,OAAO,MAAM,IAAI,CAACC,YAAY,CAAC,wBAAwB,EAAE,QAAQ,CAAC;AACpE,CAAC;AAAC,IAAAO,QAAA,GAGaV,QAAQ;AAAAC,OAAA,CAAAU,OAAA,GAAAD,QAAA"}