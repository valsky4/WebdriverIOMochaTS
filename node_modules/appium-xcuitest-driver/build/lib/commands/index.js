"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
require("source-map-support/register");
var _context = _interopRequireDefault(require("./context"));
var _execute = _interopRequireDefault(require("./execute"));
var _gesture = _interopRequireDefault(require("./gesture"));
var _find = _interopRequireDefault(require("./find"));
var _proxyHelper = _interopRequireDefault(require("./proxy-helper"));
var _alert = _interopRequireDefault(require("./alert"));
var _source = _interopRequireDefault(require("./source"));
var _general = _interopRequireDefault(require("./general"));
var _log = _interopRequireDefault(require("./log"));
var _web = _interopRequireDefault(require("./web"));
var _timeouts = _interopRequireDefault(require("./timeouts"));
var _navigation = _interopRequireDefault(require("./navigation"));
var _element = _interopRequireDefault(require("./element"));
var _fileMovement = _interopRequireDefault(require("./file-movement"));
var _screenshots = _interopRequireDefault(require("./screenshots"));
var _pasteboard = _interopRequireDefault(require("./pasteboard"));
var _location = _interopRequireDefault(require("./location"));
var _recordAudio = _interopRequireDefault(require("./record-audio"));
var _recordscreen = _interopRequireDefault(require("./recordscreen"));
var _lock = _interopRequireDefault(require("./lock"));
var _appManagement = _interopRequireDefault(require("./app-management"));
var _performance = _interopRequireDefault(require("./performance"));
var _clipboard = _interopRequireDefault(require("./clipboard"));
var _certificate = _interopRequireDefault(require("./certificate"));
var _battery = _interopRequireDefault(require("./battery"));
var _deviceInfo = _interopRequireDefault(require("./deviceInfo"));
var _activeAppInfo = _interopRequireDefault(require("./activeAppInfo"));
var _cookies = _interopRequireDefault(require("./cookies"));
var _biometric = _interopRequireDefault(require("./biometric"));
var _keychains = _interopRequireDefault(require("./keychains"));
var _permissions = _interopRequireDefault(require("./permissions"));
var _appearance = _interopRequireDefault(require("./appearance"));
var _xctest = _interopRequireDefault(require("./xctest"));
var _notifications = _interopRequireDefault(require("./notifications"));
var _iohid = _interopRequireDefault(require("./iohid"));
var _localization = _interopRequireDefault(require("./localization"));
var _pcap = _interopRequireDefault(require("./pcap"));
var _condition = _interopRequireDefault(require("./condition"));
var _geolocation = _interopRequireDefault(require("./geolocation"));
const commands = {};
Object.assign(commands, _context.default, _execute.default, _gesture.default, _find.default, _proxyHelper.default, _source.default, _general.default, _log.default, _web.default, _timeouts.default, _navigation.default, _element.default, _fileMovement.default, _alert.default, _screenshots.default, _pasteboard.default, _location.default, _lock.default, _recordscreen.default, _appManagement.default, _performance.default, _clipboard.default, _certificate.default, _battery.default, _cookies.default, _biometric.default, _keychains.default, _permissions.default, _deviceInfo.default, _activeAppInfo.default, _recordAudio.default, _appearance.default, _xctest.default, _notifications.default, _iohid.default, _localization.default, _pcap.default, _condition.default, _geolocation.default);
var _default = commands;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29udGV4dCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2V4ZWN1dGUiLCJfZ2VzdHVyZSIsIl9maW5kIiwiX3Byb3h5SGVscGVyIiwiX2FsZXJ0IiwiX3NvdXJjZSIsIl9nZW5lcmFsIiwiX2xvZyIsIl93ZWIiLCJfdGltZW91dHMiLCJfbmF2aWdhdGlvbiIsIl9lbGVtZW50IiwiX2ZpbGVNb3ZlbWVudCIsIl9zY3JlZW5zaG90cyIsIl9wYXN0ZWJvYXJkIiwiX2xvY2F0aW9uIiwiX3JlY29yZEF1ZGlvIiwiX3JlY29yZHNjcmVlbiIsIl9sb2NrIiwiX2FwcE1hbmFnZW1lbnQiLCJfcGVyZm9ybWFuY2UiLCJfY2xpcGJvYXJkIiwiX2NlcnRpZmljYXRlIiwiX2JhdHRlcnkiLCJfZGV2aWNlSW5mbyIsIl9hY3RpdmVBcHBJbmZvIiwiX2Nvb2tpZXMiLCJfYmlvbWV0cmljIiwiX2tleWNoYWlucyIsIl9wZXJtaXNzaW9ucyIsIl9hcHBlYXJhbmNlIiwiX3hjdGVzdCIsIl9ub3RpZmljYXRpb25zIiwiX2lvaGlkIiwiX2xvY2FsaXphdGlvbiIsIl9wY2FwIiwiX2NvbmRpdGlvbiIsIl9nZW9sb2NhdGlvbiIsImNvbW1hbmRzIiwiT2JqZWN0IiwiYXNzaWduIiwiY29udGV4dENvbW1hbmRzIiwiZXhlY3V0ZUV4dGVuc2lvbnMiLCJnZXN0dXJlRXh0ZW5zaW9ucyIsImZpbmRFeHRlbnNpb25zIiwicHJveHlIZWxwZXJFeHRlbnNpb25zIiwic291cmNlRXh0ZW5zaW9ucyIsImdlbmVyYWxFeHRlbnNpb25zIiwibG9nRXh0ZW5zaW9ucyIsIndlYkV4dGVuc2lvbnMiLCJ0aW1lb3V0RXh0ZW5zaW9ucyIsIm5hdmlnYXRpb25FeHRlbnNpb25zIiwiZWxlbWVudEV4dGVuc2lvbnMiLCJmaWxlTW92ZW1lbnRFeHRlbnNpb25zIiwiYWxlcnRFeHRlbnNpb25zIiwic2NyZWVuc2hvdEV4dGVuc2lvbnMiLCJwYXN0ZWJvYXJkRXh0ZW5zaW9ucyIsImxvY2F0aW9uRXh0ZW5zaW9ucyIsImxvY2tFeHRlbnNpb25zIiwicmVjb3JkU2NyZWVuRXh0ZW5zaW9ucyIsImFwcE1hbmFnZW1lbnRFeHRlbnNpb25zIiwicGVyZm9ybWFuY2VFeHRlbnNpb25zIiwiY2xpcGJvYXJkRXh0ZW5zaW9ucyIsImNlcnRpZmljYXRlRXh0ZW5zaW9ucyIsImJhdHRlcnlFeHRlbnNpb25zIiwiY29va2llc0V4dGVuc2lvbnMiLCJiaW9tZXRyaWNFeHRlbnNpb25zIiwia2V5Y2hhaW5zRXh0ZW5zaW9ucyIsInBlcm1pc3Npb25zRXh0ZW5zaW9ucyIsImRldmljZUluZm9FeHRlbnNpb25zIiwiYWN0aXZlQXBwSW5mb0V4dGVuc2lvbnMiLCJyZWNvcmRBdWRpb0V4dGVuc2lvbnMiLCJhcHBlYXJhbmNlRXh0ZW5zaW9ucyIsInhjdGVzdEV4dGVuc2lvbnMiLCJub3RpZmljYXRpb25zRXh0ZW5zaW9ucyIsImlvaGlkRXh0ZW5zaW9ucyIsImxvY2FsaXphdGlvbkV4dGVuc2lvbnMiLCJwY2FwRXh0ZW5zaW9ucyIsImNvbmRpdGlvbkV4dGVuc2lvbnMiLCJnZW9sb2NhdGlvbkV4dGVuc2lvbnMiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vbGliL2NvbW1hbmRzL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb250ZXh0Q29tbWFuZHMgZnJvbSAnLi9jb250ZXh0JztcbmltcG9ydCBleGVjdXRlRXh0ZW5zaW9ucyBmcm9tICcuL2V4ZWN1dGUnO1xuaW1wb3J0IGdlc3R1cmVFeHRlbnNpb25zIGZyb20gJy4vZ2VzdHVyZSc7XG5pbXBvcnQgZmluZEV4dGVuc2lvbnMgZnJvbSAnLi9maW5kJztcbmltcG9ydCBwcm94eUhlbHBlckV4dGVuc2lvbnMgZnJvbSAnLi9wcm94eS1oZWxwZXInO1xuaW1wb3J0IGFsZXJ0RXh0ZW5zaW9ucyBmcm9tICcuL2FsZXJ0JztcbmltcG9ydCBzb3VyY2VFeHRlbnNpb25zIGZyb20gJy4vc291cmNlJztcbmltcG9ydCBnZW5lcmFsRXh0ZW5zaW9ucyBmcm9tICcuL2dlbmVyYWwnO1xuaW1wb3J0IGxvZ0V4dGVuc2lvbnMgZnJvbSAnLi9sb2cnO1xuaW1wb3J0IHdlYkV4dGVuc2lvbnMgZnJvbSAnLi93ZWInO1xuaW1wb3J0IHRpbWVvdXRFeHRlbnNpb25zIGZyb20gJy4vdGltZW91dHMnO1xuaW1wb3J0IG5hdmlnYXRpb25FeHRlbnNpb25zIGZyb20gJy4vbmF2aWdhdGlvbic7XG5pbXBvcnQgZWxlbWVudEV4dGVuc2lvbnMgZnJvbSAnLi9lbGVtZW50JztcbmltcG9ydCBmaWxlTW92ZW1lbnRFeHRlbnNpb25zIGZyb20gJy4vZmlsZS1tb3ZlbWVudCc7XG5pbXBvcnQgc2NyZWVuc2hvdEV4dGVuc2lvbnMgZnJvbSAnLi9zY3JlZW5zaG90cyc7XG5pbXBvcnQgcGFzdGVib2FyZEV4dGVuc2lvbnMgZnJvbSAnLi9wYXN0ZWJvYXJkJztcbmltcG9ydCBsb2NhdGlvbkV4dGVuc2lvbnMgZnJvbSAnLi9sb2NhdGlvbic7XG5pbXBvcnQgcmVjb3JkQXVkaW9FeHRlbnNpb25zIGZyb20gJy4vcmVjb3JkLWF1ZGlvJztcbmltcG9ydCByZWNvcmRTY3JlZW5FeHRlbnNpb25zIGZyb20gJy4vcmVjb3Jkc2NyZWVuJztcbmltcG9ydCBsb2NrRXh0ZW5zaW9ucyBmcm9tICcuL2xvY2snO1xuaW1wb3J0IGFwcE1hbmFnZW1lbnRFeHRlbnNpb25zIGZyb20gJy4vYXBwLW1hbmFnZW1lbnQnO1xuaW1wb3J0IHBlcmZvcm1hbmNlRXh0ZW5zaW9ucyBmcm9tICcuL3BlcmZvcm1hbmNlJztcbmltcG9ydCBjbGlwYm9hcmRFeHRlbnNpb25zIGZyb20gJy4vY2xpcGJvYXJkJztcbmltcG9ydCBjZXJ0aWZpY2F0ZUV4dGVuc2lvbnMgZnJvbSAnLi9jZXJ0aWZpY2F0ZSc7XG5pbXBvcnQgYmF0dGVyeUV4dGVuc2lvbnMgZnJvbSAnLi9iYXR0ZXJ5JztcbmltcG9ydCBkZXZpY2VJbmZvRXh0ZW5zaW9ucyBmcm9tICcuL2RldmljZUluZm8nO1xuaW1wb3J0IGFjdGl2ZUFwcEluZm9FeHRlbnNpb25zIGZyb20gJy4vYWN0aXZlQXBwSW5mbyc7XG5pbXBvcnQgY29va2llc0V4dGVuc2lvbnMgZnJvbSAnLi9jb29raWVzJztcbmltcG9ydCBiaW9tZXRyaWNFeHRlbnNpb25zIGZyb20gJy4vYmlvbWV0cmljJztcbmltcG9ydCBrZXljaGFpbnNFeHRlbnNpb25zIGZyb20gJy4va2V5Y2hhaW5zJztcbmltcG9ydCBwZXJtaXNzaW9uc0V4dGVuc2lvbnMgZnJvbSAnLi9wZXJtaXNzaW9ucyc7XG5pbXBvcnQgYXBwZWFyYW5jZUV4dGVuc2lvbnMgZnJvbSAnLi9hcHBlYXJhbmNlJztcbmltcG9ydCB4Y3Rlc3RFeHRlbnNpb25zIGZyb20gJy4veGN0ZXN0JztcbmltcG9ydCBub3RpZmljYXRpb25zRXh0ZW5zaW9ucyBmcm9tICcuL25vdGlmaWNhdGlvbnMnO1xuaW1wb3J0IGlvaGlkRXh0ZW5zaW9ucyBmcm9tICcuL2lvaGlkJztcbmltcG9ydCBsb2NhbGl6YXRpb25FeHRlbnNpb25zIGZyb20gJy4vbG9jYWxpemF0aW9uJztcbmltcG9ydCBwY2FwRXh0ZW5zaW9ucyBmcm9tICcuL3BjYXAnO1xuaW1wb3J0IGNvbmRpdGlvbkV4dGVuc2lvbnMgZnJvbSAnLi9jb25kaXRpb24nO1xuaW1wb3J0IGdlb2xvY2F0aW9uRXh0ZW5zaW9ucyBmcm9tICcuL2dlb2xvY2F0aW9uJztcblxuY29uc3QgY29tbWFuZHMgPSB7fTtcblxuT2JqZWN0LmFzc2lnbihjb21tYW5kcywgY29udGV4dENvbW1hbmRzLCBleGVjdXRlRXh0ZW5zaW9ucyxcbiAgZ2VzdHVyZUV4dGVuc2lvbnMsIGZpbmRFeHRlbnNpb25zLCBwcm94eUhlbHBlckV4dGVuc2lvbnMsIHNvdXJjZUV4dGVuc2lvbnMsXG4gIGdlbmVyYWxFeHRlbnNpb25zLCBsb2dFeHRlbnNpb25zLCB3ZWJFeHRlbnNpb25zLCB0aW1lb3V0RXh0ZW5zaW9ucyxcbiAgbmF2aWdhdGlvbkV4dGVuc2lvbnMsIGVsZW1lbnRFeHRlbnNpb25zLCBmaWxlTW92ZW1lbnRFeHRlbnNpb25zLFxuICBhbGVydEV4dGVuc2lvbnMsIHNjcmVlbnNob3RFeHRlbnNpb25zLCBwYXN0ZWJvYXJkRXh0ZW5zaW9ucywgbG9jYXRpb25FeHRlbnNpb25zLFxuICBsb2NrRXh0ZW5zaW9ucywgcmVjb3JkU2NyZWVuRXh0ZW5zaW9ucywgYXBwTWFuYWdlbWVudEV4dGVuc2lvbnMsIHBlcmZvcm1hbmNlRXh0ZW5zaW9ucyxcbiAgY2xpcGJvYXJkRXh0ZW5zaW9ucywgY2VydGlmaWNhdGVFeHRlbnNpb25zLCBiYXR0ZXJ5RXh0ZW5zaW9ucywgY29va2llc0V4dGVuc2lvbnMsXG4gIGJpb21ldHJpY0V4dGVuc2lvbnMsIGtleWNoYWluc0V4dGVuc2lvbnMsIHBlcm1pc3Npb25zRXh0ZW5zaW9ucywgZGV2aWNlSW5mb0V4dGVuc2lvbnMsXG4gIGFjdGl2ZUFwcEluZm9FeHRlbnNpb25zLCByZWNvcmRBdWRpb0V4dGVuc2lvbnMsIGFwcGVhcmFuY2VFeHRlbnNpb25zLCB4Y3Rlc3RFeHRlbnNpb25zLFxuICBub3RpZmljYXRpb25zRXh0ZW5zaW9ucywgaW9oaWRFeHRlbnNpb25zLCBsb2NhbGl6YXRpb25FeHRlbnNpb25zLCBwY2FwRXh0ZW5zaW9ucyxcbiAgY29uZGl0aW9uRXh0ZW5zaW9ucywgZ2VvbG9jYXRpb25FeHRlbnNpb25zLFxuKTtcblxuZXhwb3J0IGRlZmF1bHQgY29tbWFuZHM7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsUUFBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsUUFBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUcsS0FBQSxHQUFBSixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUksWUFBQSxHQUFBTCxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUssTUFBQSxHQUFBTixzQkFBQSxD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