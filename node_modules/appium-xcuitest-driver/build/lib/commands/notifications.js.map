{"version":3,"file":"notifications.js","names":["_driver","require","_lodash","_interopRequireDefault","extensions","mobilePushNotification","opts","isSimulator","Error","payload","bundleId","errors","InvalidArgumentError","_","isPlainObject","JSON","stringify","aps","device","pushNotification","mobileExpectNotification","name","type","timeoutSeconds","proxyCommand","timeout","_default","exports","default"],"sources":["../../../lib/commands/notifications.js"],"sourcesContent":["import { errors } from 'appium/driver';\nimport _ from 'lodash';\n\nconst extensions = {};\n\n/**\n * @typedef {Object} PushNotification\n *\n * @property {!string} bundleId - The bundle identifier of the target application\n * @property {!object} payload - Remote notification payload. Read the `Create the JSON Payload` topic of\n * https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/generating_a_remote_notification\n * for more details on how to create this payload.\n */\n\n/**\n * Simulates push notification delivery to Simulator.\n * Only application remote push notifications are supported. VoIP, Complication, File Provider,\n * and other types are not supported\n *\n * @since Xcode SDK 11.4\n * @param {PushNotification} opts - The object that describes Apple push notification content.\n * It must contain a top-level `bundleId` key with a string value matching\n * the target applicationâ€˜s bundle identifier and \"payload.aps\" key with valid Apple Push Notification values.\n * Check the output of `xcrun simctl help push` command for more details.\n */\nextensions.mobilePushNotification = async function mobilePushNotification (opts = {}) {\n  if (!this.isSimulator()) {\n    throw new Error('This extension only works on Simulator');\n  }\n\n  const { payload, bundleId } = opts;\n  if (!bundleId) {\n    throw new errors.InvalidArgumentError(`'bundleId' argument must be a valid bundle identifier string`);\n  }\n  if (!_.isPlainObject(payload)) {\n    throw new errors.InvalidArgumentError(`The 'payload' argument value must be a valid dictionary. ` +\n      `Got ${JSON.stringify(payload)} instead`);\n  }\n  if (!_.isPlainObject(payload.aps)) {\n    throw new errors.InvalidArgumentError(`The 'payload.aps' value must be a valid dictionary. ` +\n      `Got ${JSON.stringify(payload.aps)} instead`);\n  }\n  return await this.opts.device.pushNotification({\n    ...payload,\n    'Simulator Target Bundle': bundleId,\n  });\n};\n\n\n/**\n * @typedef {Object} NotificationExpectationOptions\n *\n * @property {!string} name - The name of the notification to expect\n * @property {?string} type [plain] - Which notification type to expect.\n * Either 'plain' to wait for a notification from the default notification center or 'darwin'\n * to wait for a system notification.\n * @property {number} timeoutSeconds [60] - For how long to wait until the notification is delivered\n * in float seconds.\n */\n\n/**\n * Blocks until the expected notification is delivered.\n * This method is a thin wrapper over XCTNSNotificationExpectation and\n * XCTDarwinNotificationExpectation entities.\n *\n * @param {NotificationExpectationOptions} opts\n * @throws TimeoutError if the expected notification has not been delivered within the given timeout\n */\nextensions.mobileExpectNotification = async function mobileExpectNotification (opts = {}) {\n  const { name, type, timeoutSeconds } = opts;\n  return await this.proxyCommand('/wda/expectNotification', 'POST', {\n    name,\n    type,\n    timeout: timeoutSeconds,\n  });\n};\n\nexport default extensions;\n"],"mappings":";;;;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,MAAMG,UAAU,GAAG,CAAC,CAAC;AAsBrBA,UAAU,CAACC,sBAAsB,GAAG,eAAeA,sBAAsBA,CAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACpF,IAAI,CAAC,IAAI,CAACC,WAAW,EAAE,EAAE;IACvB,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EAEA,MAAM;IAAEC,OAAO;IAAEC;EAAS,CAAC,GAAGJ,IAAI;EAClC,IAAI,CAACI,QAAQ,EAAE;IACb,MAAM,IAAIC,cAAM,CAACC,oBAAoB,CAAE,8DAA6D,CAAC;EACvG;EACA,IAAI,CAACC,eAAC,CAACC,aAAa,CAACL,OAAO,CAAC,EAAE;IAC7B,MAAM,IAAIE,cAAM,CAACC,oBAAoB,CAAE,2DAA0D,GAC9F,OAAMG,IAAI,CAACC,SAAS,CAACP,OAAO,CAAE,UAAS,CAAC;EAC7C;EACA,IAAI,CAACI,eAAC,CAACC,aAAa,CAACL,OAAO,CAACQ,GAAG,CAAC,EAAE;IACjC,MAAM,IAAIN,cAAM,CAACC,oBAAoB,CAAE,sDAAqD,GACzF,OAAMG,IAAI,CAACC,SAAS,CAACP,OAAO,CAACQ,GAAG,CAAE,UAAS,CAAC;EACjD;EACA,OAAO,MAAM,IAAI,CAACX,IAAI,CAACY,MAAM,CAACC,gBAAgB,CAAC;IAC7C,GAAGV,OAAO;IACV,yBAAyB,EAAEC;EAC7B,CAAC,CAAC;AACJ,CAAC;AAsBDN,UAAU,CAACgB,wBAAwB,GAAG,eAAeA,wBAAwBA,CAAEd,IAAI,GAAG,CAAC,CAAC,EAAE;EACxF,MAAM;IAAEe,IAAI;IAAEC,IAAI;IAAEC;EAAe,CAAC,GAAGjB,IAAI;EAC3C,OAAO,MAAM,IAAI,CAACkB,YAAY,CAAC,yBAAyB,EAAE,MAAM,EAAE;IAChEH,IAAI;IACJC,IAAI;IACJG,OAAO,EAAEF;EACX,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAG,QAAA,GAEatB,UAAU;AAAAuB,OAAA,CAAAC,OAAA,GAAAF,QAAA"}