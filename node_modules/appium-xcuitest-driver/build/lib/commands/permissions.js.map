{"version":3,"file":"permissions.js","names":["_lodash","_interopRequireDefault","require","commands","helpers","extensions","exports","RESOURCE_NAME_TO_ID_MAP","calendar","camera","contacts","health","homekit","keyboardnet","location","medialibrary","microphone","photos","reminders","systemroot","userdesktop","userdocuments","userdownloads","bluetooth","requireSimulator","driver","isSimulator","Error","requireOptions","opts","bundleId","mobileResetPermission","service","resource","_","isString","toLower","JSON","stringify","keys","isInteger","proxyCommand","mobileGetPermission","device","getPermission","mobileSetPermissions","access","isPlainObject","setPermissions","Object","assign","_default","default"],"sources":["../../../lib/commands/permissions.js"],"sourcesContent":["import _ from 'lodash';\n\n\nconst commands = {}, helpers = {}, extensions = {};\n\n// https://developer.apple.com/documentation/xctest/xcuiprotectedresource?language=objc\nconst RESOURCE_NAME_TO_ID_MAP = {\n  calendar: 2,\n  camera: 6,\n  contacts: 1,\n  health: -0x40000003,\n  homekit: 8,\n  keyboardnet: -0x40000001,\n  location: -0x40000002,\n  medialibrary: 7,\n  microphone: 5,\n  photos: 4,\n  reminders: 3,\n  systemroot: 0x40000000,\n  userdesktop: 0x40000001,\n  userdocuments: 0x40000003,\n  userdownloads: 0x40000002,\n  bluetooth: -0x40000000,\n};\n\nfunction requireSimulator (driver) {\n  if (!driver.isSimulator()) {\n    throw new Error('Permissions-related operations can only be performed on Simulator');\n  }\n}\n\nfunction requireOptions (opts = {}) {\n  if (!opts.bundleId) {\n    throw new Error(`The 'bundleId' options must be a valid application bundle identifier`);\n  }\n  return opts;\n}\n\n\n/**\n * @typedef {Object} ResetPermissionOptions\n *\n * @property {!string|number} service - One of available service names. See the keys of\n * `RESOURCE_NAME_TO_ID_MAP` to get the list of supported service names.\n * This could also be an integer protected resource identifier taken from\n * https://developer.apple.com/documentation/xctest/xcuiprotectedresource?language=objc\n */\n\n/**\n * Resets the given permission for the active application under test.\n * Works for both Simulator and real devices using Xcode SDK 11.4+\n *\n * @param {ResetPermissionOptions} opts - Permission options.\n * @throws {Error} If permission reset fails on the device.\n */\ncommands.mobileResetPermission = async function mobileResetPermission (opts = {}) {\n  const {\n    service,\n  } = opts;\n  if (!service) {\n    throw new Error(`The 'service' option is expected to be present`);\n  }\n  let resource;\n  if (_.isString(service)) {\n    resource = RESOURCE_NAME_TO_ID_MAP[_.toLower(service)];\n    if (!resource) {\n      throw new Error(`The 'service' value must be one of ` +\n        `${JSON.stringify(_.keys(RESOURCE_NAME_TO_ID_MAP))}`);\n    }\n  } else if (_.isInteger(service)) {\n    resource = service;\n  } else {\n    throw new Error(`The 'service' value must be either a string or an integer. ` +\n      `'${service}' is passed instead`);\n  }\n\n  await this.proxyCommand('/wda/resetAppAuth', 'POST', {resource});\n};\n\n/**\n * @typedef {Object} GetPermissionOptions\n *\n * @property {string} service - One of available service names. The following services are supported:\n * calendar,\n * camera,\n * contacts,\n * homekit,\n * microphone,\n * photos,\n * reminders,\n * medialibrary,\n * motion,\n * health,\n * siri,\n * speech.\n * @property {string} bundleId - The bundle identifier of the destination app.\n */\n\n/**\n * Gets application permission state on Simulator.\n * This method requires WIX applesimutils to be installed on the server host.\n *\n * @param {GetPermissionOptions} opts - Permission options.\n * @returns {string} Either 'yes', 'no', 'unset' or 'limited'\n * @throws {Error} If permission getting fails or the device is not a Simulator.\n */\ncommands.mobileGetPermission = async function mobileGetPermission (opts = {}) {\n  const {\n    service,\n    bundleId,\n  } = requireOptions(opts);\n  if (!service) {\n    throw new Error(`The 'service' option is expected to be present`);\n  }\n  requireSimulator(this);\n\n  return await this.opts.device.getPermission(bundleId, service);\n};\n\n/**\n * @typedef {Object} SetPermissionsOptions\n *\n * @property {Object} access - One or more access rules to set.\n * The following keys are supported:\n * - all: Apply the action to all services.\n * - calendar: Allow access to calendar.\n * - contacts-limited: Allow access to basic contact info.\n * - contacts: Allow access to full contact details.\n * - location: Allow access to location services when app is in use.\n * - location-always: Allow access to location services at all times.\n * - photos-add: Allow adding photos to the photo library.\n * - photos: Allow full access to the photo library.\n * - media-library: Allow access to the media library.\n * - microphone: Allow access to audio input.\n * - motion: Allow access to motion and fitness data.\n * - reminders: Allow access to reminders.\n * - siri: Allow use of the app with Siri.\n * The following values are supported:\n * - yes: To grant the permission\n * - no: To revoke the permission\n * - unset: To reset the permission\n * - limited: To grant the permission as limited access (Only for photos)\n * @property {string} bundleId - The bundle identifier of the destination app.\n */\n\n/**\n * Set application permission state on Simulator.\n *\n * @since Xcode SDK 11.4\n * @param {SetPermissionsOptions} opts - Permissions options.\n * @throws {Error} If permission setting fails or the device is not a Simulator.\n */\ncommands.mobileSetPermissions = async function mobileSetPermissions (opts = {}) {\n  const {\n    access,\n    bundleId,\n  } = requireOptions(opts);\n  if (!_.isPlainObject(access)) {\n    throw new Error(`The 'access' option is expected to be a map`);\n  }\n  requireSimulator(this);\n\n  await this.opts.device.setPermissions(bundleId, access);\n};\n\n\nObject.assign(extensions, commands, helpers);\nexport { commands, helpers };\nexport default extensions;\n"],"mappings":"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"}