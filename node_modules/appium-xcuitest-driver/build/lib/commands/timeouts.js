"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.helpers = exports.default = exports.commands = void 0;
require("source-map-support/register");
const commands = {},
  helpers = {},
  extensions = {};
exports.helpers = helpers;
exports.commands = commands;
commands.pageLoadTimeoutW3C = async function pageLoadTimeoutW3C(ms) {
  await this.setPageLoadTimeout(this.parseTimeoutArgument(ms));
};
commands.pageLoadTimeoutMJSONWP = async function pageLoadTimeoutMJSONWP(ms) {
  await this.setPageLoadTimeout(this.parseTimeoutArgument(ms));
};
commands.scriptTimeoutW3C = async function scriptTimeoutW3C(ms) {
  await this.asyncScriptTimeout(ms);
};
commands.scriptTimeoutMJSONWP = async function scriptTimeoutMJSONWP(ms) {
  await this.asyncScriptTimeout(ms);
};
commands.asyncScriptTimeout = async function asyncScriptTimeout(ms) {
  this.setAsyncScriptTimeout(this.parseTimeoutArgument(ms));
};
helpers.setPageLoadTimeout = function setPageLoadTimeout(ms) {
  ms = parseInt(ms, 10);
  this.pageLoadMs = ms;
  if (this.remote) {
    this.remote.pageLoadMs = this.pageLoadMs;
  }
  this.log.debug(`Set page load timeout to ${ms}ms`);
};
helpers.setAsyncScriptTimeout = function setAsyncScriptTimeout(ms) {
  this.asyncWaitMs = ms;
  this.log.debug(`Set async script timeout to ${ms}ms`);
};
Object.assign(extensions, commands, helpers);
var _default = extensions;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb21tYW5kcyIsImhlbHBlcnMiLCJleHRlbnNpb25zIiwiZXhwb3J0cyIsInBhZ2VMb2FkVGltZW91dFczQyIsIm1zIiwic2V0UGFnZUxvYWRUaW1lb3V0IiwicGFyc2VUaW1lb3V0QXJndW1lbnQiLCJwYWdlTG9hZFRpbWVvdXRNSlNPTldQIiwic2NyaXB0VGltZW91dFczQyIsImFzeW5jU2NyaXB0VGltZW91dCIsInNjcmlwdFRpbWVvdXRNSlNPTldQIiwic2V0QXN5bmNTY3JpcHRUaW1lb3V0IiwicGFyc2VJbnQiLCJwYWdlTG9hZE1zIiwicmVtb3RlIiwibG9nIiwiZGVidWciLCJhc3luY1dhaXRNcyIsIk9iamVjdCIsImFzc2lnbiIsIl9kZWZhdWx0IiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9jb21tYW5kcy90aW1lb3V0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjb21tYW5kcyA9IHt9LCBoZWxwZXJzID0ge30sIGV4dGVuc2lvbnMgPSB7fTtcblxuLy8gcGFnZUxvYWRcbmNvbW1hbmRzLnBhZ2VMb2FkVGltZW91dFczQyA9IGFzeW5jIGZ1bmN0aW9uIHBhZ2VMb2FkVGltZW91dFczQyAobXMpIHtcbiAgYXdhaXQgdGhpcy5zZXRQYWdlTG9hZFRpbWVvdXQodGhpcy5wYXJzZVRpbWVvdXRBcmd1bWVudChtcykpO1xufTtcblxuY29tbWFuZHMucGFnZUxvYWRUaW1lb3V0TUpTT05XUCA9IGFzeW5jIGZ1bmN0aW9uIHBhZ2VMb2FkVGltZW91dE1KU09OV1AgKG1zKSB7XG4gIGF3YWl0IHRoaXMuc2V0UGFnZUxvYWRUaW1lb3V0KHRoaXMucGFyc2VUaW1lb3V0QXJndW1lbnQobXMpKTtcbn07XG5cbi8vIHNjcmlwdFxuY29tbWFuZHMuc2NyaXB0VGltZW91dFczQyA9IGFzeW5jIGZ1bmN0aW9uIHNjcmlwdFRpbWVvdXRXM0MgKG1zKSB7XG4gIGF3YWl0IHRoaXMuYXN5bmNTY3JpcHRUaW1lb3V0KG1zKTtcbn07XG5cbmNvbW1hbmRzLnNjcmlwdFRpbWVvdXRNSlNPTldQID0gYXN5bmMgZnVuY3Rpb24gc2NyaXB0VGltZW91dE1KU09OV1AgKG1zKSB7XG4gIGF3YWl0IHRoaXMuYXN5bmNTY3JpcHRUaW1lb3V0KG1zKTtcbn07XG5cbmNvbW1hbmRzLmFzeW5jU2NyaXB0VGltZW91dCA9IGFzeW5jIGZ1bmN0aW9uIGFzeW5jU2NyaXB0VGltZW91dCAobXMpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSByZXF1aXJlLWF3YWl0XG4gIHRoaXMuc2V0QXN5bmNTY3JpcHRUaW1lb3V0KHRoaXMucGFyc2VUaW1lb3V0QXJndW1lbnQobXMpKTtcbn07XG5cbmhlbHBlcnMuc2V0UGFnZUxvYWRUaW1lb3V0ID0gZnVuY3Rpb24gc2V0UGFnZUxvYWRUaW1lb3V0IChtcykge1xuICBtcyA9IHBhcnNlSW50KG1zLCAxMCk7XG4gIHRoaXMucGFnZUxvYWRNcyA9IG1zO1xuICBpZiAodGhpcy5yZW1vdGUpIHtcbiAgICB0aGlzLnJlbW90ZS5wYWdlTG9hZE1zID0gdGhpcy5wYWdlTG9hZE1zO1xuICB9XG4gIHRoaXMubG9nLmRlYnVnKGBTZXQgcGFnZSBsb2FkIHRpbWVvdXQgdG8gJHttc31tc2ApO1xufTtcblxuaGVscGVycy5zZXRBc3luY1NjcmlwdFRpbWVvdXQgPSBmdW5jdGlvbiBzZXRBc3luY1NjcmlwdFRpbWVvdXQgKG1zKSB7XG4gIHRoaXMuYXN5bmNXYWl0TXMgPSBtcztcbiAgdGhpcy5sb2cuZGVidWcoYFNldCBhc3luYyBzY3JpcHQgdGltZW91dCB0byAke21zfW1zYCk7XG59O1xuXG5PYmplY3QuYXNzaWduKGV4dGVuc2lvbnMsIGNvbW1hbmRzLCBoZWxwZXJzKTtcbmV4cG9ydCB7IGNvbW1hbmRzLCBoZWxwZXJzIH07XG5leHBvcnQgZGVmYXVsdCBleHRlbnNpb25zO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEsUUFBUSxHQUFHLENBQUMsQ0FBQztFQUFFQyxPQUFPLEdBQUcsQ0FBQyxDQUFDO0VBQUVDLFVBQVUsR0FBRyxDQUFDLENBQUM7QUFBQ0MsT0FBQSxDQUFBRixPQUFBLEdBQUFBLE9BQUE7QUFBQUUsT0FBQSxDQUFBSCxRQUFBLEdBQUFBLFFBQUE7QUFHbkRBLFFBQVEsQ0FBQ0ksa0JBQWtCLEdBQUcsZUFBZUEsa0JBQWtCQSxDQUFFQyxFQUFFLEVBQUU7RUFDbkUsTUFBTSxJQUFJLENBQUNDLGtCQUFrQixDQUFDLElBQUksQ0FBQ0Msb0JBQW9CLENBQUNGLEVBQUUsQ0FBQyxDQUFDO0FBQzlELENBQUM7QUFFREwsUUFBUSxDQUFDUSxzQkFBc0IsR0FBRyxlQUFlQSxzQkFBc0JBLENBQUVILEVBQUUsRUFBRTtFQUMzRSxNQUFNLElBQUksQ0FBQ0Msa0JBQWtCLENBQUMsSUFBSSxDQUFDQyxvQkFBb0IsQ0FBQ0YsRUFBRSxDQUFDLENBQUM7QUFDOUQsQ0FBQztBQUdETCxRQUFRLENBQUNTLGdCQUFnQixHQUFHLGVBQWVBLGdCQUFnQkEsQ0FBRUosRUFBRSxFQUFFO0VBQy9ELE1BQU0sSUFBSSxDQUFDSyxrQkFBa0IsQ0FBQ0wsRUFBRSxDQUFDO0FBQ25DLENBQUM7QUFFREwsUUFBUSxDQUFDVyxvQkFBb0IsR0FBRyxlQUFlQSxvQkFBb0JBLENBQUVOLEVBQUUsRUFBRTtFQUN2RSxNQUFNLElBQUksQ0FBQ0ssa0JBQWtCLENBQUNMLEVBQUUsQ0FBQztBQUNuQyxDQUFDO0FBRURMLFFBQVEsQ0FBQ1Usa0JBQWtCLEdBQUcsZUFBZUEsa0JBQWtCQSxDQUFFTCxFQUFFLEVBQUU7RUFDbkUsSUFBSSxDQUFDTyxxQkFBcUIsQ0FBQyxJQUFJLENBQUNMLG9CQUFvQixDQUFDRixFQUFFLENBQUMsQ0FBQztBQUMzRCxDQUFDO0FBRURKLE9BQU8sQ0FBQ0ssa0JBQWtCLEdBQUcsU0FBU0Esa0JBQWtCQSxDQUFFRCxFQUFFLEVBQUU7RUFDNURBLEVBQUUsR0FBR1EsUUFBUSxDQUFDUixFQUFFLEVBQUUsRUFBRSxDQUFDO0VBQ3JCLElBQUksQ0FBQ1MsVUFBVSxHQUFHVCxFQUFFO0VBQ3BCLElBQUksSUFBSSxDQUFDVSxNQUFNLEVBQUU7SUFDZixJQUFJLENBQUNBLE1BQU0sQ0FBQ0QsVUFBVSxHQUFHLElBQUksQ0FBQ0EsVUFBVTtFQUMxQztFQUNBLElBQUksQ0FBQ0UsR0FBRyxDQUFDQyxLQUFLLENBQUUsNEJBQTJCWixFQUFHLElBQUcsQ0FBQztBQUNwRCxDQUFDO0FBRURKLE9BQU8sQ0FBQ1cscUJBQXFCLEdBQUcsU0FBU0EscUJBQXFCQSxDQUFFUCxFQUFFLEVBQUU7RUFDbEUsSUFBSSxDQUFDYSxXQUFXLEdBQUdiLEVBQUU7RUFDckIsSUFBSSxDQUFDVyxHQUFHLENBQUNDLEtBQUssQ0FBRSwrQkFBOEJaLEVBQUcsSUFBRyxDQUFDO0FBQ3ZELENBQUM7QUFFRGMsTUFBTSxDQUFDQyxNQUFNLENBQUNsQixVQUFVLEVBQUVGLFFBQVEsRUFBRUMsT0FBTyxDQUFDO0FBQUMsSUFBQW9CLFFBQUEsR0FFOUJuQixVQUFVO0FBQUFDLE9BQUEsQ0FBQW1CLE9BQUEsR0FBQUQsUUFBQSJ9