{"version":3,"file":"cookies.js","names":["_lodash","_interopRequireDefault","require","_support","log","logger","getLogger","convertCookie","value","converter","indexOf","slice","replace","parsedValue","decodeURIComponent","e","warn","createJSCookie","key","options","encodeURIComponent","expires","path","domain","secure","join","createJWPCookie","cookieString","result","cookies","split","cookie","parts","name","shift","val","getValue","_","isUndefined","expireCookie","assign","_default","exports","default"],"sources":["../../lib/cookies.js"],"sourcesContent":["/*\n * derived from jQuery Cookie Plugin v1.4.1\n * https://github.com/carhartl/jquery-cookie\n */\n\n// needed to communicate/translate between JSONWire cookies and regular JavaScript cookies\n\nimport _ from 'lodash';\nimport { logger } from 'appium/support';\n\n\nconst log = logger.getLogger('Cookie');\n\n// parses the value if needed and converts the value if a converter is provided\n// internal function, not exported\nfunction convertCookie (value, converter) {\n  if (value.indexOf('\"') === 0) {\n    // this is a quoted cookied according to RFC2068\n    // remove enclosing quotes and internal quotes and backslashes\n    value = value.slice(1, -1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, '\\\\');\n  }\n\n  let parsedValue;\n  try {\n    parsedValue = decodeURIComponent(value.replace(/\\+/g, ' '));\n  } catch (e) {\n    // no need to fail if we can't decode\n    log.warn(e);\n  }\n\n  return converter ? converter(parsedValue) : parsedValue;\n}\n\n// takes arguments given and creates a JavaScript Cookie\nfunction createJSCookie (key, value, options = {}) {\n  return [\n    encodeURIComponent(key), '=', value,\n    options.expires\n      ? `; expires=${options.expires}`\n      : '',\n    options.path\n      ? `; path=${options.path}`\n      : '',\n    options.domain\n      ? `; domain=${options.domain}`\n      : '',\n    options.secure\n      ? '; secure'\n      : ''\n  ].join('');\n}\n\n// takes the JavaScript cookieString and translates it into a JSONWire formatted cookie\nfunction createJWPCookie (key, cookieString, converter = null) {\n  let result = {};\n  let cookies = cookieString ? cookieString.split('; ') : [];\n  for (let cookie of cookies) {\n    let parts = cookie.split('=');\n\n    // get the first and second element as name and value\n    let name = decodeURIComponent(parts.shift());\n    let val = parts[0];\n\n    // if name is key, this is the central element of the cookie, so add as `name`\n    // otherwise it is an optional element\n    if (key && key === name) {\n      result.name = key;\n      result.value = convertCookie(val, converter);\n    } else {\n      result[name] = convertCookie(val, converter);\n    }\n  }\n  return result;\n}\n\n// takes a JavaScript cookiestring and parses it for the value given the key\nfunction getValue (key, cookieString, converter = null) {\n  let result = createJWPCookie(key, cookieString, converter);\n\n  // if `key` is undefined we want the entire cookie\n  return _.isUndefined(key) ? result : result.value;\n}\n\n\n// returns a cookie that expires on 01 Jan 1970\n// assign the returned cookie to an existing cookie to delete that cookie\nfunction expireCookie (key, options) {\n  // override `expires` in `options`, and then make the cookie\n  return createJSCookie(key, '', _.assign({}, options, {\n    expires: 'Thu, 01 Jan 1970 00:00:00 GMT'\n  }));\n}\n\n// export individually and also (as default) as an object\nexport { createJSCookie, createJWPCookie, getValue, expireCookie };\nexport default { createJSCookie, createJWPCookie, getValue, expireCookie };\n"],"mappings":"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"}