{"version":3,"file":"css-converter.js","names":["_cssSelectorParser","require","_lodash","_interopRequireDefault","_driver","CssConverter","parser","CssSelectorParser","registerSelectorPseudos","registerNestingOperators","registerAttrEqualityMods","enableSubstitutes","BOOLEAN_ATTRS","NUMERIC_ATTRS","STR_ATTRS","ALL_ATTRS","ATTRIBUTE_ALIASES","toCamelCase","str","tokens","split","map","charAt","toUpperCase","slice","toLowerCase","out","join","requireBoolean","css","_css$value","val","value","TypeError","name","requireAttributeName","attrName","includes","officialAttr","aliasAttrs","Error","parseAttr","cssAttr","valueType","index","operator","_","escapeRegExp","parsePseudo","cssPseudo","pseudoName","parseCssRule","cssRule","nestingOperator","iosClassChainSelector","classNames","errors","InvalidSelectorError","tagName","startsWith","capitalizedTagName","attrs","id","push","attr","pseudos","pseudo","nonIndexAttrs","filter","isString","length","indexAttr","find","isObject","rule","parseCssObject","type","selectors","selector","toIosClassChainSelector","cssSelector","cssObj","parse","e","message","_default","exports","default"],"sources":["../../lib/css-converter.js"],"sourcesContent":["import { CssSelectorParser } from 'css-selector-parser';\nimport _ from 'lodash';\nimport { errors } from 'appium/driver';\n\nconst CssConverter = {};\n\nconst parser = new CssSelectorParser();\nparser.registerSelectorPseudos('has');\nparser.registerNestingOperators('>', '+', '~');\nparser.registerAttrEqualityMods('^', '$', '*', '~');\nparser.enableSubstitutes();\n\nconst BOOLEAN_ATTRS = [\n  'visible', 'accessible', 'accessibility-container', 'enabled',\n];\n\nconst NUMERIC_ATTRS = [\n  'index'\n];\n\nconst STR_ATTRS = [\n  'label', 'name', 'value', 'type',\n];\n\nconst ALL_ATTRS = [\n  ...BOOLEAN_ATTRS,\n  ...NUMERIC_ATTRS,\n  ...STR_ATTRS,\n];\n\nconst ATTRIBUTE_ALIASES = [\n  ['name', ['id']],\n  ['index', ['nth-child']],\n];\n\n/**\n * Convert hyphen separated word to camel case\n *\n * @param {string} str\n * @returns {string} The hyphen separated word translated to camel case\n */\nfunction toCamelCase (str) {\n  if (!str) {\n    return '';\n  }\n  const tokens = str.split('-').map((str) => str.charAt(0).toUpperCase() + str.slice(1).toLowerCase());\n  const out = tokens.join('');\n  return out.charAt(0).toLowerCase() + out.slice(1);\n}\n\n/**\n * @typedef {Object} CssNameValueObject\n * @property {?name} name The name of the CSS object\n * @property {?string} value The value of the CSS object\n */\n\n/**\n * Get the boolean from a CSS object. If empty, return true. If not true/false/empty, throw exception\n *\n * @param {CssNameValueObject} css A CSS object that has 'name' and 'value'\n * @returns {string} Either 'true' or 'false'. If value is empty, return 'true'\n */\nfunction requireBoolean (css) {\n  const val = css.value?.toLowerCase() || 'true'; // an omitted boolean attribute means 'true' (e.g.: input[checked] means checked is true)\n  switch (val) {\n    case '0':\n    case 'false':\n      return '0';\n    case '1':\n    case 'true':\n      return '1';\n    default:\n      throw new TypeError(`'${css.name}' must be true, false or empty. Found '${css.value}'`);\n  }\n}\n\n/**\n * Get the canonical form of a CSS attribute name\n *\n * Converts to lowercase and if an attribute name is an alias for something else, return\n * what it is an alias for\n *\n * @param {Object} css CSS object\n * @returns {string} The canonical attribute name\n */\nfunction requireAttributeName (css) {\n  const attrName = css.name.toLowerCase();\n\n  // Check if it's supported and if it is, return it\n  if (ALL_ATTRS.includes(attrName)) {\n    return attrName.toLowerCase();\n  }\n\n  // If attrName is an alias for something else, return that\n  for (const [officialAttr, aliasAttrs] of ATTRIBUTE_ALIASES) {\n    if (aliasAttrs.includes(attrName)) {\n      return officialAttr;\n    }\n  }\n  throw new Error(`'${attrName}' is not a valid attribute. ` +\n    `Supported attributes are '${ALL_ATTRS.join(', ')}'`);\n}\n\n/**\n * @typedef {Object} CssAttr\n * @property {?string} valueType Type of attribute (must be string or empty)\n * @property {?string} value Value of the attribute\n * @property {?string} operator The operator between value and value type (=, *=, , ^=, $=)\n */\n\n/**\n * Convert a CSS attribute into a UiSelector method call\n *\n * @param {CssAttr} cssAttr CSS attribute object\n * @returns {string} CSS attribute parsed as UiSelector\n */\nfunction parseAttr (cssAttr) {\n  if (cssAttr.valueType && cssAttr.valueType !== 'string') {\n    throw new TypeError(`'${cssAttr.name}=${cssAttr.value}' is an invalid attribute. ` +\n      `Only 'string' and empty attribute types are supported. Found '${cssAttr.valueType}'`);\n  }\n  const attrName = toCamelCase(requireAttributeName(cssAttr));\n\n  // Validate that it's a supported attribute\n  if (!STR_ATTRS.includes(attrName) && !BOOLEAN_ATTRS.includes(attrName)) {\n    throw new Error(`'${attrName}' is not supported. Supported attributes are ` +\n      `'${[...STR_ATTRS, ...BOOLEAN_ATTRS].join(', ')}'`);\n  }\n\n  // Parse index if it's an index attribute\n  if (attrName === 'index') {\n    return {index: cssAttr.value};\n  }\n  if (BOOLEAN_ATTRS.includes(attrName)) {\n    return `${attrName} == ${requireBoolean(cssAttr)}`;\n  }\n\n  let value = cssAttr.value || '';\n  if (value === '') {\n    return `[${attrName} LIKE ${value}]`;\n  }\n\n  switch (cssAttr.operator) {\n    case '=':\n      return `${attrName} == \"${value}\"`;\n    case '*=':\n      return `${attrName} MATCHES \"${_.escapeRegExp(value)}\"`;\n    case '^=':\n      return `${attrName} BEGINSWITH \"${value}\"`;\n    case '$=':\n      return `${attrName} ENDSWITH \"${value}\"`;\n    case '~=':\n      return `${attrName} CONTAINS \"${value}\"`;\n    default:\n      // Unreachable, but adding error in case a new CSS attribute is added.\n      throw new Error(`Unsupported CSS attribute operator '${cssAttr.operator}'. ` +\n        ` '=', '*=', '^=', '$=' and '~=' are supported.`);\n  }\n}\n\n/**\n * @typedef {Object} CssPseudo\n * @property {?string} valueType The type of CSS pseudo selector (https://www.npmjs.com/package/css-selector-parser for reference)\n * @property {?string} name The name of the pseudo selector\n * @property {?string} value The value of the pseudo selector\n */\n\n/**\n * Convert a CSS pseudo class to a UiSelector\n *\n * @param {CssPseudo} cssPseudo CSS Pseudo class\n * @returns {string} Pseudo selector parsed as UiSelector\n */\nfunction parsePseudo (cssPseudo) {\n  if (cssPseudo.valueType && cssPseudo.valueType !== 'string') {\n    throw new Error(`'${cssPseudo.name}=${cssPseudo.value}'. ` +\n      `Unsupported css pseudo class value type: '${cssPseudo.valueType}'. Only 'string' type or empty is supported.`);\n  }\n\n  const pseudoName = requireAttributeName(cssPseudo);\n\n  if (BOOLEAN_ATTRS.includes(pseudoName)) {\n    return `${toCamelCase(pseudoName)} == ${requireBoolean(cssPseudo)}`;\n  }\n\n  if (pseudoName === 'index') {\n    return {index: cssPseudo.value};\n  }\n}\n\n/**\n * @typedef {Object} CssRule\n * @property {?string} nestingOperator The nesting operator (aka: combinator https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors)\n * @property {?string} tagName The tag name (aka: type selector https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors)\n * @property {?string[]} classNames An array of CSS class names\n * @property {?CssAttr[]} attrs An array of CSS attributes\n * @property {?CssPseudo[]} attrs An array of CSS pseudos\n * @property {?string} id CSS identifier\n * @property {?CssRule} rule A descendant of this CSS rule\n */\n\n/**\n * Convert a CSS rule to a UiSelector\n * @param {CssRule} cssRule CSS rule definition\n */\nfunction parseCssRule (cssRule) {\n  const { nestingOperator } = cssRule;\n  if (nestingOperator && nestingOperator !== ' ' && nestingOperator !== '>') {\n    throw new Error(`'${nestingOperator}' is not a supported combinator. ` +\n      `Only child combinator (>) and descendant combinator are supported.`);\n  }\n\n  let iosClassChainSelector = '';\n  if (cssRule.classNames) {\n    throw new errors.InvalidSelectorError(`'${[cssRule || '', ...cssRule.classNames].join('.')}'\n      is not a valid ios class. Must be a single string (e.g.: XCUIElementTypeWindow) without\n      dots separating them`);\n  }\n  if (cssRule.tagName && cssRule.tagName !== '*' && !cssRule.tagName.toLowerCase().startsWith('xcuielementtype')) {\n    const capitalizedTagName = cssRule.tagName.charAt(0).toUpperCase() + cssRule.tagName.slice(1);\n    cssRule.tagName = `XCUIElementType${capitalizedTagName}`;\n  }\n  iosClassChainSelector += (cssRule.tagName || '*');\n\n  let attrs = [];\n  if (cssRule.id) {\n    attrs.push(`name == \"${cssRule.id}\"`);\n  }\n  if (cssRule.attrs) {\n    for (const attr of cssRule.attrs) {\n      attrs.push(parseAttr(attr));\n    }\n  }\n  if (cssRule.pseudos) {\n    for (const pseudo of cssRule.pseudos) {\n      attrs.push(parsePseudo(pseudo));\n    }\n  }\n  const nonIndexAttrs = attrs.filter((attr) => _.isString(attr));\n  if (nonIndexAttrs && nonIndexAttrs.length > 0) {\n    iosClassChainSelector += `[\\`${nonIndexAttrs.join(' AND ')}\\`]`;\n  }\n\n  const indexAttr = attrs.find((attr) => _.isObject(attr) && attr.index);\n  if (indexAttr) {\n    iosClassChainSelector += `[${indexAttr.index}]`;\n  }\n\n  if (cssRule.rule) {\n    iosClassChainSelector += `/${parseCssRule(cssRule.rule)}`;\n  }\n\n  if (cssRule.nestingOperator === '>') {\n    return iosClassChainSelector;\n  } else {\n    return `**/` + iosClassChainSelector;\n  }\n}\n\n/**\n * @typedef {Object} CssObject\n * @property {?string} type Type of CSS object. 'rule', 'ruleset' or 'selectors'\n */\n\n/**\n * Convert CSS object to iOS Class Chain selector\n * @param {CssObject} css CSS object\n * @returns {string} The CSS object parsed as a UiSelector\n */\nfunction parseCssObject (css) {\n  switch (css.type) {\n    case 'rule':\n      return parseCssRule(css);\n    case 'ruleSet':\n      return parseCssObject(css.rule);\n    case 'selectors':\n      return css.selectors.map((selector) => parseCssObject(selector)).join('; ');\n\n    default:\n      // This is never reachable, but if it ever is do this.\n      throw new Error(`iOS Class Chain does not support '${css.type}' css. Only supports 'rule', 'ruleSet', 'selectors'`);\n  }\n}\n\n/**\n * Convert a CSS selector to a iOS Class Chain selector\n * @param {string} cssSelector CSS Selector\n * @returns {string} The CSS selector converted to an iOS Class Chain\n */\nCssConverter.toIosClassChainSelector = function toIosClassChainSelector (cssSelector) {\n  let cssObj;\n  try {\n    cssObj = parser.parse(cssSelector);\n  } catch (e) {\n    throw new errors.InvalidSelectorError(`Invalid CSS selector '${cssSelector}'. Reason: '${e.message}'`);\n  }\n  try {\n    return parseCssObject(cssObj);\n  } catch (e) {\n    throw new errors.InvalidSelectorError(`Unsupported CSS selector '${cssSelector}'. Reason: '${e.message}'`);\n  }\n};\n\nexport default CssConverter;"],"mappings":"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"}