{"version":3,"file":"ios-crash-log.js","names":["_support","require","_bluebird","_interopRequireDefault","_logger","_appiumIosDevice","_path","_lodash","_pyIosDeviceClient","REAL_DEVICE_MAGIC","MAGIC_SEP","IOSCrashLog","constructor","opts","udid","pyideviceClient","Pyidevice","logDir","path","resolve","process","env","HOME","prevLogs","logsSinceLastRequest","phoneName","sim","_gatherFromRealDevice","assertExists","listCrashes","map","x","crashLogsRoot","utilities","getDeviceName","fs","exists","log","debug","foundFiles","glob","strict","_gatherFromSimulator","B","filter","content","readFile","toUpperCase","includes","err","getCrashes","startCapture","stopCapture","getLogs","crashFiles","diff","_","difference","union","filesToJSON","getAllLogs","logFiles","paths","tmpRoot","tempDir","openDir","fullPath","fileName","last","split","exportCrash","e","warn","message","join","stat","timestamp","ctime","getTime","level","Boolean","rimraf","exports","_default","default"],"sources":["../../../lib/device-log/ios-crash-log.js"],"sourcesContent":["import { fs, tempDir } from 'appium/support';\nimport B from 'bluebird';\nimport log from '../logger';\nimport { utilities } from 'appium-ios-device';\nimport path from 'path';\nimport _ from 'lodash';\nimport Pyidevice from '../py-ios-device-client';\n\nconst REAL_DEVICE_MAGIC = '3620bbb0-fb9f-4b62-a668-896f2edc4d88';\nconst MAGIC_SEP = '/';\n\n\nclass IOSCrashLog {\n  constructor (opts = {}) {\n    this.udid = opts.udid;\n    this.pyideviceClient = this.udid ? new Pyidevice(this.udid) : null;\n    const logDir = opts.udid\n      ? path.resolve(process.env.HOME, 'Library', 'Logs', 'CrashReporter', 'MobileDevice')\n      : path.resolve(process.env.HOME, 'Library', 'Logs', 'DiagnosticReports');\n    this.logDir = logDir\n      || path.resolve(process.env.HOME || '/', 'Library', 'Logs', 'DiagnosticReports');\n    this.prevLogs = [];\n    this.logsSinceLastRequest = [];\n    this.phoneName = null;\n    this.sim = opts.sim;\n  }\n\n  async _gatherFromRealDevice () {\n    if (await this.pyideviceClient.assertExists(false)) {\n      return (await this.pyideviceClient.listCrashes())\n        .map((x) => `${REAL_DEVICE_MAGIC}${MAGIC_SEP}${x}`);\n    }\n\n    let crashLogsRoot = this.logDir;\n    if (this.udid) {\n      this.phoneName = this.phoneName || await utilities.getDeviceName(this.udid);\n      crashLogsRoot = path.resolve(crashLogsRoot, this.phoneName);\n    }\n    if (!await fs.exists(crashLogsRoot)) {\n      log.debug(`Crash reports root '${crashLogsRoot}' does not exist. Got nothing to gather.`);\n      return [];\n    }\n    const foundFiles = await fs.glob(`${crashLogsRoot}/**/*.crash`, {\n      strict: false\n    });\n    return foundFiles;\n  }\n\n  async _gatherFromSimulator () {\n    if (!await fs.exists(this.logDir)) {\n      log.debug(`Crash reports root '${this.logDir}' does not exist. Got nothing to gather.`);\n      return [];\n    }\n    // The file format has been changed from '.crash' to '.ips' since Monterey.\n    const foundFiles = await fs.glob(`${this.logDir}/**/*.+(crash|ips)`, {\n      strict: false\n    });\n    // For Simulator only include files, that contain current UDID\n    return await B.filter(foundFiles, async (x) => {\n      try {\n        const content = await fs.readFile(x, 'utf8');\n        return content.toUpperCase().includes(this.sim.udid.toUpperCase());\n      } catch (err) {\n        return false;\n      }\n    });\n  }\n\n  async getCrashes () {\n    return this.udid\n      ? await this._gatherFromRealDevice()\n      : await this._gatherFromSimulator();\n  }\n\n  async startCapture () {\n    this.prevLogs = await this.getCrashes();\n  }\n\n  async stopCapture () {\n    // needed for consistent API with other logs\n  }\n\n  async getLogs () {\n    let crashFiles = await this.getCrashes();\n    let diff = _.difference(crashFiles, this.prevLogs, this.logsSinceLastRequest);\n    this.logsSinceLastRequest = _.union(this.logsSinceLastRequest, diff);\n    return await this.filesToJSON(diff);\n  }\n\n  async getAllLogs () {\n    let crashFiles = await this.getCrashes();\n    let logFiles = _.difference(crashFiles, this.prevLogs);\n    return await this.filesToJSON(logFiles);\n  }\n\n  async filesToJSON (paths) {\n    const tmpRoot = await tempDir.openDir();\n    try {\n      return (await B.map(paths, async (fullPath) => {\n        if (_.includes(fullPath, REAL_DEVICE_MAGIC)) {\n          const fileName = _.last(fullPath.split(MAGIC_SEP));\n          try {\n            await this.pyideviceClient.exportCrash(fileName, tmpRoot);\n          } catch (e) {\n            log.warn(`Cannot export the crash report '${fileName}'. Skipping it. ` +\n              `Original error: ${e.message}`);\n            return;\n          }\n          fullPath = path.join(tmpRoot, fileName);\n        }\n        const stat = await fs.stat(fullPath);\n        return {\n          timestamp: stat.ctime.getTime(),\n          level: 'ALL',\n          message: await fs.readFile(fullPath, 'utf8')\n        };\n      })).filter(Boolean);\n    } finally {\n      await fs.rimraf(tmpRoot);\n    }\n  }\n}\n\nexport { IOSCrashLog };\nexport default IOSCrashLog;\n"],"mappings":";;;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,SAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,OAAA,GAAAD,sBAAA,CAAAF,OAAA;AACA,IAAAI,gBAAA,GAAAJ,OAAA;AACA,IAAAK,KAAA,GAAAH,sBAAA,CAAAF,OAAA;AACA,IAAAM,OAAA,GAAAJ,sBAAA,CAAAF,OAAA;AACA,IAAAO,kBAAA,GAAAL,sBAAA,CAAAF,OAAA;AAEA,MAAMQ,iBAAiB,GAAG,sCAAsC;AAChE,MAAMC,SAAS,GAAG,GAAG;AAGrB,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;IACtB,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI;IACrB,IAAI,CAACC,eAAe,GAAG,IAAI,CAACD,IAAI,GAAG,IAAIE,0BAAS,CAAC,IAAI,CAACF,IAAI,CAAC,GAAG,IAAI;IAClE,MAAMG,MAAM,GAAGJ,IAAI,CAACC,IAAI,GACpBI,aAAI,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,eAAe,EAAE,cAAc,CAAC,GAClFJ,aAAI,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,mBAAmB,CAAC;IAC1E,IAAI,CAACL,MAAM,GAAGA,MAAM,IACfC,aAAI,CAACC,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,GAAG,EAAE,SAAS,EAAE,MAAM,EAAE,mBAAmB,CAAC;IAClF,IAAI,CAACC,QAAQ,GAAG,EAAE;IAClB,IAAI,CAACC,oBAAoB,GAAG,EAAE;IAC9B,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,GAAG,GAAGb,IAAI,CAACa,GAAG;EACrB;EAEA,MAAMC,qBAAqBA,CAAA,EAAI;IAC7B,IAAI,MAAM,IAAI,CAACZ,eAAe,CAACa,YAAY,CAAC,KAAK,CAAC,EAAE;MAClD,OAAO,CAAC,MAAM,IAAI,CAACb,eAAe,CAACc,WAAW,EAAE,EAC7CC,GAAG,CAAEC,CAAC,IAAM,GAAEtB,iBAAkB,GAAEC,SAAU,GAAEqB,CAAE,EAAC,CAAC;IACvD;IAEA,IAAIC,aAAa,GAAG,IAAI,CAACf,MAAM;IAC/B,IAAI,IAAI,CAACH,IAAI,EAAE;MACb,IAAI,CAACW,SAAS,GAAG,IAAI,CAACA,SAAS,KAAI,MAAMQ,0BAAS,CAACC,aAAa,CAAC,IAAI,CAACpB,IAAI,CAAC;MAC3EkB,aAAa,GAAGd,aAAI,CAACC,OAAO,CAACa,aAAa,EAAE,IAAI,CAACP,SAAS,CAAC;IAC7D;IACA,IAAI,EAAC,MAAMU,WAAE,CAACC,MAAM,CAACJ,aAAa,CAAC,GAAE;MACnCK,eAAG,CAACC,KAAK,CAAE,uBAAsBN,aAAc,0CAAyC,CAAC;MACzF,OAAO,EAAE;IACX;IACA,MAAMO,UAAU,GAAG,MAAMJ,WAAE,CAACK,IAAI,CAAE,GAAER,aAAc,aAAY,EAAE;MAC9DS,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAOF,UAAU;EACnB;EAEA,MAAMG,oBAAoBA,CAAA,EAAI;IAC5B,IAAI,EAAC,MAAMP,WAAE,CAACC,MAAM,CAAC,IAAI,CAACnB,MAAM,CAAC,GAAE;MACjCoB,eAAG,CAACC,KAAK,CAAE,uBAAsB,IAAI,CAACrB,MAAO,0CAAyC,CAAC;MACvF,OAAO,EAAE;IACX;IAEA,MAAMsB,UAAU,GAAG,MAAMJ,WAAE,CAACK,IAAI,CAAE,GAAE,IAAI,CAACvB,MAAO,oBAAmB,EAAE;MACnEwB,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,OAAO,MAAME,iBAAC,CAACC,MAAM,CAACL,UAAU,EAAE,MAAOR,CAAC,IAAK;MAC7C,IAAI;QACF,MAAMc,OAAO,GAAG,MAAMV,WAAE,CAACW,QAAQ,CAACf,CAAC,EAAE,MAAM,CAAC;QAC5C,OAAOc,OAAO,CAACE,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACtB,GAAG,CAACZ,IAAI,CAACiC,WAAW,EAAE,CAAC;MACpE,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZ,OAAO,KAAK;MACd;IACF,CAAC,CAAC;EACJ;EAEA,MAAMC,UAAUA,CAAA,EAAI;IAClB,OAAO,IAAI,CAACpC,IAAI,GACZ,MAAM,IAAI,CAACa,qBAAqB,EAAE,GAClC,MAAM,IAAI,CAACe,oBAAoB,EAAE;EACvC;EAEA,MAAMS,YAAYA,CAAA,EAAI;IACpB,IAAI,CAAC5B,QAAQ,GAAG,MAAM,IAAI,CAAC2B,UAAU,EAAE;EACzC;EAEA,MAAME,WAAWA,CAAA,EAAI,CAErB;EAEA,MAAMC,OAAOA,CAAA,EAAI;IACf,IAAIC,UAAU,GAAG,MAAM,IAAI,CAACJ,UAAU,EAAE;IACxC,IAAIK,IAAI,GAAGC,eAAC,CAACC,UAAU,CAACH,UAAU,EAAE,IAAI,CAAC/B,QAAQ,EAAE,IAAI,CAACC,oBAAoB,CAAC;IAC7E,IAAI,CAACA,oBAAoB,GAAGgC,eAAC,CAACE,KAAK,CAAC,IAAI,CAAClC,oBAAoB,EAAE+B,IAAI,CAAC;IACpE,OAAO,MAAM,IAAI,CAACI,WAAW,CAACJ,IAAI,CAAC;EACrC;EAEA,MAAMK,UAAUA,CAAA,EAAI;IAClB,IAAIN,UAAU,GAAG,MAAM,IAAI,CAACJ,UAAU,EAAE;IACxC,IAAIW,QAAQ,GAAGL,eAAC,CAACC,UAAU,CAACH,UAAU,EAAE,IAAI,CAAC/B,QAAQ,CAAC;IACtD,OAAO,MAAM,IAAI,CAACoC,WAAW,CAACE,QAAQ,CAAC;EACzC;EAEA,MAAMF,WAAWA,CAAEG,KAAK,EAAE;IACxB,MAAMC,OAAO,GAAG,MAAMC,gBAAO,CAACC,OAAO,EAAE;IACvC,IAAI;MACF,OAAO,CAAC,MAAMtB,iBAAC,CAACb,GAAG,CAACgC,KAAK,EAAE,MAAOI,QAAQ,IAAK;QAC7C,IAAIV,eAAC,CAACR,QAAQ,CAACkB,QAAQ,EAAEzD,iBAAiB,CAAC,EAAE;UAC3C,MAAM0D,QAAQ,GAAGX,eAAC,CAACY,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC3D,SAAS,CAAC,CAAC;UAClD,IAAI;YACF,MAAM,IAAI,CAACK,eAAe,CAACuD,WAAW,CAACH,QAAQ,EAAEJ,OAAO,CAAC;UAC3D,CAAC,CAAC,OAAOQ,CAAC,EAAE;YACVlC,eAAG,CAACmC,IAAI,CAAE,mCAAkCL,QAAS,kBAAiB,GACnE,mBAAkBI,CAAC,CAACE,OAAQ,EAAC,CAAC;YACjC;UACF;UACAP,QAAQ,GAAGhD,aAAI,CAACwD,IAAI,CAACX,OAAO,EAAEI,QAAQ,CAAC;QACzC;QACA,MAAMQ,IAAI,GAAG,MAAMxC,WAAE,CAACwC,IAAI,CAACT,QAAQ,CAAC;QACpC,OAAO;UACLU,SAAS,EAAED,IAAI,CAACE,KAAK,CAACC,OAAO,EAAE;UAC/BC,KAAK,EAAE,KAAK;UACZN,OAAO,EAAE,MAAMtC,WAAE,CAACW,QAAQ,CAACoB,QAAQ,EAAE,MAAM;QAC7C,CAAC;MACH,CAAC,CAAC,EAAEtB,MAAM,CAACoC,OAAO,CAAC;IACrB,CAAC,SAAS;MACR,MAAM7C,WAAE,CAAC8C,MAAM,CAAClB,OAAO,CAAC;IAC1B;EACF;AACF;AAACmB,OAAA,CAAAvE,WAAA,GAAAA,WAAA;AAAA,IAAAwE,QAAA,GAGcxE,WAAW;AAAAuE,OAAA,CAAAE,OAAA,GAAAD,QAAA"}