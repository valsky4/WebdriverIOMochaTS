{"version":3,"file":"ios-performance-log.js","names":["_support","require","_lodash","_interopRequireDefault","log","logger","getLogger","MAX_EVENTS","IOSPerformanceLog","constructor","remoteDebugger","maxEvents","parseInt","timelineEvents","startCapture","debug","startTimeline","onTimelineEvent","bind","stopCapture","stopTimeline","event","_","truncate","JSON","stringify","push","length","removedEvent","shift","warn","getLogs","events","getAllLogs","exports","_default","default"],"sources":["../../../lib/device-log/ios-performance-log.js"],"sourcesContent":["import { logger } from 'appium/support';\nimport _ from 'lodash';\n\nconst log = logger.getLogger('IOSPerformanceLog');\nconst MAX_EVENTS = 5000;\n\nclass IOSPerformanceLog {\n  constructor (remoteDebugger, maxEvents = MAX_EVENTS) {\n    this.remoteDebugger = remoteDebugger;\n    this.maxEvents = parseInt(maxEvents, 10);\n\n    this.timelineEvents = [];\n  }\n\n  async startCapture () {\n    log.debug('Starting performance (Timeline) log capture');\n    this.timelineEvents = [];\n    return await this.remoteDebugger.startTimeline(this.onTimelineEvent.bind(this));\n  }\n\n  async stopCapture () {\n    log.debug('Stopping performance (Timeline) log capture');\n    return await this.remoteDebugger.stopTimeline();\n  }\n\n  onTimelineEvent (event) {\n    log.debug(`Received Timeline event: ${_.truncate(JSON.stringify(event))}`);\n    this.timelineEvents.push(event);\n\n    // if we have too many, get rid of the oldest log line\n    if (this.timelineEvents.length > this.maxEvents) {\n      let removedEvent = this.timelineEvents.shift();\n      log.warn(`Too many Timeline events, removing earliest: ${_.truncate(JSON.stringify(removedEvent))}`);\n    }\n  }\n\n  async getLogs () { // eslint-disable-line require-await\n    let events = this.timelineEvents;\n\n    // flush events\n    log.debug('Flushing Timeline events');\n    this.timelineEvents = [];\n\n    return events;\n  }\n\n  async getAllLogs () { // eslint-disable-line require-await\n    return this.getLogs();\n  }\n}\n\n\nexport { IOSPerformanceLog };\nexport default IOSPerformanceLog;\n"],"mappings":";;;;;;;;AAAA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AAEA,MAAMG,GAAG,GAAGC,eAAM,CAACC,SAAS,CAAC,mBAAmB,CAAC;AACjD,MAAMC,UAAU,GAAG,IAAI;AAEvB,MAAMC,iBAAiB,CAAC;EACtBC,WAAWA,CAAEC,cAAc,EAAEC,SAAS,GAAGJ,UAAU,EAAE;IACnD,IAAI,CAACG,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,SAAS,GAAGC,QAAQ,CAACD,SAAS,EAAE,EAAE,CAAC;IAExC,IAAI,CAACE,cAAc,GAAG,EAAE;EAC1B;EAEA,MAAMC,YAAYA,CAAA,EAAI;IACpBV,GAAG,CAACW,KAAK,CAAC,6CAA6C,CAAC;IACxD,IAAI,CAACF,cAAc,GAAG,EAAE;IACxB,OAAO,MAAM,IAAI,CAACH,cAAc,CAACM,aAAa,CAAC,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACjF;EAEA,MAAMC,WAAWA,CAAA,EAAI;IACnBf,GAAG,CAACW,KAAK,CAAC,6CAA6C,CAAC;IACxD,OAAO,MAAM,IAAI,CAACL,cAAc,CAACU,YAAY,EAAE;EACjD;EAEAH,eAAeA,CAAEI,KAAK,EAAE;IACtBjB,GAAG,CAACW,KAAK,CAAE,4BAA2BO,eAAC,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAE,EAAC,CAAC;IAC1E,IAAI,CAACR,cAAc,CAACa,IAAI,CAACL,KAAK,CAAC;IAG/B,IAAI,IAAI,CAACR,cAAc,CAACc,MAAM,GAAG,IAAI,CAAChB,SAAS,EAAE;MAC/C,IAAIiB,YAAY,GAAG,IAAI,CAACf,cAAc,CAACgB,KAAK,EAAE;MAC9CzB,GAAG,CAAC0B,IAAI,CAAE,gDAA+CR,eAAC,CAACC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,YAAY,CAAC,CAAE,EAAC,CAAC;IACtG;EACF;EAEA,MAAMG,OAAOA,CAAA,EAAI;IACf,IAAIC,MAAM,GAAG,IAAI,CAACnB,cAAc;IAGhCT,GAAG,CAACW,KAAK,CAAC,0BAA0B,CAAC;IACrC,IAAI,CAACF,cAAc,GAAG,EAAE;IAExB,OAAOmB,MAAM;EACf;EAEA,MAAMC,UAAUA,CAAA,EAAI;IAClB,OAAO,IAAI,CAACF,OAAO,EAAE;EACvB;AACF;AAACG,OAAA,CAAA1B,iBAAA,GAAAA,iBAAA;AAAA,IAAA2B,QAAA,GAIc3B,iBAAiB;AAAA0B,OAAA,CAAAE,OAAA,GAAAD,QAAA"}