{"version":3,"file":"safari-console-log.js","names":["_rotatingLog","require","_lodash","_interopRequireDefault","_support","SafariConsoleLog","RotatingLog","constructor","showLogs","log","warning","warn","addLogLine","err","out","isCapturing","logs","length","MAX_LOG_ENTRIES_COUNT","shift","logIdxSinceLastRequest","entry","level","error","timestamp","Date","now","message","JSON","stringify","push","_","has","count","_previousOutput","text","util","pluralize","line","split","url","toUpperCase","column","exports","_default","default"],"sources":["../../../lib/device-log/safari-console-log.js"],"sourcesContent":["import { RotatingLog, MAX_LOG_ENTRIES_COUNT } from './rotating-log';\nimport _ from 'lodash';\nimport { util } from 'appium/support';\n\n\nclass SafariConsoleLog extends RotatingLog {\n  constructor (showLogs) {\n    super(showLogs, 'SafariConsole');\n\n    // js console has `warning` level, so map to `warn`\n    this.log.warning = this.log.warn;\n  }\n\n  addLogLine (err, out) {\n    if (this.isCapturing) {\n      this.logs = this.logs || [];\n      while (this.logs.length >= MAX_LOG_ENTRIES_COUNT) {\n        this.logs.shift();\n        if (this.logIdxSinceLastRequest > 0) {\n          this.logIdxSinceLastRequest--;\n        }\n      }\n\n      /*\n       * The output will be like:\n       *   {\n       *     \"source\": \"javascript\",\n       *     \"level\":\"error\",\n       *     \"text\":\"ReferenceError: Can't find variable: s_account\",\n       *     \"type\":\"log\",\n       *     \"line\":2,\n       *     \"column\":21,\n       *     \"url\":\"https://assets.adobedtm.com/b46e318d845250834eda10c5a20827c045a4d76f/scripts/satellite-57866f8b64746d53a8000104-staging.js\",\n       *     \"repeatCount\":1,\n       *     \"stackTrace\":[{\n       *       \"functionName\":\"global code\",\n       *       \"url\":\"https://assets.adobedtm.com/b46e318d845250834eda10c5a20827c045a4d76f/scripts/satellite-57866f8b64746d53a8000104-staging.js\",\n       *       \"scriptId\":\"6\",\n       *       \"lineNumber\":2,\n       *       \"columnNumber\":21\n       *     }]\n       *  }\n       *\n       * we need, at least, `level` (in accordance with Java levels\n       * (https://docs.oracle.com/javase/7/docs/api/java/util/logging/Level.html)),\n       * `timestamp`, and `message` to satisfy the java client. In order to\n       * provide all the information to the client, `message` is the full\n       * object, stringified.\n       */\n      const entry = {\n        level: {\n          error: 'SEVERE',\n          warning: 'WARNING',\n          log: 'FINE',\n        }[out.level] || 'INFO',\n        timestamp: Date.now(),\n        message: JSON.stringify(out),\n      };\n      this.logs.push(entry);\n    }\n\n    if (_.has(out, 'count')) {\n      // this is a notification of the previous message being repeated\n      // this should _never_ be the first message, so the previous one ought to\n      // be populated. If it is not, nothing will break, it will just look odd\n      // in the output below (no url or line numbers)\n      const count = out.count;\n      out = this._previousOutput || {};\n      out.text = `Previous message repeated ${util.pluralize('time', count, true)}`;\n    } else {\n      // save the most recent output\n      this._previousOutput = out;\n    }\n\n    // format output like\n    //     SafariConsole [WARNING][http://appium.io 2:13] Log something to warn\n    if (this.showLogs) {\n      let level = 'debug';\n      if (out.level === 'warning' || out.level === 'error') {\n        level = out.level;\n      }\n      for (const line of out.text.split('\\n')) {\n        // url is optional, so get formatting here\n        const url = out.url ? `${out.url} ` : '';\n        this.log[level](`[${level.toUpperCase()}][${url}${out.line}:${out.column}] ${line}`);\n      }\n    }\n  }\n}\n\nexport { SafariConsoleLog };\nexport default SafariConsoleLog;\n"],"mappings":";;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAC,sBAAA,CAAAF,OAAA;AACA,IAAAG,QAAA,GAAAH,OAAA;AAGA,MAAMI,gBAAgB,SAASC,wBAAW,CAAC;EACzCC,WAAWA,CAAEC,QAAQ,EAAE;IACrB,KAAK,CAACA,QAAQ,EAAE,eAAe,CAAC;IAGhC,IAAI,CAACC,GAAG,CAACC,OAAO,GAAG,IAAI,CAACD,GAAG,CAACE,IAAI;EAClC;EAEAC,UAAUA,CAAEC,GAAG,EAAEC,GAAG,EAAE;IACpB,IAAI,IAAI,CAACC,WAAW,EAAE;MACpB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACA,IAAI,IAAI,EAAE;MAC3B,OAAO,IAAI,CAACA,IAAI,CAACC,MAAM,IAAIC,kCAAqB,EAAE;QAChD,IAAI,CAACF,IAAI,CAACG,KAAK,EAAE;QACjB,IAAI,IAAI,CAACC,sBAAsB,GAAG,CAAC,EAAE;UACnC,IAAI,CAACA,sBAAsB,EAAE;QAC/B;MACF;MA4BA,MAAMC,KAAK,GAAG;QACZC,KAAK,EAAE;UACLC,KAAK,EAAE,QAAQ;UACfb,OAAO,EAAE,SAAS;UAClBD,GAAG,EAAE;QACP,CAAC,CAACK,GAAG,CAACQ,KAAK,CAAC,IAAI,MAAM;QACtBE,SAAS,EAAEC,IAAI,CAACC,GAAG,EAAE;QACrBC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACf,GAAG;MAC7B,CAAC;MACD,IAAI,CAACE,IAAI,CAACc,IAAI,CAACT,KAAK,CAAC;IACvB;IAEA,IAAIU,eAAC,CAACC,GAAG,CAAClB,GAAG,EAAE,OAAO,CAAC,EAAE;MAKvB,MAAMmB,KAAK,GAAGnB,GAAG,CAACmB,KAAK;MACvBnB,GAAG,GAAG,IAAI,CAACoB,eAAe,IAAI,CAAC,CAAC;MAChCpB,GAAG,CAACqB,IAAI,GAAI,6BAA4BC,aAAI,CAACC,SAAS,CAAC,MAAM,EAAEJ,KAAK,EAAE,IAAI,CAAE,EAAC;IAC/E,CAAC,MAAM;MAEL,IAAI,CAACC,eAAe,GAAGpB,GAAG;IAC5B;IAIA,IAAI,IAAI,CAACN,QAAQ,EAAE;MACjB,IAAIc,KAAK,GAAG,OAAO;MACnB,IAAIR,GAAG,CAACQ,KAAK,KAAK,SAAS,IAAIR,GAAG,CAACQ,KAAK,KAAK,OAAO,EAAE;QACpDA,KAAK,GAAGR,GAAG,CAACQ,KAAK;MACnB;MACA,KAAK,MAAMgB,IAAI,IAAIxB,GAAG,CAACqB,IAAI,CAACI,KAAK,CAAC,IAAI,CAAC,EAAE;QAEvC,MAAMC,GAAG,GAAG1B,GAAG,CAAC0B,GAAG,GAAI,GAAE1B,GAAG,CAAC0B,GAAI,GAAE,GAAG,EAAE;QACxC,IAAI,CAAC/B,GAAG,CAACa,KAAK,CAAC,CAAE,IAAGA,KAAK,CAACmB,WAAW,EAAG,KAAID,GAAI,GAAE1B,GAAG,CAACwB,IAAK,IAAGxB,GAAG,CAAC4B,MAAO,KAAIJ,IAAK,EAAC,CAAC;MACtF;IACF;EACF;AACF;AAACK,OAAA,CAAAtC,gBAAA,GAAAA,gBAAA;AAAA,IAAAuC,QAAA,GAGcvC,gBAAgB;AAAAsC,OAAA,CAAAE,OAAA,GAAAD,QAAA"}