{"version":3,"file":"ios-deploy.js","names":["_support","require","_path","_interopRequireDefault","_appiumIosDevice","_bluebird","_logger","_lodash","_teen_process","_appUtils","_iosFsHelpers","APPLICATION_INSTALLED_NOTIFICATION","INSTALLATION_STAGING_DIR","APPLICATION_NOTIFICATION_TIMEOUT_MS","IOS_DEPLOY_TIMEOUT_MS","IOS_DEPLOY","APP_INSTALL_STRATEGY","Object","freeze","SERIAL","PARALLEL","IOSDeploy","constructor","udid","remove","bundleId","service","services","startInstallationProxyService","uninstallApplication","close","removeApp","install","app","timeout","strategy","_","values","includes","toLower","Error","log","debug","installWithIosDeploy","fs","which","err","exec","stderr","stdout","message","timer","timing","Timer","start","afcService","startAfcService","extractBundleId","bundlePathOnPhone","path","join","pushFolder","timeoutMs","enableParallelPush","installOrUpgradeApplication","isAppInstalled","warn","B","TimeoutError","err1","info","getDuration","asMilliSeconds","toFixed","isUpgrade","notificationService","startNotificationProxyService","installationService","appInstalledNotification","resolve","observeNotification","notification","clientOptions","PackageType","upgradeApplication","installApplication","e","installApp","args","Boolean","fetchAppInfo","lookupApplications","bundleIds","terminateApp","instrumentService","installProxyService","apps","listApplications","executableName","CFBundleExecutable","startInstrumentService","processes","callChannel","INSTRUMENT_CHANNEL","DEVICE_INFO","process","selector","find","name","PROCESS_CONTROL","pid","getUserInstalledBundleIdsByBundleName","bundleName","applications","applicationType","reduce","acc","CFBundleName","key","push","getPlatformVersion","utilities","getOSVersion","_default","exports","default"],"sources":["../../lib/ios-deploy.js"],"sourcesContent":["import { fs, timing } from 'appium/support';\nimport path from 'path';\nimport { services, utilities, INSTRUMENT_CHANNEL } from 'appium-ios-device';\nimport B from 'bluebird';\nimport log from './logger';\nimport _ from 'lodash';\nimport { exec } from 'teen_process';\nimport { extractBundleId } from './app-utils';\nimport { pushFolder } from './ios-fs-helpers';\n\nconst APPLICATION_INSTALLED_NOTIFICATION = 'com.apple.mobile.application_installed';\nconst INSTALLATION_STAGING_DIR = 'PublicStaging';\nconst APPLICATION_NOTIFICATION_TIMEOUT_MS = 30 * 1000;\nconst IOS_DEPLOY_TIMEOUT_MS = 4 * 60 * 1000;\nconst IOS_DEPLOY = 'ios-deploy';\nconst APP_INSTALL_STRATEGY = Object.freeze({\n  SERIAL: 'serial',\n  PARALLEL: 'parallel',\n  IOS_DEPLOY,\n});\n\n\nclass IOSDeploy {\n\n  constructor (udid) {\n    this.udid = udid;\n  }\n\n  async remove (bundleId) {\n    const service = await services.startInstallationProxyService(this.udid);\n    try {\n      await service.uninstallApplication(bundleId);\n    } finally {\n      service.close();\n    }\n  }\n\n  async removeApp (bundleId) {\n    await this.remove(bundleId);\n  }\n\n  async install (app, timeout, strategy = null) {\n    if (strategy && !_.values(APP_INSTALL_STRATEGY).includes(_.toLower(strategy))) {\n      throw new Error(`App installation strategy '${strategy}' is unknown. ` +\n        `Only the following strategies are supported: ${_.values(APP_INSTALL_STRATEGY)}`);\n    }\n    log.debug(`Using '${strategy ?? APP_INSTALL_STRATEGY.SERIAL}' app deployment strategy. ` +\n      `You could change it by providing another value to the 'appInstallStrategy' capability`);\n\n    const installWithIosDeploy = async () => {\n      try {\n        await fs.which(IOS_DEPLOY);\n      } catch (err) {\n        throw new Error(`'${IOS_DEPLOY}' utility has not been found in PATH. Is it installed?`);\n      }\n      try {\n        await exec(IOS_DEPLOY, [\n          '--id', this.udid,\n          '--bundle', app,\n        ], {timeout: timeout ?? IOS_DEPLOY_TIMEOUT_MS});\n      } catch (err) {\n        throw new Error(err.stderr || err.stdout || err.message);\n      }\n    };\n\n    const timer = new timing.Timer().start();\n    if (_.toLower(strategy) === APP_INSTALL_STRATEGY.IOS_DEPLOY) {\n      await installWithIosDeploy();\n    } else {\n      const afcService = await services.startAfcService(this.udid);\n      try {\n        const bundleId = await extractBundleId(app);\n        const bundlePathOnPhone = path.join(INSTALLATION_STAGING_DIR, bundleId);\n        await pushFolder(afcService, app, bundlePathOnPhone, {\n          timeoutMs: timeout,\n          enableParallelPush: _.toLower(strategy) === APP_INSTALL_STRATEGY.PARALLEL,\n        });\n        await this.installOrUpgradeApplication(bundlePathOnPhone, await this.isAppInstalled(bundleId));\n      } catch (err) {\n        log.warn(`Error installing app '${app}': ${err.message}`);\n        if (err instanceof B.TimeoutError) {\n          log.warn(`Consider increasing the value of 'appPushTimeout' capability`);\n        }\n        log.warn(`Falling back to '${IOS_DEPLOY}' usage`);\n        try {\n          await installWithIosDeploy();\n        } catch (err1) {\n          throw new Error(`Could not install '${app}':\\n` +\n            `  - ${err.message}\\n` +\n            `  - ${err1.message}`);\n        }\n      } finally {\n        afcService.close();\n      }\n    }\n    log.info(`App installation succeeded after ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n  }\n\n  async installOrUpgradeApplication (bundlePathOnPhone, isUpgrade = false) {\n    const notificationService = await services.startNotificationProxyService(this.udid);\n    const installationService = await services.startInstallationProxyService(this.udid);\n    const appInstalledNotification = new B((resolve) => {\n      notificationService.observeNotification(APPLICATION_INSTALLED_NOTIFICATION, {\n        notification: resolve\n      });\n    });\n    const clientOptions = {PackageType: 'Developer'};\n    try {\n      if (isUpgrade) {\n        log.debug(`An upgrade of the existing application is going to be performed`);\n        await installationService.upgradeApplication(bundlePathOnPhone, clientOptions);\n      } else {\n        log.debug(`A new application installation is going to be performed`);\n        await installationService.installApplication(bundlePathOnPhone, clientOptions);\n      }\n      try {\n        await appInstalledNotification.timeout(APPLICATION_NOTIFICATION_TIMEOUT_MS,\n          `Could not get the application installed notification within ` +\n          `${APPLICATION_NOTIFICATION_TIMEOUT_MS}ms but we will continue`);\n      } catch (e) {\n        log.warn(`Failed to receive the notification. Error: ${e.message}`);\n      }\n    } finally {\n      installationService.close();\n      notificationService.close();\n    }\n  }\n\n  async installApp (...args) {\n    return await this.install(...args);\n  }\n\n  /**\n   * Return an application object if test app has 'bundleid'.\n   * The target bundleid can be User and System apps.\n   * @param {string} bundleId The bundleId to ensure it is installed\n   * @return {Promise<boolean>} Returns True if the bundleid exists in the result of 'listApplications' like:\n   * { \"com.apple.Preferences\":{\n   *   \"UIRequiredDeviceCapabilities\":[\"arm64\"],\n   *   \"UIRequiresFullScreen\":true,\n   *   \"CFBundleInfoDictionaryVersion\":\"6.0\",\n   *   \"Entitlements\":\n   *     {\"com.apple.frontboard.delete-application-snapshots\":true,..\n   */\n  async isAppInstalled (bundleId) {\n    return Boolean(await this.fetchAppInfo(bundleId));\n  }\n\n  async fetchAppInfo (bundleId) {\n    const service = await services.startInstallationProxyService(this.udid);\n    try {\n      return (await service.lookupApplications({ bundleIds: bundleId }))[bundleId];\n    } finally {\n      service.close();\n    }\n  }\n\n  async terminateApp (bundleId) {\n    let instrumentService;\n    let installProxyService;\n    try {\n      installProxyService = await services.startInstallationProxyService(this.udid);\n      const apps = await installProxyService.listApplications();\n      if (!apps[bundleId]) {\n        log.info(`The bundle id '${bundleId}' did not exist`);\n        return false;\n      }\n      const executableName = apps[bundleId].CFBundleExecutable;\n      log.debug(`The executable name for the bundle id '${bundleId}' was '${executableName}'`);\n      instrumentService = await services.startInstrumentService(this.udid);\n      const processes = await instrumentService.callChannel(INSTRUMENT_CHANNEL.DEVICE_INFO, 'runningProcesses');\n      const process = processes.selector.find((process) => process.name === executableName);\n      if (!process) {\n        log.info(`The process of the bundle id '${bundleId}' was not running`);\n        return false;\n      }\n      await instrumentService.callChannel(INSTRUMENT_CHANNEL.PROCESS_CONTROL, 'killPid:', `${process.pid}`);\n      return true;\n    } catch (err) {\n      log.warn(`Failed to kill '${bundleId}'. Original error: ${err.stderr || err.message}`);\n      return false;\n    } finally {\n      if (installProxyService) {\n        installProxyService.close();\n      }\n      if (instrumentService) {\n        instrumentService.close();\n      }\n    }\n  }\n\n  /**\n   * @param {string} bundleName The name of CFBundleName in Info.plist\n   *\n   * @returns {Array<string>} A list of User level apps' bundle ids which has\n   *                          'CFBundleName' attribute as 'bundleName'.\n   */\n  async getUserInstalledBundleIdsByBundleName (bundleName) {\n    const service = await services.startInstallationProxyService(this.udid);\n    try {\n      const applications = await service.listApplications({applicationType: 'User'});\n      return _.reduce(applications, (acc, {CFBundleName}, key) => {\n        if (CFBundleName === bundleName) {\n          acc.push(key);\n        }\n        return acc;\n      }, []);\n    } finally {\n      service.close();\n    }\n  }\n\n  async getPlatformVersion () {\n    return await utilities.getOSVersion(this.udid);\n  }\n}\n\nexport default IOSDeploy;\n"],"mappings":"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"}