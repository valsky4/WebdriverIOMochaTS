{"version":3,"file":"ios-fs-helpers.js","names":["_lodash","_interopRequireDefault","require","_bluebird","_support","_path","_logger","IO_TIMEOUT_MS","MAX_IO_CHUNK_SIZE","pullFile","afcService","remotePath","stream","createReadStream","autoDestroy","pullPromise","B","resolve","reject","on","timeout","buffers","data","push","Buffer","concat","folderExists","folderPath","fs","stat","isDirectory","e","pullFolder","remoteRootPath","tmpFolder","tempDir","openDir","localTopItem","countFilesSuccess","countFilesFail","countFolders","pullPromises","walkDir","isDir","localPath","path","join","dirname","mkdirp","split","sep","length","readStream","writeStream","createWriteStream","autoClose","onStreamingError","unpipe","log","warn","message","pipe","any","_","remove","p","isFulfilled","isEmpty","all","info","util","pluralize","zip","toInMemoryZip","encodeToBase64","rimraf","remoteMkdirp","remoteRoot","listDirectory","createDirectory","pushFile","base64Data","pushError","pushPromise","write","from","end","pushFolder","srcRootPath","dstRootPath","opts","timeoutMs","enableParallelPush","timer","timing","Timer","start","itemsToPush","glob","cwd","nosort","mark","debug","foldersToPush","filesToPush","reduce","acc","x","endsWith","deleteDirectory","ign","foldersToPushByHierarchy","sort","a","b","relativeFolderPath","absoluteFolderPath","trimEnd","relativePath","absoluteSourcePath","absoluteDestinationPath","destroy","filePushPromise","onStreamError","pushPromises","relativeFilePath","shuffle","getDuration","asMilliSeconds","toFixed"],"sources":["../../lib/ios-fs-helpers.js"],"sourcesContent":["import _ from 'lodash';\nimport B from 'bluebird';\nimport { fs, tempDir, mkdirp, zip, util, timing } from 'appium/support';\nimport path from 'path';\nimport log from './logger';\n\nconst IO_TIMEOUT_MS = 4 * 60 * 1000;\n// Mobile devices use NAND memory modules for the storage,\n// and the parallelism there is not as performant as on regular SSDs\nconst MAX_IO_CHUNK_SIZE = 8;\n\n/**\n * Retrieve a file from a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remotePath Relative path to the file on the device\n * @returns {Buffer} The file content as a buffer\n */\nasync function pullFile (afcService, remotePath) {\n  const stream = await afcService.createReadStream(remotePath, { autoDestroy: true });\n  const pullPromise = new B((resolve, reject) => {\n    stream.on('close', resolve);\n    stream.on('error', reject);\n  }).timeout(IO_TIMEOUT_MS);\n  const buffers = [];\n  stream.on('data', (data) => buffers.push(data));\n  await pullPromise;\n  return Buffer.concat(buffers);\n}\n\n/**\n * Checks a presence of a local folder.\n *\n * @param {string} folderPath Full path to the local folder\n * @returns {boolean} True if the folder exists and is actually a folder\n */\nasync function folderExists (folderPath) {\n  try {\n    return (await fs.stat(folderPath)).isDirectory();\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Retrieve a folder from a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remoteRootPath Relative path to the folder on the device\n * @returns {Buffer} The folder content as a zipped base64-encoded buffer\n */\nasync function pullFolder (afcService, remoteRootPath) {\n  const tmpFolder = await tempDir.openDir();\n  try {\n    let localTopItem = null;\n    let countFilesSuccess = 0;\n    let countFilesFail = 0;\n    let countFolders = 0;\n    const pullPromises = [];\n    await afcService.walkDir(remoteRootPath, true, async (remotePath, isDir) => {\n      const localPath = path.join(tmpFolder, remotePath);\n      const dirname = isDir ? localPath : path.dirname(localPath);\n      if (!await folderExists(dirname)) {\n        await mkdirp(dirname);\n      }\n      if (!localTopItem\n          || localPath.split(path.sep).length < localTopItem.split(path.sep).length) {\n        localTopItem = localPath;\n      }\n      if (isDir) {\n        ++countFolders;\n        return;\n      }\n\n      const readStream = await afcService.createReadStream(remotePath, {autoDestroy: true});\n      const writeStream = fs.createWriteStream(localPath, {autoClose: true});\n      pullPromises.push(\n        new B((resolve) => {\n          writeStream.on('close', () => {\n            ++countFilesSuccess;\n            resolve();\n          });\n          const onStreamingError = (e) => {\n            readStream.unpipe(writeStream);\n            log.warn(`Cannot pull '${remotePath}' to '${localPath}'. ` +\n              `The file will be skipped. Original error: ${e.message}`);\n            ++countFilesFail;\n            resolve();\n          };\n          writeStream.on('error', onStreamingError);\n          readStream.on('error', onStreamingError);\n        }).timeout(IO_TIMEOUT_MS)\n      );\n      readStream.pipe(writeStream);\n      if (pullPromises.length >= MAX_IO_CHUNK_SIZE) {\n        await B.any(pullPromises);\n      }\n      _.remove(pullPromises, (p) => p.isFulfilled());\n    });\n    // Wait for the rest of files to be pulled\n    if (!_.isEmpty(pullPromises)) {\n      await B.all(pullPromises);\n    }\n    log.info(`Pulled ${util.pluralize('file', countFilesSuccess, true)} out of ` +\n      `${countFilesSuccess + countFilesFail} and ${util.pluralize('folder', countFolders, true)} ` +\n      `from '${remoteRootPath}'`);\n    return await zip.toInMemoryZip(localTopItem ? path.dirname(localTopItem) : tmpFolder, {\n      encodeToBase64: true,\n    });\n  } finally {\n    await fs.rimraf(tmpFolder);\n  }\n}\n\n/**\n * Creates remote folder path recursively. Noop if the given path\n * already exists\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remoteRoot The relative path to the remote folder structure\n * to be created\n */\nasync function remoteMkdirp (afcService, remoteRoot) {\n  if (remoteRoot === '.' || remoteRoot === '/') {\n    return;\n  }\n  try {\n    await afcService.listDirectory(remoteRoot);\n    return;\n  } catch (e) {\n    // This means that the directory is missing and we got an object not found error.\n    // Therefore, we are going to the parent\n    await remoteMkdirp(afcService, path.dirname(remoteRoot));\n  }\n  await afcService.createDirectory(remoteRoot);\n}\n\n/**\n * Pushes a file to a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} remotePath Relative path to the file on the device. The remote\n * folder structure is created automatically if necessary.\n * @param {string} base64Data Base64-encoded content of the file to be written\n */\nasync function pushFile (afcService, remotePath, base64Data) {\n  await remoteMkdirp(afcService, path.dirname(remotePath));\n  const stream = await afcService.createWriteStream(remotePath, {autoDestroy: true});\n  let pushError = null;\n  const pushPromise = new B((resolve, reject) => {\n    stream.on('error', (e) => {\n      pushError = e;\n    });\n    stream.on('close', () => {\n      if (pushError) {\n        reject(pushError);\n      } else {\n        resolve();\n      }\n    });\n  }).timeout(IO_TIMEOUT_MS);\n  stream.write(Buffer.from(base64Data, 'base64'));\n  stream.end();\n  await pushPromise;\n}\n\n/**\n * @typedef {Object} PushFolderOptions\n *\n * @property {number} timeoutMs [240000] The maximum timeout to wait until a\n * single file is copied\n * @param {boolean} enableParallelPush [false] Whether to push files in parallel.\n * This usually gives better performance, but might sometimes be less stable.\n */\n\n/**\n * Pushes a folder to a real device\n *\n * @param {AfcService} afcService Apple File Client service instance from\n * 'appium-ios-device' module\n * @param {string} srcRootPath The full path to the source folder\n * @param {string} dstRootPath The relative path to the destination folder. The folder\n * will be deleted if already exists.\n * @param {PushFolderOptions} opts\n */\nasync function pushFolder (afcService, srcRootPath, dstRootPath, opts = {}) {\n  const {\n    timeoutMs = IO_TIMEOUT_MS,\n    enableParallelPush = false,\n  } = opts;\n\n  const timer = new timing.Timer().start();\n  const itemsToPush = await fs.glob('**', {\n    cwd: srcRootPath,\n    nosort: true,\n    mark: true,\n  });\n  log.debug(`Successfully scanned the tree structure of '${srcRootPath}'`);\n  const [foldersToPush, filesToPush] = itemsToPush.reduce((acc, x) => {\n    acc[_.endsWith(x, path.sep) ? 0 : 1].push(x);\n    return acc;\n  }, [[], []]);\n  log.debug(`Got ${util.pluralize('folder', foldersToPush.length, true)} and ` +\n    `${util.pluralize('file', filesToPush.length, true)} to push`);\n  // create the folder structure first\n  try {\n    await afcService.deleteDirectory(dstRootPath);\n  } catch (ign) {}\n  await afcService.createDirectory(dstRootPath);\n  // top-level folders must go first\n  const foldersToPushByHierarchy = foldersToPush\n    .sort((a, b) => a.split(path.sep).length - b.split(path.sep).length);\n  for (const relativeFolderPath of foldersToPushByHierarchy) {\n    // createDirectory does not accept folder names ending with a path separator\n    const absoluteFolderPath = _.trimEnd(\n      path.join(dstRootPath, relativeFolderPath), path.sep\n    );\n    if (absoluteFolderPath) {\n      await afcService.createDirectory(absoluteFolderPath);\n    }\n  }\n  // do not forget about the root folder\n  log.debug(`Successfully created the remote folder structure ` +\n    `(${util.pluralize('item', foldersToPush.length + 1, true)})`);\n\n  const pushFile = async (relativePath) => {\n    const absoluteSourcePath = path.join(srcRootPath, relativePath);\n    const readStream = fs.createReadStream(absoluteSourcePath, {autoClose: true});\n    const absoluteDestinationPath = path.join(dstRootPath, relativePath);\n    const writeStream = await afcService.createWriteStream(absoluteDestinationPath, {\n      autoDestroy: true\n    });\n    writeStream.on('finish', writeStream.destroy);\n    let pushError = null;\n    const filePushPromise = new B((resolve, reject) => {\n      writeStream.on('close', () => {\n        if (pushError) {\n          reject(pushError);\n        } else {\n          resolve();\n        }\n      });\n      const onStreamError = (e) => {\n        readStream.unpipe(writeStream);\n        log.debug(e);\n        pushError = e;\n      };\n      writeStream.on('error', onStreamError);\n      readStream.on('error', onStreamError);\n    });\n    readStream.pipe(writeStream);\n    await filePushPromise.timeout(timeoutMs);\n  };\n\n  if (enableParallelPush) {\n    log.debug(`Proceeding to parallel files push (max ${MAX_IO_CHUNK_SIZE} writers)`);\n    const pushPromises = [];\n    for (const relativeFilePath of _.shuffle(filesToPush)) {\n      pushPromises.push(B.resolve(pushFile(relativeFilePath)));\n      // keep the push queue filled\n      if (pushPromises.length >= MAX_IO_CHUNK_SIZE) {\n        await B.any(pushPromises);\n      }\n      _.remove(pushPromises, (p) => p.isFulfilled());\n    }\n    if (!_.isEmpty(pushPromises)) {\n      // handle the rest of push promises\n      await B.all(pushPromises);\n    }\n  } else {\n    log.debug(`Proceeding to serial files push`);\n    for (const relativeFilePath of filesToPush) {\n      await pushFile(relativeFilePath);\n    }\n  }\n\n  log.debug(`Successfully pushed ${util.pluralize('folder', foldersToPush.length, true)} ` +\n    `and ${util.pluralize('file', filesToPush.length, true)} ` +\n    `within ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n}\n\n\nexport { pullFile, pullFolder, pushFile, pushFolder };"],"mappings":"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"}