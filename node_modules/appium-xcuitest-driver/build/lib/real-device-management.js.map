{"version":3,"file":"real-device-management.js","names":["_appiumIosDevice","require","_iosDeploy","_interopRequireDefault","_logger","_appUtils","getConnectedDevices","utilities","getOSVersion","udid","resetRealDevice","device","opts","bundleId","fullReset","SAFARI_BUNDLE_ID","log","debug","terminateApp","isAppInstalled","remove","err","error","message","runRealDeviceReset","noReset","installToRealDevice","app","skipUninstall","strategy","timeout","install","getRealDeviceObj","IOSDeploy"],"sources":["../../lib/real-device-management.js"],"sourcesContent":["import { utilities } from 'appium-ios-device';\nimport IOSDeploy from './ios-deploy';\nimport log from './logger';\nimport { SAFARI_BUNDLE_ID } from './app-utils';\n\n\nasync function getConnectedDevices () {\n  return await utilities.getConnectedDevices();\n}\n\nasync function getOSVersion (udid) {\n  return await utilities.getOSVersion(udid);\n}\n\nasync function resetRealDevice (device, opts) {\n  const { bundleId, fullReset } = opts;\n  if (!bundleId) {\n    return;\n  }\n\n  if (bundleId === SAFARI_BUNDLE_ID) {\n    log.debug('Reset requested. About to terminate Safari');\n    await device.terminateApp(bundleId);\n    return;\n  }\n\n  if (!fullReset) {\n    return;\n  }\n\n  log.debug(`Reset: fullReset requested. Will try to uninstall the app '${bundleId}'.`);\n  if (!await device.isAppInstalled(bundleId)) {\n    log.debug('Reset: app not installed. No need to uninstall');\n    return;\n  }\n  try {\n    await device.remove(bundleId);\n  } catch (err) {\n    log.error(`Reset: could not remove '${bundleId}' from device: ${err.message}`);\n    throw err;\n  }\n  log.debug(`Reset: removed '${bundleId}'`);\n}\n\nasync function runRealDeviceReset (device, opts) {\n  if (!opts.noReset || opts.fullReset) {\n    log.debug('Reset: running ios real device reset flow');\n    if (!opts.noReset) {\n      await resetRealDevice(device, opts);\n    }\n  } else {\n    log.debug('Reset: fullReset not set. Leaving as is');\n  }\n}\n\n/**\n * @typedef {Object} InstallOptions\n *\n * @property {boolean?} skipUninstall Whether to skip app uninstall before installing it\n * @property {string} strategy [serial] One of possible install strategies ('serial', 'parallel', 'ios-deploy')\n * @property {number?} timeout App install timeout\n */\n\n/**\n * @param {IOSDeploy} device The device instance\n * @param {string?} app The app to the path\n * @param {string?} bundleId The bundle id to ensure it is already installed and uninstall it\n * @param {InstallOptions?} opts\n */\nasync function installToRealDevice (device, app, bundleId, opts = {}) {\n  if (!device.udid || !app) {\n    log.debug('No device id or app, not installing to real device.');\n    return;\n  }\n\n  const {\n    skipUninstall,\n    strategy,\n    timeout,\n  } = opts;\n\n  if (!skipUninstall && bundleId && await device.isAppInstalled(bundleId)) {\n    log.debug(`Reset requested. Removing app with id '${bundleId}' from the device`);\n    await device.remove(bundleId);\n  }\n  log.debug(`Installing '${app}' on device with UUID '${device.udid}'...`);\n  await device.install(app, timeout, strategy);\n  log.debug('The app has been installed successfully.');\n}\n\nfunction getRealDeviceObj (udid) {\n  log.debug(`Creating iDevice object with udid '${udid}'`);\n  return new IOSDeploy(udid);\n}\n\nexport { getConnectedDevices, getOSVersion, runRealDeviceReset, installToRealDevice,\n  getRealDeviceObj };\n"],"mappings":"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"}