"use strict";
/**
 * Utilities
 * @module
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.argify = exports.isStringArray = exports.stopwatch = exports.relative = void 0;
const lodash_1 = __importDefault(require("lodash"));
const node_path_1 = __importDefault(require("node:path"));
/**
 * Computes a relative path, prepending `./`
 */
exports.relative = lodash_1.default.curry((from, to) => `.${node_path_1.default.sep}${node_path_1.default.relative(from, to)}`);
/**
 * A stopwatch-like thing
 *
 * Used for displaying elapsed time in milliseconds
 * @param id - Unique identifier
 * @returns Function that returns the elapsed time in milliseconds
 */
function stopwatch(id) {
    const start = Date.now();
    stopwatch.cache.set(id, start);
    return () => {
        const result = Date.now() - stopwatch.cache.get(id);
        stopwatch.cache.delete(id);
        return result;
    };
}
exports.stopwatch = stopwatch;
stopwatch.cache = new Map();
/**
 * Type guard to narrow an array to a string array
 * @param value any value
 * @returns `true` if the array is `string[]`
 */
exports.isStringArray = lodash_1.default.overEvery(lodash_1.default.isArray, lodash_1.default.partial(lodash_1.default.every, lodash_1.default, lodash_1.default.isString));
/**
 * Converts an object of string values to an array of arguments for CLI
 *
 * Supports `boolean` and `number` values as well.  `boolean`s are assumed to be flags which default
 * to `false`, so they will only be added to the array if the value is `true`.
 */
exports.argify = lodash_1.default.flow(lodash_1.default.entries, lodash_1.default.flatten, (list) => list.map((value, idx) => {
    if (value === true) {
        return `--${value}`;
    }
    else if (value === false || value === undefined) {
        return;
    }
    return idx % 2 === 0 ? `--${value}` : value;
}), lodash_1.default.compact);
//# sourceMappingURL=util.js.map