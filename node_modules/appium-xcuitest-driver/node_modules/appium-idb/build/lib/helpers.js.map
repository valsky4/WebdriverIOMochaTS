{"version":3,"file":"helpers.js","names":["DEFAULT_IDB_EXEC_TIMEOUT","DEFAULT_IDB_PORT","IDB_EXECUTABLE","IDB_COMPANION_EXECUTABLE","DEFAULT_COMPANION_PORT","IDB_ENV_PREFIX","getPids","pattern","opts","multi","ignoreCase","args","stdout","exec","result","split","filter","Number","map","x","_","isEmpty","first","err","convertToIDBEnv","env","isPlainObject","reduce","value","key","fixOutputToArray","output","trim","acc","JSON","parse","e"],"sources":["../../lib/helpers.js"],"sourcesContent":["import _ from 'lodash';\nimport { exec } from 'teen_process';\n\nconst DEFAULT_IDB_EXEC_TIMEOUT = 20000; // in milliseconds\nconst DEFAULT_IDB_PORT = 9889;\nconst IDB_EXECUTABLE = 'idb';\nconst IDB_COMPANION_EXECUTABLE = 'idb_companion';\nconst DEFAULT_COMPANION_PORT = 10880;\nconst IDB_ENV_PREFIX = 'IDB_';\n\n/**\n * @typedef {Object} PidLookupOptions\n *\n * @property {?boolean} multi [true] - Set it to true if multiple matching\n * pids are expected to be found. Only the newest process id is going to\n * be returned instead\n * @property {?boolean} ignoreCase [true] - Set it to false to make the search\n * case-sensitive\n */\n\n/**\n * Get the process id of the most recent running application\n * having the particular command line pattern.\n *\n * @param {string} pattern - pgrep-compatible search pattern.\n * @param {?PidLookupOptions} opts\n * @return {Array<string>} An array of process ids as strings\n * or an empty array\n */\nasync function getPids (pattern, opts = {}) {\n  const {\n    multi = true,\n    ignoreCase = true,\n  } = opts;\n  const args = [`-${ignoreCase ? 'i' : ''}f${multi ? '' : 'n'}`, pattern];\n  try {\n    const {stdout} = await exec('pgrep', args);\n    const result = stdout.split('\\n')\n      .filter(Number)\n      .map((x) => `${x}`);\n    return multi ? result : (_.isEmpty(result) ? [] : _.first(result));\n  } catch (err) {\n    return [];\n  }\n}\n/**\n * Converts an env object to the format what IDB process expects\n * @param {Object} env The object of environment variables\n * @return {Object}\n */\nfunction convertToIDBEnv (env) {\n  if (!_.isPlainObject(env) || _.isEmpty(env)) {\n    return null;\n  }\n  return _.reduce(env, (result, value, key) => {\n    result[IDB_ENV_PREFIX + key] = value;\n    return result;\n  }, {});\n}\n\n/**\n * Some idb commands don't properly format their\n * output if `--json` argument is provided. This helper\n * fixes the original output, so it can be represented as\n * a valid array.\n *\n * @param {string} output The original command output\n * @returns {Array<object>} Array of objects or an empty array\n */\nfunction fixOutputToArray (output) {\n  if (!_.trim(output)) {\n    return [];\n  }\n\n  return output.split('\\n')\n    .reduce((acc, x) => {\n      try {\n        return [...acc, JSON.parse(x)];\n      } catch (e) {\n        return acc;\n      }\n    }, []);\n}\n\nexport {\n  DEFAULT_IDB_EXEC_TIMEOUT, getPids, IDB_EXECUTABLE,\n  IDB_COMPANION_EXECUTABLE, DEFAULT_IDB_PORT,\n  DEFAULT_COMPANION_PORT,\n  fixOutputToArray, convertToIDBEnv\n};\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AAEA,MAAMA,wBAAwB,GAAG,KAAK;AAAC;AACvC,MAAMC,gBAAgB,GAAG,IAAI;AAAC;AAC9B,MAAMC,cAAc,GAAG,KAAK;AAAC;AAC7B,MAAMC,wBAAwB,GAAG,eAAe;AAAC;AACjD,MAAMC,sBAAsB,GAAG,KAAK;AAAC;AACrC,MAAMC,cAAc,GAAG,MAAM;AAqB7B,eAAeC,OAAO,CAAEC,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAC1C,MAAM;IACJC,KAAK,GAAG,IAAI;IACZC,UAAU,GAAG;EACf,CAAC,GAAGF,IAAI;EACR,MAAMG,IAAI,GAAG,CAAE,IAAGD,UAAU,GAAG,GAAG,GAAG,EAAG,IAAGD,KAAK,GAAG,EAAE,GAAG,GAAI,EAAC,EAAEF,OAAO,CAAC;EACvE,IAAI;IACF,MAAM;MAACK;IAAM,CAAC,GAAG,MAAM,IAAAC,kBAAI,EAAC,OAAO,EAAEF,IAAI,CAAC;IAC1C,MAAMG,MAAM,GAAGF,MAAM,CAACG,KAAK,CAAC,IAAI,CAAC,CAC9BC,MAAM,CAACC,MAAM,CAAC,CACdC,GAAG,CAAEC,CAAC,IAAM,GAAEA,CAAE,EAAC,CAAC;IACrB,OAAOV,KAAK,GAAGK,MAAM,GAAIM,eAAC,CAACC,OAAO,CAACP,MAAM,CAAC,GAAG,EAAE,GAAGM,eAAC,CAACE,KAAK,CAACR,MAAM,CAAE;EACpE,CAAC,CAAC,OAAOS,GAAG,EAAE;IACZ,OAAO,EAAE;EACX;AACF;AAMA,SAASC,eAAe,CAAEC,GAAG,EAAE;EAC7B,IAAI,CAACL,eAAC,CAACM,aAAa,CAACD,GAAG,CAAC,IAAIL,eAAC,CAACC,OAAO,CAACI,GAAG,CAAC,EAAE;IAC3C,OAAO,IAAI;EACb;EACA,OAAOL,eAAC,CAACO,MAAM,CAACF,GAAG,EAAE,CAACX,MAAM,EAAEc,KAAK,EAAEC,GAAG,KAAK;IAC3Cf,MAAM,CAACT,cAAc,GAAGwB,GAAG,CAAC,GAAGD,KAAK;IACpC,OAAOd,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;AAWA,SAASgB,gBAAgB,CAAEC,MAAM,EAAE;EACjC,IAAI,CAACX,eAAC,CAACY,IAAI,CAACD,MAAM,CAAC,EAAE;IACnB,OAAO,EAAE;EACX;EAEA,OAAOA,MAAM,CAAChB,KAAK,CAAC,IAAI,CAAC,CACtBY,MAAM,CAAC,CAACM,GAAG,EAAEd,CAAC,KAAK;IAClB,IAAI;MACF,OAAO,CAAC,GAAGc,GAAG,EAAEC,IAAI,CAACC,KAAK,CAAChB,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOiB,CAAC,EAAE;MACV,OAAOH,GAAG;IACZ;EACF,CAAC,EAAE,EAAE,CAAC;AACV"}