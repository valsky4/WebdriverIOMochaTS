"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.IDB = void 0;
require("source-map-support/register");
var _lodash = _interopRequireDefault(require("lodash"));
var _index = _interopRequireDefault(require("./tools/index.js"));
var _helpers = require("./helpers");
const DEFAULT_OPTS = {
  udid: null,
  executable: {
    path: _helpers.IDB_EXECUTABLE,
    port: null,
    grpcPort: null,
    defaultArgs: []
  },
  logLevel: null,
  companion: {
    path: _helpers.IDB_COMPANION_EXECUTABLE,
    port: null,
    grpcPort: null,
    logPath: null
  },
  execTimeout: _helpers.DEFAULT_IDB_EXEC_TIMEOUT,
  verbose: false
};
class IDB {
  constructor(opts = {}) {
    Object.assign(this, opts);
    _lodash.default.defaultsDeep(this, _lodash.default.cloneDeep(DEFAULT_OPTS));
    if (!this.udid) {
      throw new Error(`UDID must be set for idb`);
    }
    this.executable.defaultArgs.push('--udid', this.udid);
    if (this.logLevel) {
      this.executable.defaultArgs.push('--log', this.logLevel);
    }
  }
}
exports.IDB = IDB;
for (const [fnName, fn] of _lodash.default.toPairs(_index.default)) {
  IDB.prototype[fnName] = fn;
}
var _default = IDB;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJERUZBVUxUX09QVFMiLCJ1ZGlkIiwiZXhlY3V0YWJsZSIsInBhdGgiLCJJREJfRVhFQ1VUQUJMRSIsInBvcnQiLCJncnBjUG9ydCIsImRlZmF1bHRBcmdzIiwibG9nTGV2ZWwiLCJjb21wYW5pb24iLCJJREJfQ09NUEFOSU9OX0VYRUNVVEFCTEUiLCJsb2dQYXRoIiwiZXhlY1RpbWVvdXQiLCJERUZBVUxUX0lEQl9FWEVDX1RJTUVPVVQiLCJ2ZXJib3NlIiwiSURCIiwiY29uc3RydWN0b3IiLCJvcHRzIiwiT2JqZWN0IiwiYXNzaWduIiwiXyIsImRlZmF1bHRzRGVlcCIsImNsb25lRGVlcCIsIkVycm9yIiwicHVzaCIsImZuTmFtZSIsImZuIiwidG9QYWlycyIsIm1ldGhvZHMiLCJwcm90b3R5cGUiXSwic291cmNlcyI6WyIuLi8uLi9saWIvaWRiLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgbWV0aG9kcyBmcm9tICcuL3Rvb2xzL2luZGV4LmpzJztcbmltcG9ydCB7XG4gIERFRkFVTFRfSURCX0VYRUNfVElNRU9VVCxcbiAgSURCX0VYRUNVVEFCTEUsIElEQl9DT01QQU5JT05fRVhFQ1VUQUJMRSxcbn0gZnJvbSAnLi9oZWxwZXJzJztcblxuY29uc3QgREVGQVVMVF9PUFRTID0ge1xuICB1ZGlkOiBudWxsLFxuICBleGVjdXRhYmxlOiB7XG4gICAgcGF0aDogSURCX0VYRUNVVEFCTEUsXG4gICAgcG9ydDogbnVsbCxcbiAgICBncnBjUG9ydDogbnVsbCxcbiAgICBkZWZhdWx0QXJnczogW10sXG4gIH0sXG4gIGxvZ0xldmVsOiBudWxsLFxuICBjb21wYW5pb246IHtcbiAgICBwYXRoOiBJREJfQ09NUEFOSU9OX0VYRUNVVEFCTEUsXG4gICAgcG9ydDogbnVsbCxcbiAgICBncnBjUG9ydDogbnVsbCxcbiAgICBsb2dQYXRoOiBudWxsLFxuICB9LFxuICBleGVjVGltZW91dDogREVGQVVMVF9JREJfRVhFQ19USU1FT1VULFxuICB2ZXJib3NlOiBmYWxzZSxcbn07XG5cbmNsYXNzIElEQiB7XG4gIGNvbnN0cnVjdG9yIChvcHRzID0ge30pIHtcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIG9wdHMpO1xuICAgIF8uZGVmYXVsdHNEZWVwKHRoaXMsIF8uY2xvbmVEZWVwKERFRkFVTFRfT1BUUykpO1xuXG4gICAgaWYgKCF0aGlzLnVkaWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgVURJRCBtdXN0IGJlIHNldCBmb3IgaWRiYCk7XG4gICAgfVxuICAgIHRoaXMuZXhlY3V0YWJsZS5kZWZhdWx0QXJncy5wdXNoKCctLXVkaWQnLCB0aGlzLnVkaWQpO1xuXG4gICAgaWYgKHRoaXMubG9nTGV2ZWwpIHtcbiAgICAgIHRoaXMuZXhlY3V0YWJsZS5kZWZhdWx0QXJncy5wdXNoKCctLWxvZycsIHRoaXMubG9nTGV2ZWwpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBhZGQgYWxsIHRoZSBtZXRob2RzIHRvIHRoZSBJREIgcHJvdG90eXBlXG5mb3IgKGNvbnN0IFtmbk5hbWUsIGZuXSBvZiBfLnRvUGFpcnMobWV0aG9kcykpIHtcbiAgSURCLnByb3RvdHlwZVtmbk5hbWVdID0gZm47XG59XG5cbmV4cG9ydCBkZWZhdWx0IElEQjtcbmV4cG9ydCB7IElEQiB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUtBLE1BQU1BLFlBQVksR0FBRztFQUNuQkMsSUFBSSxFQUFFLElBQUk7RUFDVkMsVUFBVSxFQUFFO0lBQ1ZDLElBQUksRUFBRUMsdUJBQWM7SUFDcEJDLElBQUksRUFBRSxJQUFJO0lBQ1ZDLFFBQVEsRUFBRSxJQUFJO0lBQ2RDLFdBQVcsRUFBRTtFQUNmLENBQUM7RUFDREMsUUFBUSxFQUFFLElBQUk7RUFDZEMsU0FBUyxFQUFFO0lBQ1ROLElBQUksRUFBRU8saUNBQXdCO0lBQzlCTCxJQUFJLEVBQUUsSUFBSTtJQUNWQyxRQUFRLEVBQUUsSUFBSTtJQUNkSyxPQUFPLEVBQUU7RUFDWCxDQUFDO0VBQ0RDLFdBQVcsRUFBRUMsaUNBQXdCO0VBQ3JDQyxPQUFPLEVBQUU7QUFDWCxDQUFDO0FBRUQsTUFBTUMsR0FBRyxDQUFDO0VBQ1JDLFdBQVcsQ0FBRUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxFQUFFO0lBQ3RCQyxNQUFNLENBQUNDLE1BQU0sQ0FBQyxJQUFJLEVBQUVGLElBQUksQ0FBQztJQUN6QkcsZUFBQyxDQUFDQyxZQUFZLENBQUMsSUFBSSxFQUFFRCxlQUFDLENBQUNFLFNBQVMsQ0FBQ3RCLFlBQVksQ0FBQyxDQUFDO0lBRS9DLElBQUksQ0FBQyxJQUFJLENBQUNDLElBQUksRUFBRTtNQUNkLE1BQU0sSUFBSXNCLEtBQUssQ0FBRSwwQkFBeUIsQ0FBQztJQUM3QztJQUNBLElBQUksQ0FBQ3JCLFVBQVUsQ0FBQ0ssV0FBVyxDQUFDaUIsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUN2QixJQUFJLENBQUM7SUFFckQsSUFBSSxJQUFJLENBQUNPLFFBQVEsRUFBRTtNQUNqQixJQUFJLENBQUNOLFVBQVUsQ0FBQ0ssV0FBVyxDQUFDaUIsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUNoQixRQUFRLENBQUM7SUFDMUQ7RUFDRjtBQUNGO0FBQUM7QUFHRCxLQUFLLE1BQU0sQ0FBQ2lCLE1BQU0sRUFBRUMsRUFBRSxDQUFDLElBQUlOLGVBQUMsQ0FBQ08sT0FBTyxDQUFDQyxjQUFPLENBQUMsRUFBRTtFQUM3Q2IsR0FBRyxDQUFDYyxTQUFTLENBQUNKLE1BQU0sQ0FBQyxHQUFHQyxFQUFFO0FBQzVCO0FBQUMsZUFFY1gsR0FBRztBQUFBIn0=