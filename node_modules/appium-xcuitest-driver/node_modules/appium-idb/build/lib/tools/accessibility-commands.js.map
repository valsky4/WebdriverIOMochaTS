{"version":3,"file":"accessibility-commands.js","names":["accessibilityCommands","describeAll","log","debug","udid","JSON","parse","exec","describePoint","x","y","ign"],"sources":["../../../lib/tools/accessibility-commands.js"],"sourcesContent":["import log from '../logger.js';\n\n\nconst accessibilityCommands = {};\n\n/**\n * Describes the Accessibility tree on the device under test\n *\n * @returns {Array<object>} JSON formatted list of all the elements currently on screen,\n * including their bounds and accessibility information\n */\naccessibilityCommands.describeAll = async function describeAll () {\n  log.debug(`Describing the UI on the device '${this.udid}'`);\n  return JSON.parse(await this.exec(['ui', 'describe-all']));\n};\n\n/**\n * Describes the Accessibility tree on the device under test at\n * the particular coordinate point\n *\n * @returns {?Array<object>} JSON formatted information about a specific point on\n * the screen, if an element exists there.\n */\naccessibilityCommands.describePoint = async function describePoint (x, y) {\n  log.debug(`Describing the UI at (${x}, ${y}) on the device '${this.udid}'`);\n  try {\n    return JSON.parse(await this.exec(['ui', 'describe-point'], [x, y]));\n  } catch (ign) {\n    return null;\n  }\n};\n\nexport default accessibilityCommands;\n"],"mappings":";;;;;;;;AAAA;AAGA,MAAMA,qBAAqB,GAAG,CAAC,CAAC;AAQhCA,qBAAqB,CAACC,WAAW,GAAG,eAAeA,WAAW,GAAI;EAChEC,eAAG,CAACC,KAAK,CAAE,oCAAmC,IAAI,CAACC,IAAK,GAAE,CAAC;EAC3D,OAAOC,IAAI,CAACC,KAAK,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC,CAAC;AAC5D,CAAC;AASDP,qBAAqB,CAACQ,aAAa,GAAG,eAAeA,aAAa,CAAEC,CAAC,EAAEC,CAAC,EAAE;EACxER,eAAG,CAACC,KAAK,CAAE,yBAAwBM,CAAE,KAAIC,CAAE,oBAAmB,IAAI,CAACN,IAAK,GAAE,CAAC;EAC3E,IAAI;IACF,OAAOC,IAAI,CAACC,KAAK,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,IAAI,EAAE,gBAAgB,CAAC,EAAE,CAACE,CAAC,EAAEC,CAAC,CAAC,CAAC,CAAC;EACtE,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,OAAO,IAAI;EACb;AACF,CAAC;AAAC,eAEaX,qBAAqB;AAAA"}