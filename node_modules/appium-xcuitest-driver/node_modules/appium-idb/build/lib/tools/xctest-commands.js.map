{"version":3,"file":"xctest-commands.js","names":["xctestCommands","runXCUITest","testRunnerBundleId","appUnderTestBundleId","xctestBundleId","opts","uiTestProcess","createSubProcess","testType","args","env","convertToIDBEnv","start","installXCTestBundle","xctestBundlePath","output","exec","object","JSON","parse","installedTestBundleId","e","Error","message","listXCTestBundles","bundles","fixOutputToArray","map","bundle","bundle_id","listXCTestsInTestBundle"],"sources":["../../../lib/tools/xctest-commands.js"],"sourcesContent":["import { convertToIDBEnv, fixOutputToArray } from '../helpers';\n\nconst xctestCommands = {};\n\n/**\n * @typedef {Object} RunOptions\n *\n * @property {Object} env Environment variables map to be passed to the test runner\n * @property {Array} args Arguments array to be passed to the test runner\n */\n\n/**\n * Runs an xcuitest on the device or simulator\n * @param {string} testRunnerBundleId The bundle id of the test runner\n * @param {string} appUnderTestBundleId The bundle id of the app under test\n * @param {string} xctestBundleId The bundle id of the xctest package\n * @param {object} opts The envs and args to be passed to the xcuitest runner\n *\n * @returns {SubProcess}\n */\nxctestCommands.runXCUITest = async function runXCUITest (\n  testRunnerBundleId, appUnderTestBundleId, xctestBundleId, opts = {}\n) {\n  const uiTestProcess = this.createSubProcess(\n    ['xctest', 'run', opts.testType || 'ui'],\n    [\n      ...(opts.args || []),\n      xctestBundleId,\n      appUnderTestBundleId,\n      testRunnerBundleId,\n    ],\n    {env: convertToIDBEnv(opts.env)\n    });\n  await uiTestProcess.start(0);\n  return uiTestProcess;\n};\n\n/**\n * Installs a xctest bundle on the device or simulator\n * @param {string} xctestBundlePath the path of the xctest bundle\n * @returns {string} the bundle id of xctest bundle that was installed\n */\nxctestCommands.installXCTestBundle = async function installXCTestBundle (xctestBundlePath) {\n  const output = await this.exec(['xctest', 'install'], ['--json', xctestBundlePath]);\n  try {\n    const object = JSON.parse(output);\n    return object.installedTestBundleId;\n  } catch (e) {\n    throw new Error(`Failed to parse '${output}' into json object: ${e.message}`);\n  }\n};\n\n/**\n * Lists all the xctest bundles installed on a device or a simulator\n */\nxctestCommands.listXCTestBundles = async function listXCTestBundles () {\n  const output = await this.exec(['xctest', 'list'], ['--json']);\n  const bundles = fixOutputToArray(output);\n  return bundles.map((bundle) => bundle.bundle_id);\n};\n\n/**\n * Lists all the xctest bundles installed on a device or a simulator\n * @param {string} xctestBundleId the bundle id of the xctest\n */\nxctestCommands.listXCTestsInTestBundle = async function listXCTestBundles (xctestBundleId) {\n  const output = await this.exec(['xctest', 'list-bundle'], ['--json', xctestBundleId]);\n  try {\n    return JSON.parse(output);\n  } catch (e) {\n    throw new Error(`Failed to parse '${output}' into json object: ${e.message}`);\n  }\n};\n\n\nexport default xctestCommands;\n"],"mappings":";;;;;;;AAAA;AAEA,MAAMA,cAAc,GAAG,CAAC,CAAC;AAkBzBA,cAAc,CAACC,WAAW,GAAG,eAAeA,WAAW,CACrDC,kBAAkB,EAAEC,oBAAoB,EAAEC,cAAc,EAAEC,IAAI,GAAG,CAAC,CAAC,EACnE;EACA,MAAMC,aAAa,GAAG,IAAI,CAACC,gBAAgB,CACzC,CAAC,QAAQ,EAAE,KAAK,EAAEF,IAAI,CAACG,QAAQ,IAAI,IAAI,CAAC,EACxC,CACE,IAAIH,IAAI,CAACI,IAAI,IAAI,EAAE,CAAC,EACpBL,cAAc,EACdD,oBAAoB,EACpBD,kBAAkB,CACnB,EACD;IAACQ,GAAG,EAAE,IAAAC,wBAAe,EAACN,IAAI,CAACK,GAAG;EAC9B,CAAC,CAAC;EACJ,MAAMJ,aAAa,CAACM,KAAK,CAAC,CAAC,CAAC;EAC5B,OAAON,aAAa;AACtB,CAAC;AAODN,cAAc,CAACa,mBAAmB,GAAG,eAAeA,mBAAmB,CAAEC,gBAAgB,EAAE;EACzF,MAAMC,MAAM,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,QAAQ,EAAEF,gBAAgB,CAAC,CAAC;EACnF,IAAI;IACF,MAAMG,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;IACjC,OAAOE,MAAM,CAACG,qBAAqB;EACrC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,MAAM,IAAIC,KAAK,CAAE,oBAAmBP,MAAO,uBAAsBM,CAAC,CAACE,OAAQ,EAAC,CAAC;EAC/E;AACF,CAAC;AAKDvB,cAAc,CAACwB,iBAAiB,GAAG,eAAeA,iBAAiB,GAAI;EACrE,MAAMT,MAAM,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;EAC9D,MAAMS,OAAO,GAAG,IAAAC,yBAAgB,EAACX,MAAM,CAAC;EACxC,OAAOU,OAAO,CAACE,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACC,SAAS,CAAC;AAClD,CAAC;AAMD7B,cAAc,CAAC8B,uBAAuB,GAAG,eAAeN,iBAAiB,CAAEpB,cAAc,EAAE;EACzF,MAAMW,MAAM,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC,CAAC,QAAQ,EAAE,aAAa,CAAC,EAAE,CAAC,QAAQ,EAAEZ,cAAc,CAAC,CAAC;EACrF,IAAI;IACF,OAAOc,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;EAC3B,CAAC,CAAC,OAAOM,CAAC,EAAE;IACV,MAAM,IAAIC,KAAK,CAAE,oBAAmBP,MAAO,uBAAsBM,CAAC,CAACE,OAAQ,EAAC,CAAC;EAC/E;AACF,CAAC;AAAC,eAGavB,cAAc;AAAA"}