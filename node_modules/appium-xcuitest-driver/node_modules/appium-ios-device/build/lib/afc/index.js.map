{"version":3,"file":"index.js","names":["_lengthBasedSplitter","_interopRequireDefault","require","_protocol","_streams","_afcencoder","_afcdecoder","_constants","_bluebird","_path","_lodash","_baseService","AFC_SERVICE_NAME","exports","MAX_FRAME_SIZE","MB","NULL_DELIMITER_CODE","IGNORED_PATHS","AfcService","BaseServiceSocket","constructor","socketClient","_splitter","LengthBasedSplitter","readableStream","littleEndian","maxFrameLength","lengthFieldOffset","lengthFieldLength","lengthAdjustment","_decoder","AfcDecoder","_socketClient","pipe","_encoder","AfcEncoder","_assignClientFailureHandlers","_responseCallbacks","_packetNumber","on","_handleData","bind","data","cb","packetNumber","_","noop","createDirectory","path","response","_createPacketPromise","opCode","Operations","MAKE_DIR","headerPayload","Buffer","from","write","res","_checkStatus","deleteDirectory","REMOVE_PATH_AND_CONTENTS","listDirectory","READ_DIR","DATA","_parseArray","content","openFile","mode","pathPayload","fileModePayload","alloc","writeUInt32LE","FILE_OPEN","concat","FILE_OPEN_RES","readUInt32LE","createWriteStream","filePath","opts","fileHandle","FileModes","w","AfcWritableFileStream","createReadStream","options","r","AfcReadableFileStream","closeFileHandle","FILE_CLOSE","writeFile","buffer","FILE_WRITE","readFile","length","FILE_READ","getFileInfo","GET_FILE_INFO","FileInfo","_parseObject","walkDir","dir","recursive","onPath","file","includes","relativePath","posix","join","fileInfo","isDirectory","STATUS","Error","operationCode","isEmpty","Errors","SUCCESS","errorCode","items","start","end","item","toString","push","currentKey","isNil","message","timeout","B","resolve","reject","setTimeout","st_size","st_blocks","st_nlink","st_ifmt","st_mtime","st_birthtime","size","parseInt","blocks","nlink","ifmt","mtimeMs","birthtimeMs","isFile","_default","default"],"sources":["../../../lib/afc/index.js"],"sourcesContent":["\nimport LengthBasedSplitter from '../util/transformer/length-based-splitter';\nimport { Operations, operationCode, Errors, errorCode, FileModes } from './protocol';\nimport { AfcWritableFileStream, AfcReadableFileStream } from './streams';\nimport AfcEncoder from './transformer/afcencoder';\nimport AfcDecoder from './transformer/afcdecoder';\nimport { MB } from '../constants';\nimport B from 'bluebird';\nimport path from 'path';\nimport _ from 'lodash';\nimport { BaseServiceSocket } from '../base-service';\n\n\nconst AFC_SERVICE_NAME = 'com.apple.afc';\nconst MAX_FRAME_SIZE = 1 * MB;\n\nconst NULL_DELIMITER_CODE = 0x00;\nconst IGNORED_PATHS = ['.', '..'];\n\nclass AfcService extends BaseServiceSocket {\n  constructor (socketClient) {\n    super(socketClient);\n\n    this._splitter = new LengthBasedSplitter({\n      readableStream: socketClient,\n      littleEndian: true,\n      maxFrameLength: MAX_FRAME_SIZE,\n      lengthFieldOffset: 8,\n      lengthFieldLength: 8,\n      lengthAdjustment: -8,\n    });\n    this._decoder = new AfcDecoder();\n    this._socketClient.pipe(this._splitter).pipe(this._decoder);\n\n    this._encoder = new AfcEncoder();\n    this._encoder.pipe(this._socketClient);\n    this._assignClientFailureHandlers(this._encoder);\n\n    this._responseCallbacks = {};\n\n    this._packetNumber = 0;\n    this._decoder.on('data', this._handleData.bind(this));\n  }\n\n  _handleData (data) {\n    const cb = this._responseCallbacks[data.packetNumber] || _.noop;\n    cb(data); // eslint-disable-line promise/prefer-await-to-callbacks\n  }\n\n  /**\n   * Creates a directory relative to an already existing directory\n   * @param {string} path The path in unix format\n   */\n  async createDirectory (path) {\n    const {packetNumber, response} = this._createPacketPromise(`Create directory '${path}'`);\n\n    const data = {\n      opCode: Operations.MAKE_DIR,\n      packetNumber,\n      headerPayload: Buffer.from(path)\n    };\n    this._encoder.write(data);\n    const res = await response;\n    this._checkStatus(res);\n  }\n\n  /**\n   * Deletes are directory completely even it has content inside. This is an implementation of 'rm -r {path}'\n   * @param {string} path The path in unix format\n   */\n  async deleteDirectory (path) {\n    const {packetNumber, response} = this._createPacketPromise(`Delete directory '${path}'`);\n\n    const data = {\n      opCode: Operations.REMOVE_PATH_AND_CONTENTS,\n      packetNumber,\n      headerPayload: Buffer.from(path)\n    };\n    this._encoder.write(data);\n    const res = await response;\n    this._checkStatus(res);\n  }\n\n  /**\n   * Lists a directory's contents and returns them in an array\n   * @param {string} path The path in unix format\n   * @return {Array.<string>}\n   */\n  async listDirectory (path) {\n    const {packetNumber, response} = this._createPacketPromise(`List directory '${path}'`);\n\n    const data = {\n      opCode: Operations.READ_DIR,\n      packetNumber,\n      headerPayload: Buffer.from(path)\n    };\n    this._encoder.write(data);\n    const res = await response;\n    if (res.opCode !== Operations.DATA) {\n      this._checkStatus(res);\n    }\n\n    return this._parseArray(res.content);\n  }\n\n  /**\n   * Opens a file and creates a file handle\n   * @param {string} path The path in unix format\n   * @param {number} mode The file mode that will be used\n   * @return {number}\n   */\n  async openFile (path, mode) {\n    const {packetNumber, response} = this._createPacketPromise(`Open file '${path}'`);\n\n    const pathPayload = Buffer.from(path);\n    const fileModePayload = Buffer.alloc(8);\n    fileModePayload.writeUInt32LE(mode, 0);\n\n    const data = {\n      opCode: Operations.FILE_OPEN,\n      packetNumber,\n      headerPayload: Buffer.concat([fileModePayload, pathPayload])\n    };\n    this._encoder.write(data);\n    const res = await response;\n    if (res.opCode !== Operations.FILE_OPEN_RES) {\n      this._checkStatus(res);\n    }\n\n    return res.headerPayload.readUInt32LE(0);\n  }\n\n  /**\n   * Opens a file and creates a nodejs write stream\n   * @param {string} filePath The path in unix format\n   * @param {Object} opts The regular options that are passed to a Stream.Writable\n   * @return {AfcWritableFileStream}\n   */\n  async createWriteStream (filePath, opts) {\n    const fileHandle = await this.openFile(filePath, FileModes.w);\n    return new AfcWritableFileStream(fileHandle, this, opts);\n  }\n\n  /**\n   * Opens a file and creates a nodejs read stream\n   * @param {string} filePath The path in unix format\n   * @param {Object} opts The regular options that are passed to a Stream.Readable\n   * @return {AfcReadableFileStream}\n   */\n  async createReadStream (filePath, options) {\n    const fileHandle = await this.openFile(filePath, FileModes.r);\n    return new AfcReadableFileStream(fileHandle, this, options);\n  }\n\n  /**\n   * Closes the file handle\n   * @param {number} fileHandle the file handle to be closed\n   */\n  async closeFileHandle (fileHandle) {\n    const {packetNumber, response} = this._createPacketPromise(`Close file handle '${fileHandle}'`);\n\n    const fileModePayload = Buffer.alloc(8);\n    fileModePayload.writeUInt32LE(fileHandle, 0);\n\n    const data = {\n      opCode: Operations.FILE_CLOSE,\n      packetNumber,\n      headerPayload: fileModePayload\n    };\n    this._encoder.write(data);\n    const res = await response;\n    this._checkStatus(res);\n  }\n\n  /**\n   * Writes the buffer into the given file handle\n   * @param {number} fileHandle The file handle to be used\n   * @param {Buffer} buffer The buffer that will be written\n   */\n  async writeFile (fileHandle, buffer) {\n    const {packetNumber, response} = this._createPacketPromise(`Write to file handle '${fileHandle}'`);\n\n    const headerPayload = Buffer.alloc(8);\n    headerPayload.writeUInt32LE(fileHandle, 0);\n\n    const data = {\n      opCode: Operations.FILE_WRITE,\n      packetNumber,\n      headerPayload,\n      content: buffer\n    };\n    this._encoder.write(data);\n    const res = await response;\n    this._checkStatus(res);\n  }\n\n  /**\n   * Read a certain length of buffer from the file handle\n   * @param {number} fileHandle The file handle to be used\n   * @param {number} length The length that wants to be read from the file handle\n   * @return {Buffer}\n   */\n  async readFile (fileHandle, length) {\n    const {packetNumber, response} = this._createPacketPromise(`Read from file handle '${fileHandle}'`);\n\n    const headerPayload = Buffer.alloc(16);\n    headerPayload.writeUInt32LE(fileHandle, 0);\n    headerPayload.writeUInt32LE(length, 8);\n\n    const data = {\n      opCode: Operations.FILE_READ,\n      packetNumber,\n      headerPayload\n    };\n    this._encoder.write(data);\n    const res = await response;\n    if (res.opCode !== Operations.DATA) {\n      this._checkStatus(res);\n    }\n    return res.content;\n  }\n\n  /**\n   * Get the file info of the given path\n   * @param {string} path The path in unix format\n   * @return {FileInfo}\n   */\n  async getFileInfo (path) {\n    const {packetNumber, response} = this._createPacketPromise(`Get file info '${path}'`);\n\n    const data = {\n      opCode: Operations.GET_FILE_INFO,\n      packetNumber,\n      headerPayload: Buffer.from(path)\n    };\n    this._encoder.write(data);\n    const res = await response;\n    if (res.opCode !== Operations.DATA) {\n      this._checkStatus(res);\n    }\n    return new FileInfo(this._parseObject(res.content));\n  }\n\n  /** The callback function which will be called during the directory walking\n   * @name WalkDirCallback\n   * @function\n   * @param {string} itemPath The path of the file or folder\n   * @param {boolean} isDirectory Shows if it is a directory or a file\n  */\n\n  /**\n   *\n   * @param {string} dir The path in unix format\n   * @param {boolean} recursive Sets whether to follow sub directories or not\n   * @param {WalkDirCallback} onPath The callback to be called when a new path is found\n   */\n  async walkDir (dir, recursive, onPath) {\n    for (const file of await this.listDirectory(dir)) {\n      if (IGNORED_PATHS.includes(file)) {\n        continue;\n      }\n      const relativePath = path.posix.join(dir, file);\n      const fileInfo = await this.getFileInfo(relativePath);\n      const isDirectory = fileInfo.isDirectory();\n      await onPath(relativePath, isDirectory);\n      if (isDirectory && recursive) {\n        await this.walkDir(relativePath, recursive, onPath);\n      }\n    }\n  }\n\n  _checkStatus (res) {\n    if (res.opCode !== Operations.STATUS) {\n      throw new Error(`Unexpected response ${operationCode(res.opCode)}`);\n    }\n    if (_.isEmpty(res.headerPayload)) {\n      throw new Error('Header payload cannot be empty for a status response');\n    }\n    if (res.headerPayload[0] !== Errors.SUCCESS) {\n      throw new Error(`Unexpected response ${errorCode(res.headerPayload[0])}`);\n    }\n  }\n\n  _parseArray (buffer) {\n    const items = [];\n    let start = 0;\n    for (let end = 0; end < buffer.length; end++) {\n      if (buffer[end] !== NULL_DELIMITER_CODE) {\n        continue;\n      }\n      const item = buffer.toString('utf8', start, end);\n      items.push(item);\n      // We skip the null delimeter\n      start = end + 1;\n    }\n    return items;\n  }\n\n  _parseObject (buffer) {\n    const items = {};\n    let start = 0;\n    let currentKey;\n    for (let end = 0; end < buffer.length; end++) {\n      if (buffer[end] !== NULL_DELIMITER_CODE) {\n        continue;\n      }\n      const item = buffer.toString('utf8', start, end);\n      if (_.isNil(currentKey)) {\n        currentKey = item;\n      } else {\n        items[currentKey] = item;\n        currentKey = null;\n      }\n      // We skip the null delimeter\n      start = end + 1;\n    }\n    if (currentKey) {\n      throw new Error(`Failed to parse correctly ${buffer}. Please investigate`);\n    }\n    return items;\n  }\n\n  _createPacketPromise (message, timeout = 10000) {\n    const packetNumber = this._packetNumber++;\n    const response = new B((resolve, reject) => {\n      this._responseCallbacks[packetNumber] = resolve;\n      setTimeout(function () {\n        reject(new Error(`Could not finish the operation '${message}'. Failed to receive any data within the ${timeout}ms timeout`));\n      }, timeout);\n    });\n    return {packetNumber, response};\n  }\n}\n\nclass FileInfo {\n  constructor ({st_size, st_blocks, st_nlink, st_ifmt, st_mtime, st_birthtime}) {\n    this.size = parseInt(st_size, 10);\n    this.blocks = parseInt(st_blocks, 10);\n    this.nlink = parseInt(st_nlink, 10);\n    this.ifmt = st_ifmt;\n    // ns to ms\n    this.mtimeMs = parseInt(st_mtime, 10) / 1000000;\n    // ns to ms\n    this.birthtimeMs = parseInt(st_birthtime, 10) / 1000000;\n  }\n\n  isDirectory () {\n    return this.ifmt === 'S_IFDIR';\n  }\n\n  isFile () {\n    return this.ifmt === 'S_IFREG';\n  }\n}\n\nexport default AfcService;\nexport { AfcService, AFC_SERVICE_NAME };\n"],"mappings":"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"}