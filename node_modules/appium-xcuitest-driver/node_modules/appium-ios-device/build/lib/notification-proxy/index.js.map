{"version":3,"file":"index.js","names":["_plistServiceEncoder","_interopRequireDefault","require","_plistServiceDecoder","_lengthBasedSplitter","_constants","_lodash","_baseService","NOTIFICATION_PROXY_SERVICE_NAME","exports","MAX_FRAME_SIZE","KB","RELAY_NOTIFICATION","PROXY_DEATH","NotificationProxyService","BaseServiceSocket","constructor","socketClient","_decoder","PlistServiceDecoder","_splitter","LengthBasedSplitter","readableStream","littleEndian","maxFrameLength","lengthFieldOffset","lengthFieldLength","lengthAdjustment","_socketClient","pipe","_encoder","PlistServiceEncoder","_assignClientFailureHandlers","_listeners","on","_handleData","bind","data","Command","listener","Name","_","isFunction","notification","proxyDeath","Error","JSON","stringify","observeNotification","write","postNotification","shutdown","close","_default","default"],"sources":["../../../lib/notification-proxy/index.js"],"sourcesContent":["import PlistServiceEncoder from '../plist-service/transformer/plist-service-encoder';\nimport PlistServiceDecoder from '../plist-service/transformer/plist-service-decoder';\nimport LengthBasedSplitter from '../util/transformer/length-based-splitter';\nimport { KB } from '../constants';\nimport _ from 'lodash';\nimport { BaseServiceSocket } from '../base-service';\n\n\nconst NOTIFICATION_PROXY_SERVICE_NAME = 'com.apple.mobile.notification_proxy';\nconst MAX_FRAME_SIZE = 16 * KB;\n\nconst RELAY_NOTIFICATION = 'RelayNotification';\nconst PROXY_DEATH = 'ProxyDeath';\n\nclass NotificationProxyService extends BaseServiceSocket {\n  constructor (socketClient) {\n    super(socketClient);\n\n    this._decoder = new PlistServiceDecoder();\n    this._splitter = new LengthBasedSplitter({\n      readableStream: socketClient,\n      littleEndian: false,\n      maxFrameLength: MAX_FRAME_SIZE,\n      lengthFieldOffset: 0,\n      lengthFieldLength: 4,\n      lengthAdjustment: 4,\n    });\n    this._socketClient.pipe(this._splitter).pipe(this._decoder);\n\n    this._encoder = new PlistServiceEncoder();\n    this._encoder.pipe(this._socketClient);\n    this._assignClientFailureHandlers(this._encoder);\n\n    this._listeners = {};\n    this._decoder.on('data', this._handleData.bind(this));\n  }\n\n  _handleData (data) {\n    switch (data.Command) {\n      case RELAY_NOTIFICATION: {\n        const listener = this._listeners[data.Name];\n        if (!listener) {\n          return;\n        }\n        if (_.isFunction(listener.notification)) {\n          listener.notification();\n        }\n        break;\n      }\n      case PROXY_DEATH: {\n        const listener = this._listeners[data.Name];\n        if (!listener) {\n          return;\n        }\n        if (_.isFunction(listener.proxyDeath)) {\n          listener.proxyDeath();\n        }\n        delete this._listeners[data.Name];\n        break;\n      }\n      default:\n        throw new Error(`Unknown data type ${JSON.stringify(data)}`);\n    }\n  }\n\n  /**\n   * The api to listen to notifications that the phone broadcasts\n   * @param {string} notification The name of the notification which is desired to be observed\n   * @param {Object} listener The listener object which will be invoked when there is a notification or if the proxy is dead\n   */\n  observeNotification (notification, listener) {\n    if (this._listeners[notification]) {\n      throw new Error(`Notification listener for ${notification} already exists. Another one can't be added`);\n    }\n    this._listeners[notification] = listener;\n    this._encoder.write({\n      Command: 'ObserveNotification',\n      Name: notification\n    });\n  }\n\n  /**\n   * The api to broadcast notifications to the phone. This allows the client to talk to the daemons or apps on the phone\n   * @param {*} notification The name of the notification which is desired notified\n   */\n  postNotification (notification) {\n    this._encoder.write({\n      Command: 'PostNotification',\n      Name: notification\n    });\n  }\n\n  /**\n   * The api to shutdown the proxy. Consequently, all the notifications that are observing will recieve the proxyDeath response\n   * @param {*} notification The name of the notification which is desired notified\n   */\n  shutdown () {\n    this._encoder.write({\n      Command: 'Shutdown',\n    });\n  }\n\n  close () {\n    this.shutdown();\n    super.close();\n  }\n}\n\nexport default NotificationProxyService;\nexport { NotificationProxyService, NOTIFICATION_PROXY_SERVICE_NAME };\n"],"mappings":"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"}