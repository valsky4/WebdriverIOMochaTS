"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.PlistServiceEncoder = void 0;
require("source-map-support/register");
var _stream = _interopRequireDefault(require("stream"));
var _support = require("@appium/support");
const HEADER_LENGTH = 4;
class PlistServiceEncoder extends _stream.default.Transform {
  constructor() {
    super({
      objectMode: true
    });
  }
  _transform(data, encoding, onData) {
    this.push(this._encode(data), 'buffer');
    onData();
  }
  _encode(data) {
    const payloadBuffer = _support.plist.createBinaryPlist(data);
    const headerBuffer = Buffer.alloc(HEADER_LENGTH);
    headerBuffer.writeUInt32BE(payloadBuffer.length, 0);
    return Buffer.concat([headerBuffer, payloadBuffer], headerBuffer.length + payloadBuffer.length);
  }
}
exports.PlistServiceEncoder = PlistServiceEncoder;
var _default = PlistServiceEncoder;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc3RyZWFtIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfc3VwcG9ydCIsIkhFQURFUl9MRU5HVEgiLCJQbGlzdFNlcnZpY2VFbmNvZGVyIiwiU3RyZWFtIiwiVHJhbnNmb3JtIiwiY29uc3RydWN0b3IiLCJvYmplY3RNb2RlIiwiX3RyYW5zZm9ybSIsImRhdGEiLCJlbmNvZGluZyIsIm9uRGF0YSIsInB1c2giLCJfZW5jb2RlIiwicGF5bG9hZEJ1ZmZlciIsInBsaXN0IiwiY3JlYXRlQmluYXJ5UGxpc3QiLCJoZWFkZXJCdWZmZXIiLCJCdWZmZXIiLCJhbGxvYyIsIndyaXRlVUludDMyQkUiLCJsZW5ndGgiLCJjb25jYXQiLCJleHBvcnRzIiwiX2RlZmF1bHQiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vbGliL3BsaXN0LXNlcnZpY2UvdHJhbnNmb3JtZXIvcGxpc3Qtc2VydmljZS1lbmNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJlYW0gZnJvbSAnc3RyZWFtJztcbmltcG9ydCB7IHBsaXN0IH0gZnJvbSAnQGFwcGl1bS9zdXBwb3J0JztcblxuXG5jb25zdCBIRUFERVJfTEVOR1RIID0gNDtcblxuY2xhc3MgUGxpc3RTZXJ2aWNlRW5jb2RlciBleHRlbmRzIFN0cmVhbS5UcmFuc2Zvcm0ge1xuICBjb25zdHJ1Y3RvciAoKSB7XG4gICAgc3VwZXIoeyBvYmplY3RNb2RlOiB0cnVlIH0pO1xuICB9XG5cbiAgX3RyYW5zZm9ybSAoZGF0YSwgZW5jb2RpbmcsIG9uRGF0YSkge1xuICAgIHRoaXMucHVzaCh0aGlzLl9lbmNvZGUoZGF0YSksICdidWZmZXInKTtcbiAgICBvbkRhdGEoKTtcbiAgfVxuXG4gIF9lbmNvZGUgKGRhdGEpIHtcbiAgICBjb25zdCBwYXlsb2FkQnVmZmVyID0gcGxpc3QuY3JlYXRlQmluYXJ5UGxpc3QoZGF0YSk7XG4gICAgY29uc3QgaGVhZGVyQnVmZmVyID0gQnVmZmVyLmFsbG9jKEhFQURFUl9MRU5HVEgpO1xuICAgIGhlYWRlckJ1ZmZlci53cml0ZVVJbnQzMkJFKHBheWxvYWRCdWZmZXIubGVuZ3RoLCAwKTtcbiAgICByZXR1cm4gQnVmZmVyLmNvbmNhdChbaGVhZGVyQnVmZmVyLCBwYXlsb2FkQnVmZmVyXSwgaGVhZGVyQnVmZmVyLmxlbmd0aCArIHBheWxvYWRCdWZmZXIubGVuZ3RoKTtcbiAgfVxufVxuXG5leHBvcnQgeyBQbGlzdFNlcnZpY2VFbmNvZGVyIH07XG5leHBvcnQgZGVmYXVsdCBQbGlzdFNlcnZpY2VFbmNvZGVyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFFBQUEsR0FBQUQsT0FBQTtBQUdBLE1BQU1FLGFBQWEsR0FBRyxDQUFDO0FBRXZCLE1BQU1DLG1CQUFtQixTQUFTQyxlQUFNLENBQUNDLFNBQVMsQ0FBQztFQUNqREMsV0FBV0EsQ0FBQSxFQUFJO0lBQ2IsS0FBSyxDQUFDO01BQUVDLFVBQVUsRUFBRTtJQUFLLENBQUMsQ0FBQztFQUM3QjtFQUVBQyxVQUFVQSxDQUFFQyxJQUFJLEVBQUVDLFFBQVEsRUFBRUMsTUFBTSxFQUFFO0lBQ2xDLElBQUksQ0FBQ0MsSUFBSSxDQUFDLElBQUksQ0FBQ0MsT0FBTyxDQUFDSixJQUFJLENBQUMsRUFBRSxRQUFRLENBQUM7SUFDdkNFLE1BQU0sRUFBRTtFQUNWO0VBRUFFLE9BQU9BLENBQUVKLElBQUksRUFBRTtJQUNiLE1BQU1LLGFBQWEsR0FBR0MsY0FBSyxDQUFDQyxpQkFBaUIsQ0FBQ1AsSUFBSSxDQUFDO0lBQ25ELE1BQU1RLFlBQVksR0FBR0MsTUFBTSxDQUFDQyxLQUFLLENBQUNqQixhQUFhLENBQUM7SUFDaERlLFlBQVksQ0FBQ0csYUFBYSxDQUFDTixhQUFhLENBQUNPLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDbkQsT0FBT0gsTUFBTSxDQUFDSSxNQUFNLENBQUMsQ0FBQ0wsWUFBWSxFQUFFSCxhQUFhLENBQUMsRUFBRUcsWUFBWSxDQUFDSSxNQUFNLEdBQUdQLGFBQWEsQ0FBQ08sTUFBTSxDQUFDO0VBQ2pHO0FBQ0Y7QUFBQ0UsT0FBQSxDQUFBcEIsbUJBQUEsR0FBQUEsbUJBQUE7QUFBQSxJQUFBcUIsUUFBQSxHQUdjckIsbUJBQW1CO0FBQUFvQixPQUFBLENBQUFFLE9BQUEsR0FBQUQsUUFBQSJ9