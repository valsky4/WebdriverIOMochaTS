{"version":3,"file":"ssl-helper.js","names":["_tls","_interopRequireDefault","require","_net","_bluebird","HANDSHAKE_TIMEOUT_MS","upgradeToSSL","socket","key","cert","tls","TLSSocket","rejectUnauthorized","secureContext","createSecureContext","enableSSLHandshakeOnly","sslSocket","connect","B","resolve","reject","timeoutHandler","setTimeout","destroyed","end","Error","once","clearTimeout","_handle","readStop","net","Socket","fd"],"sources":["../../lib/ssl-helper.js"],"sourcesContent":["import tls from 'tls';\nimport net from 'net';\nimport B from 'bluebird';\n\nconst HANDSHAKE_TIMEOUT_MS = 10000;\n\nfunction upgradeToSSL (socket, key, cert) {\n  return new tls.TLSSocket(socket, {\n    rejectUnauthorized: false,\n    secureContext: tls.createSecureContext({\n      key,\n      cert\n    })\n  });\n}\n\n/**\n * After the ssl protocol is successfully handshake, close the ssl protocol channel and use text transmission\n * @param socket\n * @param key\n * @param cert\n * @returns {Promise<Socket>} Duplicate the input socket\n */\nasync function enableSSLHandshakeOnly (socket, key, cert) {\n  const sslSocket = tls.connect({\n    socket,\n    secureContext: tls.createSecureContext({\n      key,\n      cert\n    }),\n    rejectUnauthorized: false,\n  });\n\n  // stop receiving data after successful handshake\n  await new B((resolve, reject) => {\n    const timeoutHandler = setTimeout(() => {\n      if (!sslSocket.destroyed) {\n        sslSocket.end();\n      }\n      return reject(new Error('ssl handshake error'));\n    }, HANDSHAKE_TIMEOUT_MS);\n\n    sslSocket.once('secureConnect', () => {\n      clearTimeout(timeoutHandler);\n      sslSocket._handle.readStop();\n      return resolve();\n    });\n  });\n  // Duplicate the socket. Return a new socket object connected to the same system resource\n  return net.Socket({fd: socket._handle.fd});\n}\n\n\nexport { upgradeToSSL, enableSSLHandshakeOnly };\n"],"mappings":";;;;;;;;;AAAA,IAAAA,IAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,IAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,SAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,MAAMG,oBAAoB,GAAG,KAAK;AAElC,SAASC,YAAYA,CAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACxC,OAAO,IAAIC,YAAG,CAACC,SAAS,CAACJ,MAAM,EAAE;IAC/BK,kBAAkB,EAAE,KAAK;IACzBC,aAAa,EAAEH,YAAG,CAACI,mBAAmB,CAAC;MACrCN,GAAG;MACHC;IACF,CAAC;EACH,CAAC,CAAC;AACJ;AASA,eAAeM,sBAAsBA,CAAER,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACxD,MAAMO,SAAS,GAAGN,YAAG,CAACO,OAAO,CAAC;IAC5BV,MAAM;IACNM,aAAa,EAAEH,YAAG,CAACI,mBAAmB,CAAC;MACrCN,GAAG;MACHC;IACF,CAAC,CAAC;IACFG,kBAAkB,EAAE;EACtB,CAAC,CAAC;EAGF,MAAM,IAAIM,iBAAC,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC/B,MAAMC,cAAc,GAAGC,UAAU,CAAC,MAAM;MACtC,IAAI,CAACN,SAAS,CAACO,SAAS,EAAE;QACxBP,SAAS,CAACQ,GAAG,EAAE;MACjB;MACA,OAAOJ,MAAM,CAAC,IAAIK,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACjD,CAAC,EAAEpB,oBAAoB,CAAC;IAExBW,SAAS,CAACU,IAAI,CAAC,eAAe,EAAE,MAAM;MACpCC,YAAY,CAACN,cAAc,CAAC;MAC5BL,SAAS,CAACY,OAAO,CAACC,QAAQ,EAAE;MAC5B,OAAOV,OAAO,EAAE;IAClB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,OAAOW,YAAG,CAACC,MAAM,CAAC;IAACC,EAAE,EAAEzB,MAAM,CAACqB,OAAO,CAACI;EAAE,CAAC,CAAC;AAC5C"}