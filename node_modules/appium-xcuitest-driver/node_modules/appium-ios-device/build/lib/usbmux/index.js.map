{"version":3,"file":"index.js","names":["_net","_interopRequireDefault","require","_os","_lodash","_bluebird","_support","_lengthBasedSplitter","_usbmuxDecoder","_usbmuxEncoder","_path","_plistService","_lockdown","_baseService","_constants","MAX_FRAME_SIZE","MB","USBMUX_RESULT","OK","BADCOMMAND","BADDEV","CONNREFUSED","name","version","path","resolve","__dirname","err","DEFAULT_USBMUXD_SOCKET","DEFAULT_USBMUXD_PORT","DEFAULT_USBMUXD_HOST","PROG_NAME","CLIENT_VERSION_STRING","swap16","val","getDefaultSocket","opts","socketPath","socketPort","socketHost","timeout","socket","fs","exists","net","createConnection","process","platform","test","os","release","Error","B","reject","once","Usbmux","BaseServiceSocket","constructor","socketClient","_decoder","UsbmuxDecoder","_splitter","LengthBasedSplitter","readableStream","littleEndian","maxFrameLength","lengthFieldOffset","lengthFieldLength","lengthAdjustment","_socketClient","pipe","_encoder","UsbmuxEncoder","_assignClientFailureHandlers","_tag","_responseCallbacks","on","_handleData","bind","data","cb","header","tag","_","noop","readBUID","receivePromise","_receivePlistPromise","payload","BUID","JSON","stringify","_sendPlist","MessageType","ProgName","ClientVersionString","readPairRecord","udid","PairRecordData","plist","parsePlist","PairRecordID","json","write","responseCallback","e","setTimeout","listDevices","DeviceList","findDevice","devices","find","device","Properties","SerialNumber","connectLockdown","connect","DeviceID","LOCKDOWN_PORT","Lockdown","PlistService","deviceID","port","Number","shutdown","unpipe","PortNumber","exports","_default","default"],"sources":["../../../lib/usbmux/index.js"],"sourcesContent":["import net from 'net';\nimport os from 'os';\nimport _ from 'lodash';\nimport B from 'bluebird';\nimport { plist, fs } from '@appium/support';\nimport LengthBasedSplitter from '../util/transformer/length-based-splitter';\nimport UsbmuxDecoder from './transformer/usbmux-decoder.js';\nimport UsbmuxEncoder from './transformer/usbmux-encoder.js';\nimport path from 'path';\nimport PlistService from '../plist-service';\nimport { Lockdown, LOCKDOWN_PORT } from '../lockdown';\nimport { BaseServiceSocket } from '../base-service';\nimport { MB } from '../constants';\n\n\nconst MAX_FRAME_SIZE = 1 * MB;\n\nconst USBMUX_RESULT = {\n  OK: 0,\n  BADCOMMAND: 1,\n  BADDEV: 2,\n  CONNREFUSED: 3,\n};\n\nlet name, version;\ntry {\n  // first try assuming this is in the `build` folder\n  ({ name, version } = require(path.resolve(__dirname, '..', '..', '..', 'package.json')));\n} catch (err) {\n  // then try assuming it is not\n  ({ name, version } = require(path.resolve(__dirname, '..', '..', 'package.json')));\n}\n\nconst DEFAULT_USBMUXD_SOCKET = '/var/run/usbmuxd';\nconst DEFAULT_USBMUXD_PORT = 27015;\nconst DEFAULT_USBMUXD_HOST = '127.0.0.1';\nconst PROG_NAME = name;\nconst CLIENT_VERSION_STRING = `${name}-${version}`;\n\nfunction swap16 (val) {\n  return ((val & 0xFF) << 8) | ((val >> 8) & 0xFF);\n}\n\n/**\n * @typedef {Object} SocketOptions\n * @property {?string} socketPath [/var/run/usbmuxd] The full path to the usbmuxd Unix socket\n * @property {?number} socketPort [27015] The port number to connect to if running on Windows\n * or in WSL1 mode\n * @property {?string} socketHost [127.0.0.1] The host name to connect to if running on Windows\n * or in WSL1 mode\n * @property {?number} timeout [5000] The number of milliseconds to wait until\n * the socket is connected\n */\n\n/**\n * Connects a socket to usbmuxd service\n *\n * @param {?SocketOptions} opts\n * @throws {Error} If there was an error while accessing the socket or\n * a connection error happened\n * @throws {B.TimeoutError} if connection timeout happened\n * @returns {net.Socket} Connected socket instance\n */\nasync function getDefaultSocket (opts = {}) {\n  const {\n    socketPath = DEFAULT_USBMUXD_SOCKET,\n    socketPort = DEFAULT_USBMUXD_PORT,\n    socketHost = DEFAULT_USBMUXD_HOST,\n    timeout = 5000,\n  } = opts;\n\n  let socket;\n  if (await fs.exists(socketPath)) {\n    socket = net.createConnection(socketPath);\n  } else if (process.platform === 'win32'\n      || (process.platform === 'linux' && /microsoft/i.test(os.release()))) {\n    // Connect to usbmuxd when running on WSL1\n    socket = net.createConnection(socketPort, socketHost);\n  } else {\n    throw new Error(`The usbmuxd socket at '${socketPath}' does not exist or is not accessible`);\n  }\n\n  return await new B((resolve, reject) => {\n    socket.once('error', reject);\n    socket.once('connect', () => resolve(socket));\n  }).timeout(timeout);\n}\n\n\nclass Usbmux extends BaseServiceSocket {\n  constructor (socketClient) {\n    super(socketClient);\n\n    this._decoder = new UsbmuxDecoder();\n    this._splitter = new LengthBasedSplitter({\n      readableStream: socketClient,\n      littleEndian: true,\n      maxFrameLength: MAX_FRAME_SIZE,\n      lengthFieldOffset: 0,\n      lengthFieldLength: 4,\n      lengthAdjustment: 0,\n    });\n    this._socketClient.pipe(this._splitter).pipe(this._decoder);\n\n    this._encoder = new UsbmuxEncoder();\n    this._encoder.pipe(this._socketClient);\n    this._assignClientFailureHandlers(this._encoder);\n\n    this._tag = 0;\n    this._responseCallbacks = {};\n    this._decoder.on('data', this._handleData.bind(this));\n  }\n\n  _handleData (data) {\n    const cb = this._responseCallbacks[data.header.tag] || _.noop;\n    cb(data); // eslint-disable-line promise/prefer-await-to-callbacks\n  }\n\n  /**\n   * Returns the BUID of the host computer from usbmuxd\n   * @param {number} [timeout=5000] the timeout of receiving a response from usbmuxd\n   * @returns {string}\n   */\n  async readBUID (timeout = 5000) {\n    const {tag, receivePromise} = this._receivePlistPromise(timeout, (data) => {\n      if (data.payload.BUID) {\n        return data.payload.BUID;\n      }\n      throw new Error(`Unexpected data: ${JSON.stringify(data)}`);\n    });\n\n    this._sendPlist({\n      tag,\n      payload: {\n        MessageType: 'ReadBUID',\n        ProgName: PROG_NAME,\n        ClientVersionString: CLIENT_VERSION_STRING\n      }\n    });\n\n    return await receivePromise;\n  }\n\n  /**\n   * Reads the pair record of a device. It will return null if it doesn't exists\n   * @param {string} udid the udid of the device\n   * @param {number} [timeout=5000] the timeout of receiving a response from usbmuxd\n   * @returns {?Object}\n   */\n  async readPairRecord (udid, timeout = 5000) {\n    const {tag, receivePromise} = this._receivePlistPromise(timeout, (data) => {\n      if (!data.payload.PairRecordData) {\n        return null;\n      }\n      try {\n        return plist.parsePlist(data.payload.PairRecordData);\n      } catch (err) {\n        throw new Error(`Unexpected data: ${JSON.stringify(data)}`);\n      }\n    });\n\n    this._sendPlist({\n      tag,\n      payload: {\n        MessageType: 'ReadPairRecord',\n        PairRecordID: udid,\n        ProgName: PROG_NAME,\n        ClientVersionString: CLIENT_VERSION_STRING\n      }\n    });\n    return await receivePromise;\n  }\n\n  _sendPlist (json) {\n    this._encoder.write(json);\n  }\n\n  _receivePlistPromise (timeout = 5000, responseCallback) {\n    const tag = this._tag++;\n    const receivePromise = new B((resolve, reject) => {\n      this._responseCallbacks[tag] = (data) => {\n        try {\n          resolve(responseCallback(data));\n        } catch (e) {\n          reject(e);\n        }\n      };\n      setTimeout(() => reject(new Error(`Failed to receive any data within the timeout: ${timeout}`)), timeout);\n    });\n    return {tag, receivePromise};\n  }\n\n  /**\n   * Lists all devices connected to the host\n   * @param {number} [timeout=5000] the timeout of receiving a response from usbmuxd\n   * @returns {Array}\n   */\n  async listDevices (timeout = 5000) {\n    const {tag, receivePromise} = this._receivePlistPromise(timeout, (data) => {\n      if (data.payload.DeviceList) {\n        return data.payload.DeviceList;\n      }\n      throw new Error(`Unexpected data: ${JSON.stringify(data)}`);\n    });\n\n    this._sendPlist({\n      tag,\n      payload: {\n        MessageType: 'ListDevices',\n        ProgName: PROG_NAME,\n        ClientVersionString: CLIENT_VERSION_STRING\n      }\n    });\n\n    return await receivePromise;\n  }\n\n  /**\n   * Looks for a device with the passed udid. It will return undefined if the device is not found\n   * @param {string} udid the udid of the device\n   * @param {number} [timeout=5000] the timeout of receiving a response from usbmuxd\n   * @returns {?Object}\n   */\n  async findDevice (udid, timeout = 5000) {\n    const devices = await this.listDevices(timeout);\n    return _.find(devices, (device) => device.Properties.SerialNumber === udid);\n  }\n\n  /**\n   * Connects to the lockdownd on the device and returns a Lockdown client\n   * @param {string} udid the udid of the device\n   * @param {number} [timeout=5000] the timeout of receiving a response from usbmuxd\n   * @returns {Lockdown}\n   */\n  async connectLockdown (udid, timeout = 5000) {\n    const device = await this.findDevice(udid, timeout);\n    if (!device) {\n      throw new Error(`Could not find the expected device '${udid}'`);\n    }\n    const socket = await this.connect(device.Properties.DeviceID, LOCKDOWN_PORT, timeout);\n    return new Lockdown(new PlistService(socket));\n  }\n\n  /**\n   * Connects to a certain port on the device\n   * @param {string} deviceID the device id which can be retrieved from the properties of a device\n   * @param {number} port the port number that wants to be connected\n   * @param {number} [timeout=5000] the timeout of receiving a response from usbmuxd\n   * @returns {net.Socket|Object} The socket or the object returned in the callback if the callback function exists\n   */\n  async connect (deviceID, port, timeout = 5000) {\n    const {tag, receivePromise} = this._receivePlistPromise(timeout, (data) => {\n      if (data.payload.MessageType !== 'Result') {\n        throw new Error(`Unexpected data: ${JSON.stringify(data)}`);\n      }\n      if (data.payload.Number === USBMUX_RESULT.OK) {\n        this._splitter.shutdown();\n        this._socketClient.unpipe(this._splitter);\n        this._splitter.unpipe(this._decoder);\n        return this._socketClient;\n      } else if (data.payload.Number === USBMUX_RESULT.CONNREFUSED) {\n        throw new Error(`Connection was refused to port ${port}`);\n      } else {\n        throw new Error(`Unexpected data: ${JSON.stringify(data)}`);\n      }\n    });\n\n    this._sendPlist({\n      tag,\n      payload: {\n        MessageType: 'Connect',\n        ProgName: PROG_NAME,\n        ClientVersionString: CLIENT_VERSION_STRING,\n        DeviceID: deviceID,\n        PortNumber: swap16(port)\n      }\n    });\n\n    return await receivePromise;\n  }\n}\n\nexport { Usbmux, getDefaultSocket };\nexport default Usbmux;\n"],"mappings":"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"}