{"version":3,"file":"stream-logger.js","names":["_stream","_interopRequireDefault","require","_lodash","_logger","MIN_PRINTABLE_CHAR","MAX_PRINTABLE_CHAR","CHARACTERS_PER_LINE","StreamLogger","Stream","Transform","constructor","direction","verbose","objectMode","_direction","_verbose","_transform","data","encoding","onData","_log","err","log","debug","message","push","SEND","length","i","hex","char","j","charCode","_","padStart","toString","toUpperCase","String","fromCharCode","join","exports","RECEIVE","_default","default"],"sources":["../../../../lib/util/transformer/stream-logger.js"],"sourcesContent":["import Stream from 'stream';\nimport _ from 'lodash';\nimport log from '../../logger';\n\n\nconst MIN_PRINTABLE_CHAR = 32;\nconst MAX_PRINTABLE_CHAR = 126;\n\nconst CHARACTERS_PER_LINE = 19;\n\nclass StreamLogger extends Stream.Transform {\n  constructor (direction, verbose = false) {\n    super({ objectMode: true });\n\n    this._direction = direction;\n    this._verbose = verbose;\n  }\n\n  _transform (data, encoding, onData) {\n    if (this._verbose) {\n      try {\n        this._log(data);\n      } catch (err) {\n        // in case something goes wrong, log it so we can fix the parsing\n        // and also allow everything to continue without interruption\n        log.debug(`Error logging data: ${err.message}`);\n      }\n    }\n\n    this.push(data);\n    onData();\n  }\n\n  _log (data) {\n    log.debug(`Data ${this._direction === StreamLogger.SEND ? 'sent' : 'received'}, length: ${data.length}`);\n\n    // format as used by ios-webkit-debug-proxy as well as tools like socat\n    // print out the data in two sections, one the hexadecimal renderings of the characters,\n    // the other the printable characters (with '.' for unprintable characters).\n    let i = 0;\n    while (i < data.length) {\n      let hex = [], char = [];\n      // create each line of text to output\n      for (let j = 0; j < CHARACTERS_PER_LINE; j++) {\n        if (i >= data.length) {\n          // fill in the charcode section with blanks, for formatting,\n          // when there is no more data\n          hex[j] = '  ';\n          continue;\n        }\n        const charCode = data[i++];\n        // hexadecimal representation, forced into 2 places\n        hex[j] = _.padStart(charCode.toString(16).toUpperCase(), 2, '0');\n        // character representation, with '.' when unprintable\n        char[j] = charCode < MIN_PRINTABLE_CHAR || charCode > MAX_PRINTABLE_CHAR\n          ? '.'\n          : String.fromCharCode(charCode);\n      }\n      log.debug(`${hex.join(' ')} ${char.join('')}`);\n    }\n  }\n}\n\nStreamLogger.SEND = 0;\nStreamLogger.RECEIVE = 1;\n\nexport { StreamLogger };\nexport default StreamLogger;\n"],"mappings":";;;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAH,sBAAA,CAAAC,OAAA;AAGA,MAAMG,kBAAkB,GAAG,EAAE;AAC7B,MAAMC,kBAAkB,GAAG,GAAG;AAE9B,MAAMC,mBAAmB,GAAG,EAAE;AAE9B,MAAMC,YAAY,SAASC,eAAM,CAACC,SAAS,CAAC;EAC1CC,WAAWA,CAAEC,SAAS,EAAEC,OAAO,GAAG,KAAK,EAAE;IACvC,KAAK,CAAC;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;IAE3B,IAAI,CAACC,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACI,QAAQ,GAAGH,OAAO;EACzB;EAEAI,UAAUA,CAAEC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAE;IAClC,IAAI,IAAI,CAACJ,QAAQ,EAAE;MACjB,IAAI;QACF,IAAI,CAACK,IAAI,CAACH,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOI,GAAG,EAAE;QAGZC,eAAG,CAACC,KAAK,CAAE,uBAAsBF,GAAG,CAACG,OAAQ,EAAC,CAAC;MACjD;IACF;IAEA,IAAI,CAACC,IAAI,CAACR,IAAI,CAAC;IACfE,MAAM,EAAE;EACV;EAEAC,IAAIA,CAAEH,IAAI,EAAE;IACVK,eAAG,CAACC,KAAK,CAAE,QAAO,IAAI,CAACT,UAAU,KAAKP,YAAY,CAACmB,IAAI,GAAG,MAAM,GAAG,UAAW,aAAYT,IAAI,CAACU,MAAO,EAAC,CAAC;IAKxG,IAAIC,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAGX,IAAI,CAACU,MAAM,EAAE;MACtB,IAAIE,GAAG,GAAG,EAAE;QAAEC,IAAI,GAAG,EAAE;MAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGzB,mBAAmB,EAAEyB,CAAC,EAAE,EAAE;QAC5C,IAAIH,CAAC,IAAIX,IAAI,CAACU,MAAM,EAAE;UAGpBE,GAAG,CAACE,CAAC,CAAC,GAAG,IAAI;UACb;QACF;QACA,MAAMC,QAAQ,GAAGf,IAAI,CAACW,CAAC,EAAE,CAAC;QAE1BC,GAAG,CAACE,CAAC,CAAC,GAAGE,eAAC,CAACC,QAAQ,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAE,CAAC,CAACC,WAAW,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;QAEhEN,IAAI,CAACC,CAAC,CAAC,GAAGC,QAAQ,GAAG5B,kBAAkB,IAAI4B,QAAQ,GAAG3B,kBAAkB,GACpE,GAAG,GACHgC,MAAM,CAACC,YAAY,CAACN,QAAQ,CAAC;MACnC;MACAV,eAAG,CAACC,KAAK,CAAE,GAAEM,GAAG,CAACU,IAAI,CAAC,GAAG,CAAE,IAAGT,IAAI,CAACS,IAAI,CAAC,EAAE,CAAE,EAAC,CAAC;IAChD;EACF;AACF;AAACC,OAAA,CAAAjC,YAAA,GAAAA,YAAA;AAEDA,YAAY,CAACmB,IAAI,GAAG,CAAC;AACrBnB,YAAY,CAACkC,OAAO,GAAG,CAAC;AAAC,IAAAC,QAAA,GAGVnC,YAAY;AAAAiC,OAAA,CAAAG,OAAA,GAAAD,QAAA"}