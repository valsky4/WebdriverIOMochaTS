"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.WebInspectorEncoder = void 0;
require("source-map-support/register");
var _stream = _interopRequireDefault(require("stream"));
var _support = require("@appium/support");
const WEBINSPECTOR_PARTIAL_PACKET_CHUNK_SIZE = 8096;
class WebInspectorEncoder extends _stream.default.Transform {
  constructor() {
    super({
      objectMode: true
    });
  }
  _transform(data, encoding, onData) {
    let payloadBuffer = _support.plist.createPlist(data, true);
    for (let i = 0; i < payloadBuffer.length; i += this._encode(payloadBuffer, i)) {}
    onData();
  }
  _encode(data, pos) {
    const messageLength = Math.min(data.length - pos, WEBINSPECTOR_PARTIAL_PACKET_CHUNK_SIZE);
    if (messageLength < WEBINSPECTOR_PARTIAL_PACKET_CHUNK_SIZE) {
      this.push({
        WIRFinalMessageKey: data.slice(pos, messageLength + pos)
      });
    } else {
      this.push({
        WIRPartialMessageKey: data.slice(pos, messageLength + pos)
      });
    }
    return messageLength;
  }
}
exports.WebInspectorEncoder = WebInspectorEncoder;
var _default = WebInspectorEncoder;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc3RyZWFtIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfc3VwcG9ydCIsIldFQklOU1BFQ1RPUl9QQVJUSUFMX1BBQ0tFVF9DSFVOS19TSVpFIiwiV2ViSW5zcGVjdG9yRW5jb2RlciIsIlN0cmVhbSIsIlRyYW5zZm9ybSIsImNvbnN0cnVjdG9yIiwib2JqZWN0TW9kZSIsIl90cmFuc2Zvcm0iLCJkYXRhIiwiZW5jb2RpbmciLCJvbkRhdGEiLCJwYXlsb2FkQnVmZmVyIiwicGxpc3QiLCJjcmVhdGVQbGlzdCIsImkiLCJsZW5ndGgiLCJfZW5jb2RlIiwicG9zIiwibWVzc2FnZUxlbmd0aCIsIk1hdGgiLCJtaW4iLCJwdXNoIiwiV0lSRmluYWxNZXNzYWdlS2V5Iiwic2xpY2UiLCJXSVJQYXJ0aWFsTWVzc2FnZUtleSIsImV4cG9ydHMiLCJfZGVmYXVsdCIsImRlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWIvd2ViaW5zcGVjdG9yL3RyYW5zZm9ybWVyL3dlYmluc3BlY3Rvci1lbmNvZGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHJlYW0gZnJvbSAnc3RyZWFtJztcbmltcG9ydCB7IHBsaXN0IH0gZnJvbSAnQGFwcGl1bS9zdXBwb3J0JztcblxuY29uc3QgV0VCSU5TUEVDVE9SX1BBUlRJQUxfUEFDS0VUX0NIVU5LX1NJWkUgPSA4MDk2O1xuXG5jbGFzcyBXZWJJbnNwZWN0b3JFbmNvZGVyIGV4dGVuZHMgU3RyZWFtLlRyYW5zZm9ybSB7XG5cbiAgY29uc3RydWN0b3IgKCkge1xuICAgIHN1cGVyKHsgb2JqZWN0TW9kZTogdHJ1ZSB9KTtcbiAgfVxuXG4gIF90cmFuc2Zvcm0gKGRhdGEsIGVuY29kaW5nLCBvbkRhdGEpIHtcbiAgICBsZXQgcGF5bG9hZEJ1ZmZlciA9IHBsaXN0LmNyZWF0ZVBsaXN0KGRhdGEsIHRydWUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGF5bG9hZEJ1ZmZlci5sZW5ndGg7IGkgKz0gdGhpcy5fZW5jb2RlKHBheWxvYWRCdWZmZXIsIGkpKSB7fVxuICAgIG9uRGF0YSgpO1xuICB9XG5cbiAgX2VuY29kZSAoZGF0YSwgcG9zKSB7XG4gICAgY29uc3QgbWVzc2FnZUxlbmd0aCA9IE1hdGgubWluKGRhdGEubGVuZ3RoIC0gcG9zLCBXRUJJTlNQRUNUT1JfUEFSVElBTF9QQUNLRVRfQ0hVTktfU0laRSk7XG4gICAgaWYgKG1lc3NhZ2VMZW5ndGggPCBXRUJJTlNQRUNUT1JfUEFSVElBTF9QQUNLRVRfQ0hVTktfU0laRSkge1xuICAgICAgdGhpcy5wdXNoKHtXSVJGaW5hbE1lc3NhZ2VLZXk6IGRhdGEuc2xpY2UocG9zLCBtZXNzYWdlTGVuZ3RoICsgcG9zKX0pO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnB1c2goe1dJUlBhcnRpYWxNZXNzYWdlS2V5OiBkYXRhLnNsaWNlKHBvcywgbWVzc2FnZUxlbmd0aCArIHBvcyl9KTtcbiAgICB9XG4gICAgcmV0dXJuIG1lc3NhZ2VMZW5ndGg7XG4gIH1cblxufVxuXG5leHBvcnQgeyBXZWJJbnNwZWN0b3JFbmNvZGVyIH07XG5leHBvcnQgZGVmYXVsdCBXZWJJbnNwZWN0b3JFbmNvZGVyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQUFBLE9BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFFBQUEsR0FBQUQsT0FBQTtBQUVBLE1BQU1FLHNDQUFzQyxHQUFHLElBQUk7QUFFbkQsTUFBTUMsbUJBQW1CLFNBQVNDLGVBQU0sQ0FBQ0MsU0FBUyxDQUFDO0VBRWpEQyxXQUFXQSxDQUFBLEVBQUk7SUFDYixLQUFLLENBQUM7TUFBRUMsVUFBVSxFQUFFO0lBQUssQ0FBQyxDQUFDO0VBQzdCO0VBRUFDLFVBQVVBLENBQUVDLElBQUksRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUU7SUFDbEMsSUFBSUMsYUFBYSxHQUFHQyxjQUFLLENBQUNDLFdBQVcsQ0FBQ0wsSUFBSSxFQUFFLElBQUksQ0FBQztJQUNqRCxLQUFLLElBQUlNLENBQUMsR0FBRyxDQUFDLEVBQUVBLENBQUMsR0FBR0gsYUFBYSxDQUFDSSxNQUFNLEVBQUVELENBQUMsSUFBSSxJQUFJLENBQUNFLE9BQU8sQ0FBQ0wsYUFBYSxFQUFFRyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQ2hGSixNQUFNLEVBQUU7RUFDVjtFQUVBTSxPQUFPQSxDQUFFUixJQUFJLEVBQUVTLEdBQUcsRUFBRTtJQUNsQixNQUFNQyxhQUFhLEdBQUdDLElBQUksQ0FBQ0MsR0FBRyxDQUFDWixJQUFJLENBQUNPLE1BQU0sR0FBR0UsR0FBRyxFQUFFaEIsc0NBQXNDLENBQUM7SUFDekYsSUFBSWlCLGFBQWEsR0FBR2pCLHNDQUFzQyxFQUFFO01BQzFELElBQUksQ0FBQ29CLElBQUksQ0FBQztRQUFDQyxrQkFBa0IsRUFBRWQsSUFBSSxDQUFDZSxLQUFLLENBQUNOLEdBQUcsRUFBRUMsYUFBYSxHQUFHRCxHQUFHO01BQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUMsTUFBTTtNQUNMLElBQUksQ0FBQ0ksSUFBSSxDQUFDO1FBQUNHLG9CQUFvQixFQUFFaEIsSUFBSSxDQUFDZSxLQUFLLENBQUNOLEdBQUcsRUFBRUMsYUFBYSxHQUFHRCxHQUFHO01BQUMsQ0FBQyxDQUFDO0lBQ3pFO0lBQ0EsT0FBT0MsYUFBYTtFQUN0QjtBQUVGO0FBQUNPLE9BQUEsQ0FBQXZCLG1CQUFBLEdBQUFBLG1CQUFBO0FBQUEsSUFBQXdCLFFBQUEsR0FHY3hCLG1CQUFtQjtBQUFBdUIsT0FBQSxDQUFBRSxPQUFBLEdBQUFELFFBQUEifQ==