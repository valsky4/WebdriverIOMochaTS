{"version":3,"file":"geolocation.js","names":["LYFT_SET_LOCATION","DECIMAL_SEPARATOR_SCRIPT","setLocationWithLyft","udid","latitude","longitude","fs","which","e","Error","exec","stderr","message","setLocationWithIdb","idb","setLocation","setLocationWithAppleScript","sim","menu","stdout","decimalSeparator","_","trim","latitudeStr","longitudeStr","map","coord","replace","output","executeUIClientScript","log","debug","extensions","setGeolocation","locationSetters","_locationMenu","lastError","setter","info"],"sources":["../../../lib/extensions/geolocation.js"],"sourcesContent":["import _ from 'lodash';\nimport { fs} from '@appium/support';\nimport log from '../logger';\nimport { exec } from 'teen_process';\n\nconst LYFT_SET_LOCATION = 'set-simulator-location';\nconst DECIMAL_SEPARATOR_SCRIPT = `\nuse framework \"Foundation\"\nuse framework \"AppKit\"\nuse scripting additions\n\nset theFormatter to current application's NSNumberFormatter's new()\nset result to theFormatter's decimalSeparator()\nlog result as string\n`;\n\n/**\n * Set custom geolocation parameters for the given Simulator using LYFT_SET_LOCATION.\n *\n * @param {string} udid - The udid to set the given geolocation\n * @param {string|number} latitude - The latitude value, which is going to be entered\n *   into the corresponding edit field, for example '39,0006'.\n * @param {string|number} longitude - The longitude value, which is going to be entered\n *   into the corresponding edit field, for example '19,0068'.\n * @throws {Error} If it failed to set the location\n */\nasync function setLocationWithLyft (udid, latitude, longitude) {\n  try {\n    await fs.which(LYFT_SET_LOCATION);\n  } catch (e) {\n    throw new Error(`'${LYFT_SET_LOCATION}' binary has not been found in your PATH. ` +\n      'Please install it as \"brew install lyft/formulae/set-simulator-location\" by brew or ' +\n      'read https://github.com/MobileNativeFoundation/set-simulator-location to set ' +\n      'the binary by manual to be able to set geolocation by the library.');\n  }\n\n  try {\n    await exec(LYFT_SET_LOCATION, [\n      '-c', latitude, longitude,\n      '-u', udid\n    ]);\n  } catch (e) {\n    throw new Error(`Failed to set geolocation with '${LYFT_SET_LOCATION}'. ` +\n      `Original error: ${e.stderr || e.message}`);\n  }\n}\n\n/**\n * Set custom geolocation parameters for the given Simulator using idb.\n *\n * @param {Object} idb - The IDB instance\n * @param {string|number} latitude - The latitude value, which is going to be entered\n *   into the corresponding edit field, for example '39,0006'.\n * @param {string|number} longitude - The longitude value, which is going to be entered\n *   into the corresponding edit field, for example '19,0068'.\n * @throws {Error} If it failed to set the location\n */\nasync function setLocationWithIdb (idb, latitude, longitude) {\n  if (!idb) {\n    throw new Error('Failed to set geolocation with idb because it is not installed or the \"launchWithIDB\" capability was not set');\n  }\n\n  try {\n    await idb.setLocation(latitude, longitude);\n  } catch (e) {\n    throw new Error(`Failed to set geolocation with idb. Original error: ${e.stderr || e.message}`);\n  }\n}\n\n/**\n * Set custom geolocation parameters for the given Simulator using AppleScript\n *\n * @param {Object} sim - The SimulatorXcode object\n * @param {string|number} latitude - The latitude value, which is going to be entered\n *   into the corresponding edit field, for example '39,0006'.\n * @param {string|number} longitude - The longitude value, which is going to be entered\n *   into the corresponding edit field, for example '19,0068'.\n * @param {string} [menu=Debug] - The menu field in which the 'Location' feature is found\n * @throws {Error} If it failed to set the location\n */\nasync function setLocationWithAppleScript (sim, latitude, longitude, menu = 'Debug') {\n  // Make sure system-wide decimal separator is used\n  const {stdout, stderr} = await exec('osascript', ['-e', DECIMAL_SEPARATOR_SCRIPT]);\n  const decimalSeparator = _.trim(stdout || stderr);\n  const [latitudeStr, longitudeStr] = [latitude, longitude]\n    .map((coord) => `${coord}`.replace(/[.,]/, decimalSeparator));\n\n  const output = await sim.executeUIClientScript(`\n    tell application \"System Events\"\n      tell process \"Simulator\"\n        set featureName to \"Custom Location\"\n        set dstMenuItem to menu item (featureName & \"â€¦\") of menu 1 of menu item \"Location\" of menu 1 of menu bar item \"${menu}\" of menu bar 1\n        click dstMenuItem\n        delay 1\n        set value of text field 1 of window featureName to \"${latitudeStr}\"\n        delay 0.5\n        set value of text field 2 of window featureName to \"${longitudeStr}\"\n        delay 0.5\n        click button \"OK\" of window featureName\n        delay 0.5\n        set isInvisible to (not (exists (window featureName)))\n      end tell\n    end tell\n  `);\n  log.debug(`Geolocation parameters dialog accepted: ${output}`);\n  if (_.trim(output) !== 'true') {\n    throw new Error(`Failed to set geolocation with AppleScript. Original error: ${output}`);\n  }\n}\n\nconst extensions = {};\n\n/**\n * Set custom geolocation parameters for the given Simulator using AppleScript.\n *\n * @param {string|number} latitude - The latitude value, which is going to be entered\n *   into the corresponding edit field, for example '39,0006'.\n * @param {string|number} longitude - The longitude value, which is going to be entered\n *   into the corresponding edit field, for example '19,0068'.\n * @returns {boolean} True if the given parameters have correct format and were successfully accepted.\n * @throws {Error} If there was an error while setting the location\n */\nextensions.setGeolocation = async function setGeolocation (latitude, longitude) {\n  const locationSetters = [\n    async () => await setLocationWithLyft(this.udid, latitude, longitude),\n    async () => await setLocationWithIdb(this.idb, latitude, longitude),\n    async () => await setLocationWithAppleScript(this, latitude, longitude, this._locationMenu),\n  ];\n\n  let lastError;\n  for (const setter of locationSetters) {\n    try {\n      await setter();\n      return true;\n    } catch (e) {\n      log.info(e.message);\n      lastError = e;\n    }\n  }\n  throw lastError;\n};\n\nexport default extensions;\n"],"mappings":"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"}