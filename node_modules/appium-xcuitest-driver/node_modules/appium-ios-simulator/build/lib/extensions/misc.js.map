{"version":3,"file":"misc.js","names":["extensions","shake","log","info","udid","simctl","spawnProcess","addCertificate","Error","xcodeVersion","pushNotification"],"sources":["../../../lib/extensions/misc.js"],"sourcesContent":["import log from '../logger';\n\nconst extensions = {};\n\n/**\n * Perform Shake gesture on Simulator window.\n */\nextensions.shake = async function shake () {\n  log.info(`Performing shake gesture on ${this.udid} Simulator`);\n  await this.simctl.spawnProcess([\n    'notifyutil',\n    '-p', 'com.apple.UIKit.SimulatorShake'\n  ]);\n};\n\n/**\n * Adds the given certificate into the Trusted Root Store on the simulator.\n * The simulator must be shut down in order for this method to work properly.\n *\n * @param {string} payload the content of the PEM certificate\n * @returns {boolean} `true` if the certificate has been successfully installed\n * or `false` if it has already been there\n */\n// eslint-disable-next-line require-await\nextensions.addCertificate = async function addCertificate () {\n  throw new Error(`Xcode SDK '${this.xcodeVersion}' is too old add certificates`);\n};\n\n/**\n * Simulates push notification delivery\n *\n * @since Xcode SDK 11.4\n */\n// eslint-disable-next-line require-await\nextensions.pushNotification = async function pushNotification (/* payload */) {\n  throw new Error(`Xcode SDK '${this.xcodeVersion}' is too old to push notifications`);\n};\n\nexport default extensions;\n"],"mappings":";;;;;;;;AAAA;AAEA,MAAMA,UAAU,GAAG,CAAC,CAAC;AAKrBA,UAAU,CAACC,KAAK,GAAG,eAAeA,KAAK,GAAI;EACzCC,eAAG,CAACC,IAAI,CAAE,+BAA8B,IAAI,CAACC,IAAK,YAAW,CAAC;EAC9D,MAAM,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,CAC7B,YAAY,EACZ,IAAI,EAAE,gCAAgC,CACvC,CAAC;AACJ,CAAC;AAWDN,UAAU,CAACO,cAAc,GAAG,eAAeA,cAAc,GAAI;EAC3D,MAAM,IAAIC,KAAK,CAAE,cAAa,IAAI,CAACC,YAAa,+BAA8B,CAAC;AACjF,CAAC;AAQDT,UAAU,CAACU,gBAAgB,GAAG,eAAeA,gBAAgB,GAAiB;EAC5E,MAAM,IAAIF,KAAK,CAAE,cAAa,IAAI,CAACC,YAAa,oCAAmC,CAAC;AACtF,CAAC;AAAC,eAEaT,UAAU;AAAA"}