{"version":3,"file":"safari.js","names":["DATA_FILES","MOBILE_SAFARI_BUNDLE_ID","extensions","openUrl","url","isRunning","Error","timer","timing","Timer","start","launchApp","wait","timeoutMs","SAFARI_STARTUP_TIMEOUT_MS","simctl","err","getDuration","asSeconds","toFixed","stderr","message","log","debug","scrubSafari","keepPrefs","terminateApp","ign","safariData","getAppContainer","libraryDir","path","resolve","deletePromises","map","p","fs","rimraf","join","push","B","all","updateSafariSettings","updates","_","isEmpty","containerRoot","plistPath","updateSettings"],"sources":["../../../lib/extensions/safari.js"],"sourcesContent":["import _ from 'lodash';\nimport path from 'path';\nimport { fs, timing } from '@appium/support';\nimport log from '../logger';\nimport B from 'bluebird';\nimport { MOBILE_SAFARI_BUNDLE_ID, SAFARI_STARTUP_TIMEOUT_MS } from '../utils';\n\n// The root of all these files is located under Safari data container root\n// in 'Library' subfolder\nconst DATA_FILES = [\n  ['Caches', '*'],\n  ['Image Cache', '*'],\n  ['WebKit', MOBILE_SAFARI_BUNDLE_ID, '*'],\n  ['WebKit', 'GeolocationSites.plist'],\n  ['WebKit', 'LocalStorage', '*.*'],\n  ['Safari', '*'],\n  ['Cookies', '*.binarycookies'],\n  ['..', 'tmp', MOBILE_SAFARI_BUNDLE_ID, '*'],\n];\n\nconst extensions = {};\n\n/**\n * Open the given URL in mobile Safari browser.\n * The browser will be started automatically if it is not running.\n *\n * @param {string} url - The URL to be opened.\n */\nextensions.openUrl = async function openUrl (url) {\n  if (!await this.isRunning()) {\n    throw new Error(`Tried to open '${url}', but Simulator is not in Booted state`);\n  }\n  const timer = new timing.Timer().start();\n  try {\n    await this.launchApp(MOBILE_SAFARI_BUNDLE_ID, {\n      wait: true,\n      timeoutMs: SAFARI_STARTUP_TIMEOUT_MS,\n    });\n    await this.simctl.openUrl(url);\n  } catch (err) {\n    throw new Error(`Safari could not open '${url}' after ${timer.getDuration().asSeconds.toFixed(3)}s. ` +\n      `Original error: ${err.stderr || err.message}`);\n  }\n  log.debug(`Safari successfully opened '${url}' in ${timer.getDuration().asSeconds.toFixed(3)}s`);\n};\n\n/**\n * Clean up the directories for mobile Safari.\n * Safari will be terminated if it is running.\n *\n * @param {boolean} keepPrefs - Whether to keep Safari preferences from being deleted.\n */\nextensions.scrubSafari = async function scrubSafari (keepPrefs = true) {\n  try {\n    await this.terminateApp(MOBILE_SAFARI_BUNDLE_ID);\n  } catch (ign) {}\n\n  log.debug('Scrubbing Safari data files');\n  const safariData = await this.simctl.getAppContainer(MOBILE_SAFARI_BUNDLE_ID, 'data');\n  const libraryDir = path.resolve(safariData, 'Library');\n  const deletePromises = DATA_FILES.map((p) => fs.rimraf(path.join(libraryDir, ...p)));\n  if (!keepPrefs) {\n    deletePromises.push(fs.rimraf(path.join(libraryDir, 'Preferences', '*.plist')));\n  }\n  await B.all(deletePromises);\n};\n\n/**\n * Updates variious Safari settings. Simulator must be booted in order to for it\n * to success.\n *\n * @param {object} updates An object containing Safari settings to be updated.\n * The list of available setting names and their values could be retrived by\n * changing the corresponding Safari settings in the UI and then inspecting\n * 'Library/Preferences/com.apple.mobilesafari.plist' file inside of\n * com.apple.mobilesafari app container.\n * The full path to the Mobile Safari's container could be retrieved from\n * `xcrun simctl get_app_container <sim_udid> com.apple.mobilesafari data`\n * command output.\n * Use the `xcrun simctl spawn <sim_udid> defaults read <path_to_plist>` command\n * to print the plist content to the Terminal.\n */\nextensions.updateSafariSettings = async function updateSafariSettings (updates) {\n  if (_.isEmpty(updates)) {\n    return false;\n  }\n\n  const containerRoot = await this.simctl.getAppContainer(MOBILE_SAFARI_BUNDLE_ID, 'data');\n  const plistPath = path.join(containerRoot, 'Library', 'Preferences', 'com.apple.mobilesafari.plist');\n  return await this.updateSettings(plistPath, updates);\n};\n\nexport default extensions;\n"],"mappings":"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"}