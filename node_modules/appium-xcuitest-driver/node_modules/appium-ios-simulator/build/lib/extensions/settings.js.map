{"version":3,"file":"settings.js","names":["extensions","setReduceMotion","reduceMotion","updateSettings","ReduceMotionEnabled","Number","setReduceTransparency","reduceTransparency","EnhancedBackgroundContrastEnabled","domain","updates","_","isEmpty","argChunks","generateDefaultsCommandArgs","B","all","map","args","simctl","spawnProcess","setAppearance","Error","xcodeVersion","getAppearance","configureLocalization"],"sources":["../../../lib/extensions/settings.js"],"sourcesContent":["import _ from 'lodash';\nimport { generateDefaultsCommandArgs } from '../defaults-utils';\nimport B from 'bluebird';\n\nconst extensions = {};\n\n/**\n * Updates Reduce Motion setting state.\n *\n * @param {boolean} reduceMotion Whether to enable or disable the setting.\n */\nextensions.setReduceMotion = async function setReduceMotion (reduceMotion) {\n  return await this.updateSettings('com.apple.Accessibility', {\n    ReduceMotionEnabled: Number(reduceMotion)\n  });\n};\n\n/**\n * Updates Reduce Transparency setting state.\n *\n * @param {boolean} reduceTransparency Whether to enable or disable the setting.\n */\nextensions.setReduceTransparency = async function setReduceTransparency (reduceTransparency) {\n  return await this.updateSettings('com.apple.Accessibility', {\n    EnhancedBackgroundContrastEnabled: Number(reduceTransparency)\n  });\n};\n\n/**\n * Allows to update Simulator preferences in runtime.\n *\n * @param {string} domain The name of preferences domain to be updated,\n * for example, 'com.apple.Preferences' or 'com.apple.Accessibility' or\n * full path to a plist file on the local file system.\n * @param {object} updates Mapping of keys/values to be updated\n * @returns {boolean} True if settings were actually changed\n */\nextensions.updateSettings = async function updateSettings (domain, updates) {\n  if (_.isEmpty(updates)) {\n    return false;\n  }\n\n  const argChunks = generateDefaultsCommandArgs(updates);\n  await B.all(argChunks.map((args) => this.simctl.spawnProcess([\n    'defaults', 'write', domain, ...args\n  ])));\n  return true;\n};\n\n/**\n * Sets UI appearance style.\n * This function can only be called on a booted simulator.\n *\n * @since Xcode SDK 11.4\n */\nextensions.setAppearance = async function setAppearance (/* value */) { // eslint-disable-line require-await\n  throw new Error(`Xcode SDK '${this.xcodeVersion}' is too old to set UI appearance`);\n};\n\n/**\n * Gets the current UI appearance style\n * This function can only be called on a booted simulator.\n *\n * @since Xcode SDK 11.4\n */\nextensions.getAppearance = async function getAppearance () { // eslint-disable-line require-await\n  throw new Error(`Xcode SDK '${this.xcodeVersion}' is too old to get UI appearance`);\n};\n\n// eslint-disable-next-line require-await\nextensions.configureLocalization = async function configureLocalization () {\n  throw new Error(`Xcode SDK '${this.xcodeVersion}' is too old to configure the Simulator locale`);\n};\n\nexport default extensions;\n"],"mappings":";;;;;;;;AAAA;AACA;AACA;AAEA,MAAMA,UAAU,GAAG,CAAC,CAAC;AAOrBA,UAAU,CAACC,eAAe,GAAG,eAAeA,eAAe,CAAEC,YAAY,EAAE;EACzE,OAAO,MAAM,IAAI,CAACC,cAAc,CAAC,yBAAyB,EAAE;IAC1DC,mBAAmB,EAAEC,MAAM,CAACH,YAAY;EAC1C,CAAC,CAAC;AACJ,CAAC;AAODF,UAAU,CAACM,qBAAqB,GAAG,eAAeA,qBAAqB,CAAEC,kBAAkB,EAAE;EAC3F,OAAO,MAAM,IAAI,CAACJ,cAAc,CAAC,yBAAyB,EAAE;IAC1DK,iCAAiC,EAAEH,MAAM,CAACE,kBAAkB;EAC9D,CAAC,CAAC;AACJ,CAAC;AAWDP,UAAU,CAACG,cAAc,GAAG,eAAeA,cAAc,CAAEM,MAAM,EAAEC,OAAO,EAAE;EAC1E,IAAIC,eAAC,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;IACtB,OAAO,KAAK;EACd;EAEA,MAAMG,SAAS,GAAG,IAAAC,0CAA2B,EAACJ,OAAO,CAAC;EACtD,MAAMK,iBAAC,CAACC,GAAG,CAACH,SAAS,CAACI,GAAG,CAAEC,IAAI,IAAK,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,CAC3D,UAAU,EAAE,OAAO,EAAEX,MAAM,EAAE,GAAGS,IAAI,CACrC,CAAC,CAAC,CAAC;EACJ,OAAO,IAAI;AACb,CAAC;AAQDlB,UAAU,CAACqB,aAAa,GAAG,eAAeA,aAAa,GAAe;EACpE,MAAM,IAAIC,KAAK,CAAE,cAAa,IAAI,CAACC,YAAa,mCAAkC,CAAC;AACrF,CAAC;AAQDvB,UAAU,CAACwB,aAAa,GAAG,eAAeA,aAAa,GAAI;EACzD,MAAM,IAAIF,KAAK,CAAE,cAAa,IAAI,CAACC,YAAa,mCAAkC,CAAC;AACrF,CAAC;AAGDvB,UAAU,CAACyB,qBAAqB,GAAG,eAAeA,qBAAqB,GAAI;EACzE,MAAM,IAAIH,KAAK,CAAE,cAAa,IAAI,CAACC,YAAa,gDAA+C,CAAC;AAClG,CAAC;AAAC,eAEavB,UAAU;AAAA"}