{"version":3,"file":"navigate.js","names":["_logger","_interopRequireDefault","require","_utils","_events","_support","_lodash","_bluebird","frameDetached","emit","events","EVENT_FRAMES_DETACHED","pageLoad","startPageLoadTimer","pageLoadVerifyHook","_","noop","_startPageLoadTimer","timeoutMs","isFunction","getDuration","log","debug","timing","Timer","start","pageLoading","verify","pageLoadDelay","util","cancellableDelay","err","B","CancellationError","appIdKey","elapsedMs","asMilliSeconds","checkPageIsReady","pageLoadMs","toFixed","cancelPageLoad","cancel","pageUnload","waitForDom","checkParams","readyCmd","readyState","resolve","execute","timeout","pageReadyTimeout","TimeoutError","navToUrl","url","pageIdKey","_navigatingToPage","waitForFramePromise","waitForFrameNavigated","rpcClient","send","useNewSafari","delay","navEventListener","value","allowNavigationWithoutReload","navigationDelay","once","finally","off","_default","exports","default"],"sources":["../../../lib/mixins/navigate.js"],"sourcesContent":["import log from '../logger';\nimport { checkParams } from '../utils';\nimport events from './events';\nimport { timing, util } from '@appium/support';\nimport _ from 'lodash';\nimport B from 'bluebird';\n\n\nfunction frameDetached () {\n  this.emit(events.EVENT_FRAMES_DETACHED);\n}\n\nasync function pageLoad (startPageLoadTimer, pageLoadVerifyHook = _.noop) {\n  const timeoutMs = 500;\n  if (!_.isFunction(startPageLoadTimer?.getDuration)) {\n    log.debug(`Page load timer not a timer. Creating new timer`);\n    startPageLoadTimer = new timing.Timer().start();\n  }\n\n  log.debug('Page loaded, verifying whether ready');\n  this.pageLoading = true;\n\n  const verify = async () => {\n    this.pageLoadDelay = util.cancellableDelay(timeoutMs);\n    try {\n      await this.pageLoadDelay;\n    } catch (err) {\n      if (err instanceof B.CancellationError) {\n        // if the promise has been cancelled\n        // we want to skip checking the readiness\n        return;\n      }\n    }\n\n    // we can get this called in the middle of trying to find a new app\n    if (!this.appIdKey) {\n      log.debug('Not connected to an application. Ignoring page load');\n      return;\n    }\n\n    if (_.isFunction(pageLoadVerifyHook)) {\n      await pageLoadVerifyHook();\n    }\n\n    // if we are ready, or we've spend too much time on this\n    const elapsedMs = startPageLoadTimer.getDuration().asMilliSeconds;\n    if (await this.checkPageIsReady() || (this.pageLoadMs > 0 && elapsedMs > this.pageLoadMs)) {\n      log.debug('Page is ready');\n      this.pageLoading = false;\n    } else {\n      log.debug('Page was not ready, retrying');\n      await verify();\n    }\n  };\n  try {\n    await verify();\n  } finally {\n    log.debug(`Page load completed in ${startPageLoadTimer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    this.pageLoading = false;\n  }\n}\n\nfunction cancelPageLoad () {\n  log.debug('Unregistering from page readiness notifications');\n  this.pageLoading = false;\n  if (this.pageLoadDelay) {\n    this.pageLoadDelay.cancel();\n  }\n}\n\nasync function pageUnload () {\n  log.debug('Page unloading');\n  await this.waitForDom();\n}\n\nasync function waitForDom (startPageLoadTimer, pageLoadVerifyHook) {\n  log.debug('Waiting for dom...');\n  await this.pageLoad(startPageLoadTimer, pageLoadVerifyHook);\n}\n\nasync function checkPageIsReady () {\n  checkParams({appIdKey: this.appIdKey});\n\n  log.debug('Checking document readyState');\n  const readyCmd = 'document.readyState;';\n  let readyState = 'loading';\n  try {\n    readyState = await B.resolve(this.execute(readyCmd, true)).timeout(this.pageReadyTimeout);\n  } catch (err) {\n    if (!(err instanceof B.TimeoutError)) {\n      throw err;\n    }\n    log.debug(`Page readiness check timed out after ${this.pageReadyTimeout}ms`);\n    return false;\n  }\n  log.debug(`Document readyState is '${readyState}'`);\n\n  return readyState === 'complete';\n}\n\nasync function navToUrl (url, pageLoadVerifyHook) {\n  checkParams({appIdKey: this.appIdKey, pageIdKey: this.pageIdKey});\n\n  this._navigatingToPage = true;\n\n  try {\n    log.debug(`Navigating to new URL: '${url}'`);\n\n    // begin listening for frame navigation event, which will be waited for later\n    const waitForFramePromise = this.waitForFrameNavigated();\n\n    await this.rpcClient.send('Page.navigate', {\n      url,\n      appIdKey: this.appIdKey,\n      pageIdKey: this.pageIdKey,\n    });\n\n    if (!this.useNewSafari) {\n      // a small pause for the browser to catch up\n      await B.delay(1000);\n    }\n\n    // wait until the page has been navigated\n    await waitForFramePromise;\n\n    await this.waitForDom(new timing.Timer().start(), pageLoadVerifyHook);\n\n    // enable console logging, so we get the events (otherwise we only\n    // get notified when navigating to a local page\n    await this.rpcClient.send('Console.enable', {\n      appIdKey: this.appIdKey,\n      pageIdKey: this.pageIdKey,\n    });\n  } finally {\n    this._navigatingToPage = false;\n  }\n}\n\nasync function waitForFrameNavigated () {\n  let navEventListener;\n  return await new B(async (resolve) => {\n    log.debug('Waiting for frame navigated message...');\n    const start = new timing.Timer().start();\n\n    // add a handler for the `Page.frameNavigated` message\n    // from the remote debugger\n    navEventListener = (err, value) => {\n      log.debug(`Frame navigated in ${start.getDuration().asMilliSeconds.toFixed(0)}ms from: ${value}`);\n      if (!this.allowNavigationWithoutReload && !this.pageLoading) {\n        resolve(value);\n      } else {\n        log.debug('Frame navigated but we were warned about it, not ' +\n                  'considering page state unloaded');\n        this.allowNavigationWithoutReload = false;\n      }\n      if (this.navigationDelay) {\n        this.navigationDelay.cancel();\n      }\n    };\n\n    this.rpcClient.once('Page.frameNavigated', navEventListener);\n\n    // timeout, in case remote debugger doesn't respond,\n    // or takes a long time\n    if (!this.useNewSafari || this.pageLoadMs >= 0) {\n      // use pageLoadMs, or a small amount of time\n      const timeout = this.useNewSafari ? this.pageLoadMs : 500;\n      this.navigationDelay = util.cancellableDelay(timeout);\n      try {\n        await this.navigationDelay;\n        navEventListener(null, `${timeout}ms timeout`);\n      } catch (err) {\n        // nothing to do: we only get here if the remote debugger\n        // already notified of frame navigation, and the delay\n        // was cancelled\n      }\n    }\n  }).finally(() => {\n    if (navEventListener) {\n      this.rpcClient.off('Page.frameNavigated', navEventListener);\n    }\n  });\n}\n\n\nexport default { frameDetached, pageLoad, cancelPageLoad, pageUnload, waitForDom, checkPageIsReady, navToUrl, waitForFrameNavigated };\n"],"mappings":"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"}