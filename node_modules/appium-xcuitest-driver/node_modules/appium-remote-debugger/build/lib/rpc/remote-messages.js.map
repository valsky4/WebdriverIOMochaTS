{"version":3,"file":"remote-messages.js","names":["_lodash","_interopRequireDefault","require","_protocol","OBJECT_GROUP","MINIMAL_COMMAND","FULL_COMMAND","DIRECT_COMMAND","COMMANDS","RemoteMessages","constructor","isTargetBased","_isTargetBased","setConnectionKey","connId","__argument","WIRConnectionIdentifierKey","__selector","connectToApp","appIdKey","WIRApplicationIdentifierKey","setSenderKey","senderId","pageIdKey","WIRSenderKey","WIRPageIdentifierKey","WIRAutomaticallyPause","indicateWebView","enabled","WIRIndicateEnabledKey","_","isNil","launchApplication","bundleId","WIRApplicationBundleIdentifierKey","getFullCommand","opts","method","params","targetId","id","realMethod","realParams","message","JSON","stringify","Object","assign","objectGroup","includeCommandLineAPI","doNotPauseOnExceptionsAndMuteConsole","emulateUserGesture","generatePreview","saveResult","plist","WIRSocketDataKey","omitBy","getMinimalCommand","getDirectCommand","getRemoteCommand","command","builderFunction","getProtocolCommand","exports","_default","default"],"sources":["../../../lib/rpc/remote-messages.js"],"sourcesContent":["import _ from 'lodash';\nimport getProtocolCommand from '../protocol';\n\n\nconst OBJECT_GROUP = 'console';\n\nconst MINIMAL_COMMAND = 'getMinimalCommand';\nconst FULL_COMMAND = 'getFullCommand';\nconst DIRECT_COMMAND = 'getDirectCommand';\n\n// mapping of commands to the function for getting the command\n// defaults to `getMinimalCommand`, so no need to have those listed here\nconst COMMANDS = {\n  'Page.getCookies': FULL_COMMAND,\n  'Page.navigate': FULL_COMMAND,\n\n  'Runtime.awaitPromise': FULL_COMMAND,\n  'Runtime.callFunctionOn': FULL_COMMAND,\n  'Runtime.evaluate': FULL_COMMAND,\n\n  'Target.exists': DIRECT_COMMAND,\n\n  'Timeline.start': FULL_COMMAND,\n  'Timeline.stop': FULL_COMMAND,\n};\n\nclass RemoteMessages {\n  constructor (isTargetBased = false) {\n    this.isTargetBased = isTargetBased;\n  }\n\n  set isTargetBased (isTargetBased) {\n    this._isTargetBased = isTargetBased;\n  }\n\n  get isTargetBased () {\n    return this._isTargetBased;\n  }\n\n  /*\n   * Connection functions\n   */\n\n  setConnectionKey (connId) {\n    return {\n      __argument: {\n        WIRConnectionIdentifierKey: connId\n      },\n      __selector: '_rpc_reportIdentifier:'\n    };\n  }\n\n  connectToApp (connId, appIdKey) {\n    return {\n      __argument: {\n        WIRConnectionIdentifierKey: connId,\n        WIRApplicationIdentifierKey: appIdKey\n      },\n      __selector: '_rpc_forwardGetListing:'\n    };\n  }\n\n  setSenderKey (connId, senderId, appIdKey, pageIdKey) {\n    return {\n      __argument: {\n        WIRApplicationIdentifierKey: appIdKey,\n        WIRConnectionIdentifierKey: connId,\n        WIRSenderKey: senderId,\n        WIRPageIdentifierKey: pageIdKey,\n        WIRAutomaticallyPause: false\n      },\n      __selector: '_rpc_forwardSocketSetup:'\n    };\n  }\n\n  indicateWebView (connId, appIdKey, pageIdKey, enabled) {\n    return {\n      __argument: {\n        WIRApplicationIdentifierKey: appIdKey,\n        WIRIndicateEnabledKey: _.isNil(enabled) ? true : enabled,\n        WIRConnectionIdentifierKey: connId,\n        WIRPageIdentifierKey: pageIdKey\n      },\n      __selector: '_rpc_forwardIndicateWebView:'\n    };\n  }\n\n  launchApplication (bundleId) {\n    return {\n      __argument: {\n        WIRApplicationBundleIdentifierKey: bundleId\n      },\n      __selector: '_rpc_requestApplicationLaunch:'\n    };\n  }\n\n  getFullCommand (opts = {}) {\n    const {\n      method,\n      params,\n      connId,\n      senderId,\n      appIdKey,\n      pageIdKey,\n      targetId,\n      id,\n    } = opts;\n\n    /* The Web Inspector has a number of parameters that can be passed in, as\n     * seen when dumping what Safari is doing when communicating with it. Most\n     * are kept as they are set for Safari. The exception is `emulateUserGesture`\n     * which, on iOS 13+, breaks popup blocking (i.e., even with the popup\n     * blocking setting on, new windows are openable both from links and from\n     * JavaScript).\n     */\n\n    let realMethod;\n    let realParams;\n    if (this.isTargetBased) {\n      realMethod = 'Target.sendMessageToTarget';\n      realParams = {\n        targetId,\n        message: JSON.stringify({\n          id,\n          method,\n          params: Object.assign({\n            objectGroup: OBJECT_GROUP,\n            includeCommandLineAPI: true,\n            doNotPauseOnExceptionsAndMuteConsole: false,\n            emulateUserGesture: false,\n            generatePreview: false,\n            saveResult: false,\n          }, params)\n        }),\n      };\n    } else {\n      realMethod = method;\n      realParams = Object.assign({\n        objectGroup: OBJECT_GROUP,\n        includeCommandLineAPI: true,\n        doNotPauseOnExceptionsAndMuteConsole: false,\n        emulateUserGesture: false,\n      }, params);\n    }\n\n    const plist = {\n      __argument: {\n        WIRSocketDataKey: {\n          method: realMethod,\n          params: realParams,\n        },\n        WIRConnectionIdentifierKey: connId,\n        WIRSenderKey: senderId,\n        WIRApplicationIdentifierKey: appIdKey,\n        WIRPageIdentifierKey: pageIdKey,\n      },\n      __selector: '_rpc_forwardSocketData:',\n    };\n    return _.omitBy(plist, _.isNil);\n  }\n\n  getMinimalCommand (opts = {}) {\n    const {method, params, connId, senderId, appIdKey, pageIdKey, targetId, id} = opts;\n\n    let realMethod = method;\n    let realParams = params;\n    if (this.isTargetBased) {\n      realMethod = 'Target.sendMessageToTarget';\n      realParams = {\n        targetId,\n        message: JSON.stringify({\n          id,\n          method,\n          params,\n        }),\n      };\n    }\n\n    const plist = {\n      __argument: {\n        WIRSocketDataKey: {\n          method: realMethod,\n          params: realParams,\n        },\n        WIRConnectionIdentifierKey: connId,\n        WIRSenderKey: senderId,\n        WIRApplicationIdentifierKey: appIdKey,\n        WIRPageIdentifierKey: pageIdKey,\n      },\n      __selector: '_rpc_forwardSocketData:'\n    };\n    return _.omitBy(plist, _.isNil);\n  }\n\n  getDirectCommand (opts = {}) {\n    const {method, params, connId, senderId, appIdKey, pageIdKey, id} = opts;\n\n    const plist = {\n      __argument: {\n        WIRSocketDataKey: {\n          id,\n          method,\n          params,\n        },\n        WIRConnectionIdentifierKey: connId,\n        WIRSenderKey: senderId,\n        WIRApplicationIdentifierKey: appIdKey,\n        WIRPageIdentifierKey: pageIdKey,\n      },\n      __selector: '_rpc_forwardSocketData:'\n    };\n    return _.omitBy(plist, _.isNil);\n  }\n\n  getRemoteCommand (command, opts) {\n    const {\n      id,\n      connId,\n      appIdKey,\n      senderId,\n      pageIdKey,\n      targetId,\n    } = opts;\n\n    // deal with Safari Web Inspector commands\n    switch (command) {\n      case 'setConnectionKey':\n        return this.setConnectionKey(connId);\n      case 'indicateWebView':\n        return this.indicateWebView(connId, appIdKey, pageIdKey, opts.enabled);\n      case 'connectToApp':\n        return this.connectToApp(connId, appIdKey);\n      case 'setSenderKey':\n        return this.setSenderKey(connId, senderId, appIdKey, pageIdKey);\n      case 'launchApplication':\n        return this.launchApplication(opts.bundleId);\n    }\n\n    // deal with WebKit commands\n    const builderFunction = COMMANDS[command] || MINIMAL_COMMAND;\n    return this[builderFunction]({\n      ...getProtocolCommand(id, command, opts),\n      connId,\n      appIdKey,\n      senderId,\n      pageIdKey,\n      targetId,\n    });\n  }\n}\n\nexport { RemoteMessages };\nexport default RemoteMessages;\n"],"mappings":"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"}