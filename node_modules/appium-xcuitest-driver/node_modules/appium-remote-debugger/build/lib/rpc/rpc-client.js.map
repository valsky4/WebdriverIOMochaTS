{"version":3,"file":"rpc-client.js","names":["_remoteMessages","_interopRequireDefault","require","_asyncbox","_logger","_lodash","_bluebird","_rpcMessageHandler","_support","DATA_LOG_LENGTH","length","WAIT_FOR_TARGET_TIMEOUT","WAIT_FOR_TARGET_INTERVAL","MIN_PLATFORM_FOR_TARGET_BASED","MIN_PLATFORM_NO_TARGET_EXISTS","isTargetBased","isSafari","platformVersion","isHighVersion","util","compareVersions","log","debug","RpcClient","constructor","opts","_targets","_shouldCheckForTarget","shouldCheckForTarget","bundleId","logAllCommunication","logAllCommunicationHexDump","webInspectorMaxFrameLength","socketChunkSize","fullPageInitialization","isConnected","connId","uuidV4","senderId","msgId","_contexts","contexts","needsTarget","targets","connected","on","event","listener","messageHandler","once","off","warn","_isTargetBased","remoteMessages","RemoteMessages","RpcMessageHandler","addTarget","bind","updateTarget","removeTarget","onExecutionContextCreated","onGarbageCollected","waitForTarget","appIdKey","pageIdKey","force","getTarget","waitForCondition","_","isEmpty","waitMs","intervalMs","error","err","message","includes","Error","send","command","waitForResponse","timer","timing","Timer","start","sendToDevice","toLowerCase","info","getDuration","asMilliSeconds","toFixed","B","resolve","reject","_cmd$__argument","_cmd$__argument2","wrapperMsgId","toString","targetId","fullOpts","defaults","id","cmd","getRemoteCommand","__argument","WIRSocketDataKey","isNil","Buffer","from","JSON","stringify","messageHandled","truncate","listeners","__selector","prependOnceListener","args","value","code","msg","res","sendMessage","connect","disconnect","removeAllListeners","receive","app","targetInfo","pendingTargetNotification","isProvisional","has","oldTargetId","newTargetId","provisional","_this$targets$app","_this$targets$app$pro","page","toPairs","selectPage","sendOpts","enabled","Object","assign","initializePageFull","initializePage","disabled","instruments","active","state","depth","shouldPause","loggingChannels","source","channels","map","entry","level","selectApp","onAppChange","dict","oldAppIdKey","WIRHostApplicationIdentifierKey","correctAppIdKey","WIRApplicationIdentifierKey","pageDict","connectedAppIdKey","context","push","onScriptParsed","scriptInfo","exports","default"],"sources":["../../../lib/rpc/rpc-client.js"],"sourcesContent":["import RemoteMessages from './remote-messages';\nimport { waitForCondition } from 'asyncbox';\nimport log from '../logger';\nimport _ from 'lodash';\nimport B from 'bluebird';\nimport RpcMessageHandler from './rpc-message-handler';\nimport { util, timing } from '@appium/support';\n\n\nconst DATA_LOG_LENGTH = {length: 200};\n\nconst WAIT_FOR_TARGET_TIMEOUT = 10000;\nconst WAIT_FOR_TARGET_INTERVAL = 1000;\n\nconst MIN_PLATFORM_FOR_TARGET_BASED = '12.2';\n\n// `Target.exists` protocol method was removed from WebKit in 13.4\nconst MIN_PLATFORM_NO_TARGET_EXISTS = '13.4';\n\nfunction isTargetBased (isSafari, platformVersion) {\n  // On iOS 12.2 the messages get sent through the Target domain\n  // On iOS 13.0+, WKWebView also needs to follow the Target domain,\n  // so here only check the target OS version as the default behaviour.\n  const isHighVersion = util.compareVersions(platformVersion, '>=', MIN_PLATFORM_FOR_TARGET_BASED);\n  log.debug(`Checking which communication style to use (${isSafari ? '' : 'non-'}Safari on platform version '${platformVersion}')`);\n  log.debug(`Platform version equal or higher than '${MIN_PLATFORM_FOR_TARGET_BASED}': ${isHighVersion}`);\n  return isHighVersion;\n}\n\nexport default class RpcClient {\n  constructor (opts = {}) {\n    this._targets = [];\n    this._shouldCheckForTarget = !!opts.shouldCheckForTarget;\n\n    const {\n      bundleId,\n      platformVersion = {},\n      isSafari = true,\n      logAllCommunication = false,\n      logAllCommunicationHexDump = false,\n      webInspectorMaxFrameLength,\n      socketChunkSize,\n      fullPageInitialization = false,\n    } = opts;\n\n    this.isSafari = isSafari;\n\n    this.isConnected = false;\n    this.connId = util.uuidV4();\n    this.senderId = util.uuidV4();\n    this.msgId = 0;\n\n    this.logAllCommunication = logAllCommunication;\n    this.logAllCommunicationHexDump = logAllCommunicationHexDump;\n    this.socketChunkSize = socketChunkSize;\n    this.webInspectorMaxFrameLength = webInspectorMaxFrameLength;\n\n    this.fullPageInitialization = fullPageInitialization;\n\n    this.bundleId = bundleId;\n    this.platformVersion = platformVersion;\n\n    this._contexts = [];\n    this._targets = {};\n\n    // start with a best guess for the protocol\n    this.isTargetBased = isTargetBased(isSafari, this.platformVersion);\n  }\n\n  get contexts () {\n    return this._contexts;\n  }\n\n  get needsTarget () {\n    return this.shouldCheckForTarget && this.isTargetBased;\n  }\n\n  get targets () {\n    return this._targets;\n  }\n\n  get shouldCheckForTarget () {\n    return this._shouldCheckForTarget;\n  }\n\n  set shouldCheckForTarget (shouldCheckForTarget) {\n    this._shouldCheckForTarget = !!shouldCheckForTarget;\n  }\n\n  get isConnected () {\n    return this.connected;\n  }\n\n  set isConnected (connected) {\n    this.connected = !!connected;\n  }\n\n  on (event, listener) {\n    this.messageHandler.on(event, listener);\n    return this;\n  }\n\n  once (event, listener) {\n    this.messageHandler.once(event, listener);\n    return this;\n  }\n\n  off (event, listener) {\n    this.messageHandler.off(event, listener);\n    return this;\n  }\n\n  set isTargetBased (isTargetBased) {\n    log.warn(`Setting communication protocol: using ${isTargetBased ? 'Target-based' : 'full Web Inspector protocol'} communication`);\n    this._isTargetBased = isTargetBased;\n\n    if (!this.remoteMessages) {\n      this.remoteMessages = new RemoteMessages(isTargetBased);\n    } else {\n      this.remoteMessages.isTargetBased = isTargetBased;\n    }\n\n    if (!this.messageHandler) {\n      this.messageHandler = new RpcMessageHandler(isTargetBased);\n\n      // add handlers for internal events\n      this.messageHandler.on('Target.targetCreated', this.addTarget.bind(this));\n      this.messageHandler.on('Target.didCommitProvisionalTarget', this.updateTarget.bind(this));\n      this.messageHandler.on('Target.targetDestroyed', this.removeTarget.bind(this));\n      this.messageHandler.on('Runtime.executionContextCreated', this.onExecutionContextCreated.bind(this));\n      this.messageHandler.on('Heap.garbageCollected', this.onGarbageCollected.bind(this));\n    } else {\n      this.messageHandler.isTargetBased = isTargetBased;\n    }\n  }\n\n  get isTargetBased () {\n    return this._isTargetBased;\n  }\n\n  async waitForTarget (appIdKey, pageIdKey, force = false) {\n    if (!force && !this.needsTarget) {\n      return;\n    }\n\n    if (this.getTarget(appIdKey, pageIdKey)) {\n      return;\n    }\n\n    // otherwise waiting is necessary to see what the target is\n    try {\n      await waitForCondition(() => !_.isEmpty(this.getTarget(appIdKey, pageIdKey)), {\n        waitMs: WAIT_FOR_TARGET_TIMEOUT,\n        intervalMs: WAIT_FOR_TARGET_INTERVAL,\n        error: 'No targets found, unable to communicate with device',\n      });\n    } catch (err) {\n      if (!err.message.includes('Condition unmet')) {\n        throw err;\n      }\n      throw new Error('No targets found, unable to communicate with device');\n    }\n  }\n\n  async send (command, opts = {}, waitForResponse = true) {\n    const timer = new timing.Timer().start();\n    const {\n      appIdKey,\n      pageIdKey\n    } = opts;\n    try {\n      if (!_.isEmpty(appIdKey) && !_.isEmpty(pageIdKey)) {\n        await this.waitForTarget(appIdKey, pageIdKey);\n      }\n      return await this.sendToDevice(command, opts, waitForResponse);\n    } catch (err) {\n      let { message = '' } = err;\n      message = message.toLowerCase();\n      if (message.includes(`'target' domain was not found`)) {\n        log.info('The target device does not support Target based communication. ' +\n          'Will follow non-target based communication.');\n        this.isTargetBased = false;\n        return await this.sendToDevice(command, opts, waitForResponse);\n      } else if (message.includes(`domain was not found`) ||\n          message.includes(`some arguments of method`) ||\n          message.includes(`missing target`)) {\n        this.isTargetBased = true;\n        await this.waitForTarget(appIdKey, pageIdKey);\n        return await this.sendToDevice(command, opts, waitForResponse);\n      }\n      throw err;\n    } finally {\n      log.debug(`Sending to Web Inspector took ${timer.getDuration().asMilliSeconds.toFixed(0)}ms`);\n    }\n  }\n\n  async sendToDevice (command, opts = {}, waitForResponse = true) {\n    return await new B(async (resolve, reject) => {\n      // promise to be resolved whenever remote debugger\n      // replies to our request\n\n      // keep track of the messages coming and going using a simple sequential id\n      const msgId = this.msgId++;\n      let wrapperMsgId = msgId;\n      if (this.isTargetBased) {\n        // for target-base communication, everything is wrapped up\n        wrapperMsgId = this.msgId++;\n        // acknowledge wrapper message\n        this.messageHandler.on(wrapperMsgId.toString(), function (err) {\n          if (err) {\n            reject(err);\n          }\n        });\n      }\n\n      const appIdKey = opts.appIdKey;\n      const pageIdKey = opts.pageIdKey;\n      const targetId = this.getTarget(appIdKey, pageIdKey);\n\n      // retrieve the correct command to send\n      const fullOpts = _.defaults({\n        connId: this.connId,\n        senderId: this.senderId,\n        targetId,\n        id: msgId,\n      }, opts);\n      const cmd = this.remoteMessages.getRemoteCommand(command, fullOpts);\n\n      if (cmd?.__argument?.WIRSocketDataKey) {\n        // make sure the message being sent has all the information that is needed\n        if (_.isNil(cmd.__argument.WIRSocketDataKey.id)) {\n          cmd.__argument.WIRSocketDataKey.id = wrapperMsgId;\n        }\n        cmd.__argument.WIRSocketDataKey =\n          Buffer.from(JSON.stringify(cmd.__argument.WIRSocketDataKey));\n      }\n\n      let messageHandled = true;\n      if (!waitForResponse) {\n        // the promise will be resolved as soon as the socket has been sent\n        messageHandled = false;\n        // do not log receipts\n        this.messageHandler.once(msgId.toString(), function (err) {\n          if (err) {\n            // we are not waiting for this, and if it errors it is most likely\n            // a protocol change. Log and check during testing\n            log.error(`Received error from send that is not being waited for (id: ${msgId}): '${_.truncate(JSON.stringify(err), DATA_LOG_LENGTH)}'`);\n            // reject, though it is very rare that this will be triggered, since\n            // the promise is resolved directlty after send. On the off chance,\n            // though, it will alert of a protocol change.\n            reject(err);\n          }\n        });\n      } else if (this.messageHandler.listeners(cmd.__selector).length) {\n        this.messageHandler.prependOnceListener(cmd.__selector, function (err, ...args) {\n          if (err) {\n            return reject(err);\n          }\n          log.debug(`Received response from send (id: ${msgId}): '${_.truncate(JSON.stringify(args), DATA_LOG_LENGTH)}'`);\n          resolve(args);\n        });\n      } else if (cmd?.__argument?.WIRSocketDataKey) {\n        this.messageHandler.once(msgId.toString(), function (err, value) {\n          if (err) {\n            return reject(new Error(`Remote debugger error with code '${err.code}': ${err.message}`));\n          }\n          log.debug(`Received data response from send (id: ${msgId}): '${_.truncate(JSON.stringify(value), DATA_LOG_LENGTH)}'`);\n          resolve(value);\n        });\n      } else {\n        // nothing else is handling things, so just resolve when the message is sent\n        messageHandled = false;\n      }\n\n      const msg = `Sending '${cmd.__selector}' message` +\n        (fullOpts.appIdKey ? ` to app '${fullOpts.appIdKey}'` : '') +\n        (fullOpts.pageIdKey ? `, page '${fullOpts.pageIdKey}'` : '') +\n        (this.needsTarget && targetId ? `, target '${targetId}'` : '') +\n        ` (id: ${msgId}): '${command}'`;\n      log.debug(msg);\n      try {\n        const res = await this.sendMessage(cmd);\n        if (!messageHandled) {\n          // There are no handlers waiting for a response before resolving,\n          // and no errors sending the message over the socket, so resolve\n          resolve(res);\n        }\n      } catch (err) {\n        return reject(err);\n      }\n    });\n  }\n\n  async connect () { // eslint-disable-line require-await\n    throw new Error(`Sub-classes need to implement a 'connect' function`);\n  }\n\n  async disconnect () { // eslint-disable-line require-await\n    this.messageHandler.removeAllListeners();\n  }\n\n  async sendMessage (/* command */) { // eslint-disable-line require-await\n    throw new Error(`Sub-classes need to implement a 'sendMessage' function`);\n  }\n\n  async receive (/* data */) { // eslint-disable-line require-await\n    throw new Error(`Sub-classes need to implement a 'receive' function`);\n  }\n\n  addTarget (err, app, targetInfo) {\n    if (_.isNil(targetInfo?.targetId)) {\n      log.warn(`Received 'Target.targetCreated' event for app '${app}' with no target. Skipping`);\n      return;\n    }\n    if (_.isEmpty(this.pendingTargetNotification) && !targetInfo.isProvisional) {\n      log.warn(`Received 'Target.targetCreated' event for app '${app}' with no pending request: ${JSON.stringify(targetInfo)}`);\n      return;\n    }\n\n    if (targetInfo.isProvisional) {\n      log.debug(`Provisional target created for app '${app}', '${targetInfo.targetId}'. Ignoring until target update event`);\n      return;\n    }\n\n    const [appIdKey, pageIdKey] = this.pendingTargetNotification;\n\n    log.debug(`Target created for app '${appIdKey}' and page '${pageIdKey}': ${JSON.stringify(targetInfo)}`);\n    if (_.has(this.targets[appIdKey], pageIdKey)) {\n      log.debug(`There is already a target for this app and page ('${this.targets[appIdKey][pageIdKey]}'). This might cause problems`);\n    }\n    this.targets[app] = this.targets[app] || {};\n    this.targets[appIdKey][pageIdKey] = targetInfo.targetId;\n  }\n\n  updateTarget (err, app, oldTargetId, newTargetId) {\n    log.debug(`Target updated for app '${app}'. Old target: '${oldTargetId}', new target: '${newTargetId}'`);\n    if (!this.targets[app]) {\n      log.warn(`No existing target for app '${app}'. Not sure what to do`);\n      return;\n    }\n    // save this, to be used if/when the existing target is destroyed\n    this.targets[app].provisional = {\n      oldTargetId,\n      newTargetId,\n    };\n  }\n\n  removeTarget (err, app, targetInfo) {\n    if (_.isNil(targetInfo?.targetId)) {\n      log.debug(`Received 'Target.targetDestroyed' event with no target. Skipping`);\n      return;\n    }\n\n    log.debug(`Target destroyed for app '${app}': ${targetInfo.targetId}`);\n\n    // go through the targets and find the one that has a waiting provisional target\n    if (this.targets[app]?.provisional?.oldTargetId === targetInfo.targetId) {\n      const {oldTargetId, newTargetId} = this.targets[app].provisional;\n      delete this.targets[app].provisional;\n\n      // we do not know the page, so go through and find the existing target\n      const targets = this.targets[app];\n      for (const [page, targetId] of _.toPairs(targets)) {\n        if (targetId === oldTargetId) {\n          log.debug(`Found provisional target for app '${app}'. Old target: '${oldTargetId}', new target: '${newTargetId}'. Updating`);\n          targets[page] = newTargetId;\n          return;\n        }\n      }\n      log.warn(`Provisional target for app '${app}' found, but no suitable existing target found. This may cause problems`);\n      log.warn(`Old target: '${oldTargetId}', new target: '${newTargetId}'. Existing targets: ${JSON.stringify(targets)}`);\n    }\n\n    // if there is no waiting provisional target, just get rid of the existing one\n    const targets = this.targets[app];\n    for (const [page, targetId] of _.toPairs(targets)) {\n      if (targetId === targetInfo.targetId) {\n        delete targets[page];\n        return;\n      }\n    }\n    log.debug(`Target '${targetInfo.targetId}' deleted for app '${app}', but no such target exists`);\n  }\n\n  getTarget (appIdKey, pageIdKey) {\n    return (this.targets[appIdKey] || {})[pageIdKey];\n  }\n\n  async selectPage (appIdKey, pageIdKey) {\n    this.pendingTargetNotification = [appIdKey, pageIdKey];\n    this.shouldCheckForTarget = false;\n\n    // go through the steps that the Desktop Safari system\n    // goes through to initialize the Web Inspector session\n\n    const sendOpts = {\n      appIdKey,\n      pageIdKey,\n    };\n\n    // highlight and then un-highlight the webview\n    for (const enabled of [true, false]) {\n      await this.send('indicateWebView', Object.assign({\n        enabled,\n      }, sendOpts), false);\n    }\n\n    await this.send('setSenderKey', sendOpts);\n    log.debug('Sender key set');\n\n    if (this.isTargetBased && util.compareVersions(this.platformVersion, '<', MIN_PLATFORM_NO_TARGET_EXISTS)) {\n      await this.send('Target.exists', sendOpts, false);\n    }\n\n    this.shouldCheckForTarget = true;\n\n    if (this.fullPageInitialization) {\n      await this.initializePageFull(appIdKey, pageIdKey);\n    } else {\n      await this.initializePage(appIdKey, pageIdKey);\n    }\n  }\n\n  /*\n   * Perform the minimal initialization to get the Web Inspector working\n   */\n  async initializePage (appIdKey, pageIdKey) {\n    const sendOpts = {\n      appIdKey,\n      pageIdKey,\n    };\n\n    await this.send('Inspector.enable', sendOpts, false);\n    await this.send('Page.enable', sendOpts, false);\n\n    // go through the tasks to initialize\n    await this.send('Network.enable', sendOpts, false);\n    await this.send('Runtime.enable', sendOpts, false);\n    await this.send('Heap.enable', sendOpts, false);\n    await this.send('Debugger.enable', sendOpts, false);\n    await this.send('Console.enable', sendOpts, false);\n    await this.send('Inspector.initialized', sendOpts, false);\n  }\n\n  /*\n   * Mimic every step that Desktop Safari Develop tools uses to initialize a\n   * Web Inspector session\n   */\n  async initializePageFull (appIdKey, pageIdKey) {\n    const sendOpts = {\n      appIdKey,\n      pageIdKey,\n    };\n\n    await this.send('Inspector.enable', sendOpts, false);\n    await this.send('Page.enable', sendOpts, false);\n\n    // go through the tasks to initialize\n    await this.send('Page.getResourceTree', sendOpts, false);\n    await this.send('Network.enable', sendOpts, false);\n    await this.send('Network.setResourceCachingDisabled', Object.assign({\n      disabled: false,\n    }, sendOpts), false);\n    await this.send('DOMStorage.enable', sendOpts, false);\n    await this.send('Database.enable', sendOpts, false);\n    await this.send('IndexedDB.enable', sendOpts, false);\n    await this.send('CSS.enable', sendOpts, false);\n    await this.send('Runtime.enable', sendOpts, false);\n    await this.send('Heap.enable', sendOpts, false);\n    await this.send('Memory.enable', sendOpts, false);\n    await this.send('ApplicationCache.enable', sendOpts, false);\n    await this.send('ApplicationCache.getFramesWithManifests', sendOpts, false);\n    await this.send('Timeline.setInstruments', Object.assign({\n      instruments: ['Timeline', 'ScriptProfiler', 'CPU'],\n    }, sendOpts), false);\n    await this.send('Timeline.setAutoCaptureEnabled', Object.assign({\n      enabled: false,\n    }, sendOpts), false);\n    await this.send('Debugger.enable', sendOpts, false);\n    await this.send('Debugger.setBreakpointsActive', Object.assign({\n      active: true,\n    }, sendOpts), false);\n    await this.send('Debugger.setPauseOnExceptions', Object.assign({\n      state: 'none',\n    }, sendOpts), false);\n    await this.send('Debugger.setPauseOnAssertions', Object.assign({\n      enabled: false,\n    }, sendOpts), false);\n    await this.send('Debugger.setAsyncStackTraceDepth', Object.assign({\n      depth: 200,\n    }, sendOpts), false);\n    await this.send('Debugger.setPauseForInternalScripts', Object.assign({\n      shouldPause: false,\n    }, sendOpts), false);\n\n    await this.send('LayerTree.enable', sendOpts, false);\n    await this.send('Worker.enable', sendOpts, false);\n    await this.send('Canvas.enable', sendOpts, false);\n    await this.send('Console.enable', sendOpts, false);\n    await this.send('DOM.getDocument', sendOpts, false);\n    const loggingChannels = await this.send('Console.getLoggingChannels', sendOpts);\n    for (const source of (loggingChannels.channels || []).map((entry) => entry.source)) {\n      await this.send('Console.setLoggingChannelLevel', Object.assign({\n        source,\n        level: 'verbose',\n      }, sendOpts), false);\n    }\n\n    await this.send('Inspector.initialized', sendOpts, false);\n  }\n\n  async selectApp (appIdKey) {\n    return await new B((resolve, reject) => {\n      // local callback, temporarily added as callback to\n      // `_rpc_applicationConnected:` remote debugger response\n      // to handle the initial connection\n      const onAppChange = (err, dict) => {\n        if (err) {\n          return reject(err);\n        }\n        // from the dictionary returned, get the ids\n        const oldAppIdKey = dict.WIRHostApplicationIdentifierKey;\n        const correctAppIdKey = dict.WIRApplicationIdentifierKey;\n\n        // if this is a report of a proxy redirect from the remote debugger\n        // we want to update our dictionary and get a new app id\n        if (oldAppIdKey && correctAppIdKey !== oldAppIdKey) {\n          log.debug(`We were notified we might have connected to the wrong app. ` +\n                    `Using id ${correctAppIdKey} instead of ${oldAppIdKey}`);\n        }\n\n        reject(new Error('New application has connected'));\n      };\n      this.messageHandler.prependOnceListener('_rpc_applicationConnected:', onAppChange);\n\n      // do the actual connecting to the app\n      return (async () => {\n        let pageDict, connectedAppIdKey;\n        try {\n          ([connectedAppIdKey, pageDict] = await this.send('connectToApp', {\n            appIdKey\n          }));\n        } catch (err) {\n          log.warn(`Unable to connect to app: ${err.message}`);\n          reject(err);\n        }\n\n        // sometimes the connect logic happens, but with an empty dictionary\n        // which leads to the remote debugger getting disconnected, and into a loop\n        if (_.isEmpty(pageDict)) {\n          let msg = 'Empty page dictionary received';\n          log.debug(msg);\n          reject(new Error(msg));\n        } else {\n          resolve([connectedAppIdKey, pageDict]);\n        }\n      })();\n    });\n  }\n\n  onExecutionContextCreated (err, context) {\n    // { id: 2, isPageContext: true, name: '', frameId: '0.1' }\n    // right now we have no way to map contexts to apps/pages\n    // so just store\n    this.contexts.push(context.id);\n  }\n\n  onGarbageCollected () {\n    // just want to log that this is happening, as it can affect opertion\n    log.debug(`Web Inspector garbage collected`);\n  }\n\n  onScriptParsed (err, scriptInfo) {\n    // { scriptId: '13', url: '', startLine: 0, startColumn: 0, endLine: 82, endColumn: 3 }\n    log.debug(`Script parsed: ${JSON.stringify(scriptInfo)}`);\n  }\n}\n"],"mappings":"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"}