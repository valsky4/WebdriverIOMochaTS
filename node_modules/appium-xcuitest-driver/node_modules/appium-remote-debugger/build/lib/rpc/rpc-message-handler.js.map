{"version":3,"file":"rpc-message-handler.js","names":["_logger","_interopRequireDefault","require","_lodash","_support","_events","RpcMessageHandler","EventEmitters","constructor","isTargetBased","_isTargetBased","handleMessage","plist","selector","__selector","log","debug","argument","__argument","emit","WIRSimulatorNameKey","WIRSimulatorBuildKey","WIRSimulatorProductVersionKey","WIRApplicationDictionaryKey","WIRApplicationIdentifierKey","WIRListingKey","handleDataMessage","parseDataKey","JSON","parse","WIRMessageDataKey","toString","err","error","_","truncate","stringify","length","Error","message","dispatchDataMessage","msgId","method","params","result","isEmpty","listenerCount","_result","has","value","eventNames","args","push","record","context","startsWith","name","_result2","dataKey","id","app","targetInfo","oldTargetId","newTargetId","targetId","warn","util","jsonStringify","wasThrown","_result3","_result3$result","_result4","_result4$result","_result5","_result5$result","_result6","_result6$result","description","exports","default"],"sources":["../../../lib/rpc/rpc-message-handler.js"],"sourcesContent":["import log from '../logger';\nimport _ from 'lodash';\nimport { util } from '@appium/support';\nimport EventEmitters from 'events';\n\n\nexport default class RpcMessageHandler extends EventEmitters {\n  constructor (isTargetBased = false) {\n    super();\n\n    this.isTargetBased = isTargetBased;\n  }\n\n  get isTargetBased () {\n    return this._isTargetBased;\n  }\n\n  set isTargetBased (isTargetBased) {\n    this._isTargetBased = !!isTargetBased;\n  }\n\n  async handleMessage (plist) {\n    const selector = plist.__selector;\n    if (!selector) {\n      log.debug('Got an invalid plist');\n      return;\n    }\n\n    const argument = plist.__argument;\n    switch (selector) {\n      case '_rpc_reportSetup:':\n        this.emit('_rpc_reportSetup:',\n          null,\n          argument.WIRSimulatorNameKey,\n          argument.WIRSimulatorBuildKey,\n          argument.WIRSimulatorProductVersionKey\n        );\n        break;\n      case '_rpc_reportConnectedApplicationList:':\n        this.emit('_rpc_reportConnectedApplicationList:',\n          null,\n          argument.WIRApplicationDictionaryKey\n        );\n        break;\n      case '_rpc_applicationSentListing:':\n        this.emit('_rpc_forwardGetListing:',\n          null,\n          argument.WIRApplicationIdentifierKey,\n          argument.WIRListingKey\n        );\n        break;\n      case '_rpc_applicationConnected:':\n        this.emit('_rpc_applicationConnected:', null, argument);\n        break;\n      case '_rpc_applicationDisconnected:':\n        this.emit('_rpc_applicationDisconnected:', null, argument);\n        break;\n      case '_rpc_applicationUpdated:':\n        this.emit('_rpc_applicationUpdated:', null, argument);\n        break;\n      case '_rpc_reportConnectedDriverList:':\n        this.emit('_rpc_reportConnectedDriverList:', null, argument);\n        break;\n      case '_rpc_reportCurrentState:':\n        this.emit('_rpc_reportCurrentState:', null, argument);\n        break;\n      case '_rpc_applicationSentData:':\n        await this.handleDataMessage(plist);\n        break;\n      default:\n        log.debug(`Debugger got a message for '${selector}' and have no ` +\n          `handler, doing nothing.`);\n    }\n  }\n\n  parseDataKey (plist) {\n    try {\n      return JSON.parse(plist.__argument.WIRMessageDataKey.toString('utf8'));\n    } catch (err) {\n      log.error(`Unparseable message data: ${_.truncate(JSON.stringify(plist), {length: 100})}`);\n      throw new Error(`Unable to parse message data: ${err.message}`);\n    }\n  }\n\n  async dispatchDataMessage (msgId, method, params, result, error) { // eslint-disable-line require-await\n    if (!_.isEmpty(msgId)) {\n      log.debug(`Handling message (id: '${msgId}')`);\n    }\n\n    if (msgId) {\n      if (this.listenerCount(msgId)) {\n        if (_.has(result?.result, 'value')) {\n          result = result.result.value;\n        }\n        this.emit(msgId, error, result);\n      } else {\n        log.error(`Web Inspector returned data for message '${msgId}' ` +\n          `but we were not waiting for that message! ` +\n          `result: '${JSON.stringify(result)}'; ` +\n          `error: '${JSON.stringify(error)}'`);\n      }\n      return;\n    }\n\n    let eventNames = [method];\n    let args = [params];\n\n    // some events have different names, or the arguments are mapped from the\n    // parameters received\n    switch (method) {\n      case 'Page.frameStoppedLoading':\n        eventNames.push('Page.frameNavigated');\n        // eslint-disable-line no-fallthrough\n      case 'Page.frameNavigated':\n        args = [`'${method}' event`];\n        break;\n      case 'Timeline.eventRecorded':\n        args = [params || params.record];\n        break;\n      case 'Console.messageAdded':\n        args = [params.message];\n        break;\n      case 'Runtime.executionContextCreated':\n        args = [params.context];\n        break;\n      default:\n        // pass\n        break;\n    }\n\n    if (_.startsWith(method, 'Network.')) {\n      // aggregate Network events, and add original method name to the arguments\n      eventNames.push('NetworkEvent');\n      args.push(method);\n    }\n    if (_.startsWith(method, 'Console.')) {\n      // aggregate Network events, and add original method name to the arguments\n      eventNames.push('ConsoleEvent');\n      args.push(method);\n    }\n\n    for (const name of eventNames) {\n      this.emit(name, error, ...args);\n    }\n  }\n\n  async handleDataMessage (plist) {\n    const dataKey = this.parseDataKey(plist);\n    let msgId = (dataKey.id || '').toString();\n    let result = dataKey.result;\n\n    let method = dataKey.method;\n    let params;\n\n    if (method === 'Target.targetCreated') {\n      // this is in response to a `_rpc_forwardSocketSetup:` call\n      // targetInfo: { targetId: 'page-1', type: 'page' }\n      const app = plist.__argument.WIRApplicationIdentifierKey;\n      const targetInfo = dataKey.params.targetInfo;\n      this.emit('Target.targetCreated', null, app, targetInfo);\n      return;\n    } else if (method === 'Target.didCommitProvisionalTarget') {\n      const app = plist.__argument.WIRApplicationIdentifierKey;\n      const oldTargetId = dataKey.params.oldTargetId;\n      const newTargetId = dataKey.params.newTargetId;\n      this.emit('Target.didCommitProvisionalTarget', null, app, oldTargetId, newTargetId);\n      return;\n    } else if (method === 'Target.targetDestroyed') {\n      const app = plist.__argument.WIRApplicationIdentifierKey;\n      const targetInfo = dataKey.params.targetInfo || {targetId: dataKey.params.targetId};\n      this.emit('Target.targetDestroyed', null, app, targetInfo);\n      return;\n    }\n\n    if (!dataKey.error && this.isTargetBased) {\n      if (dataKey.method !== 'Target.dispatchMessageFromTarget') {\n        // this sort of message, at this point, is just an acknowledgement\n        // that the original message was received\n        return;\n      }\n\n      // at this point, we have a Target-based message wrapping a protocol message\n      let message;\n      try {\n        message = JSON.parse(dataKey.params.message);\n        msgId = message.id;\n        method = message.method;\n        result = message.result || message;\n        params = result.params;\n      } catch (err) {\n        // if this happens then some aspect of the protocol is missing to us\n        // so print the entire message to get visibiity into what is going on\n        log.error(`Unexpected message format from Web Inspector:`);\n        this.warn(util.jsonStringify(plist));\n        throw err;\n      }\n    } else {\n      params = dataKey.params;\n    }\n\n    // we can get an error, or we can get a response that is an error\n    let error = dataKey.error || null;\n    if (result?.wasThrown) {\n      const message = (result?.result?.value || result?.result?.description)\n        ? (result?.result?.value || result?.result?.description)\n        : 'Error occurred in handling data message';\n      error = new Error(message);\n    }\n\n    await this.dispatchDataMessage(msgId, method, params, result, error);\n  }\n}\n"],"mappings":"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"}