{"version":3,"file":"utils.js","names":["_logger","_interopRequireDefault","require","_lodash","_bluebird","_baseDriver","_support","MODULE_NAME","WEB_CONTENT_BUNDLE_ID","WEB_CONTENT_PROCESS_BUNDLE_ID","SAFARI_VIEW_PROCESS_BUNDLE_ID","SAFARI_VIEW_BUNDLE_ID","WILDCARD_BUNDLE_ID","INACTIVE_APP_CODE","ACCEPTED_PAGE_TYPES","RESPONSE_LOG_LENGTH","exports","appInfoFromDict","dict","id","WIRApplicationIdentifierKey","isProxy","_","isString","WIRIsApplicationProxyKey","toLowerCase","isAutomationEnabled","WIRRemoteAutomationEnabledKey","has","WIRAutomationAvailabilityKey","entry","name","WIRApplicationNameKey","bundleId","WIRApplicationBundleIdentifierKey","hostId","WIRHostApplicationIdentifierKey","isActive","WIRIsApplicationActiveKey","pageArrayFromDict","pageDict","newPageArray","values","isUndefined","WIRTypeKey","includes","push","WIRPageIdentifierKey","title","WIRTitleKey","url","WIRURLKey","isKey","WIRConnectionIdentifierKey","getDebuggerAppKey","appDict","appId","key","data","toPairs","log","debug","proxyAppId","appIdForBundle","endsWith","getPossibleDebuggerAppKeys","bundleIds","proxiedAppIds","possibleBundleIds","uniq","join","checkParams","params","errors","filter","value","isNil","map","param","length","Error","util","pluralize","simpleStringify","multiline","JSON","stringify","cleanValue","clone","property","deferredPromise","resolve","reject","promise","B","res","rej","convertResult","truncate","parse","err","isObject","status","errorFromMJSONWPStatusCode","message","getModuleRoot","memoize","root","node","getModuleRootSync","__filename"],"sources":["../../lib/utils.js"],"sourcesContent":["import log from './logger';\nimport _ from 'lodash';\nimport B from 'bluebird';\nimport { errorFromMJSONWPStatusCode } from '@appium/base-driver';\nimport { util, node } from '@appium/support';\n\nconst MODULE_NAME = 'appium-remote-debugger';\n\nconst WEB_CONTENT_BUNDLE_ID = 'com.apple.WebKit.WebContent';\nconst WEB_CONTENT_PROCESS_BUNDLE_ID = 'process-com.apple.WebKit.WebContent';\nconst SAFARI_VIEW_PROCESS_BUNDLE_ID = 'process-SafariViewService';\nconst SAFARI_VIEW_BUNDLE_ID = 'com.apple.SafariViewService';\nconst WILDCARD_BUNDLE_ID = '*';\n\nconst INACTIVE_APP_CODE = 0;\n\n// values for the page `WIRTypeKey` entry\nconst ACCEPTED_PAGE_TYPES = [\n  'WIRTypeWeb', // up to iOS 11.3\n  'WIRTypeWebPage', // iOS 11.4\n  'WIRTypePage', // iOS 11.4 webview\n];\n\nconst RESPONSE_LOG_LENGTH = 100;\n\n/*\n * Takes a dictionary from the remote debugger and makes a more manageable\n * dictionary whose keys are understandable\n */\nfunction appInfoFromDict (dict) {\n  const id = dict.WIRApplicationIdentifierKey;\n  const isProxy = _.isString(dict.WIRIsApplicationProxyKey)\n    ? dict.WIRIsApplicationProxyKey.toLowerCase() === 'true'\n    : dict.WIRIsApplicationProxyKey;\n  // automation enabled can be either from the keys\n  //   - WIRRemoteAutomationEnabledKey (boolean)\n  //   - WIRAutomationAvailabilityKey (string or boolean)\n  let isAutomationEnabled = !!dict.WIRRemoteAutomationEnabledKey;\n  if (_.has(dict, 'WIRAutomationAvailabilityKey')) {\n    if (_.isString(dict.WIRAutomationAvailabilityKey)) {\n      isAutomationEnabled = dict.WIRAutomationAvailabilityKey === 'WIRAutomationAvailabilityUnknown'\n        ? 'Unknown'\n        : dict.WIRAutomationAvailabilityKey === 'WIRAutomationAvailabilityAvailable';\n    } else {\n      isAutomationEnabled = !!dict.WIRAutomationAvailabilityKey;\n    }\n  }\n  const entry = {\n    id,\n    isProxy,\n    name: dict.WIRApplicationNameKey,\n    bundleId: dict.WIRApplicationBundleIdentifierKey,\n    hostId: dict.WIRHostApplicationIdentifierKey,\n    isActive: dict.WIRIsApplicationActiveKey !== INACTIVE_APP_CODE,\n    isAutomationEnabled,\n  };\n\n  return [id, entry];\n}\n\n/*\n * Take a dictionary from the remote debugger and makes a more manageable\n * dictionary of pages available.\n */\nfunction pageArrayFromDict (pageDict) {\n  if (pageDict.id) {\n    // the page is already translated, so wrap in an array and pass back\n    return [pageDict];\n  }\n  let newPageArray = [];\n  for (const dict of _.values(pageDict)) {\n    // count only WIRTypeWeb pages and ignore all others (WIRTypeJavaScript etc)\n    if (_.isUndefined(dict.WIRTypeKey) || ACCEPTED_PAGE_TYPES.includes(dict.WIRTypeKey)) {\n      newPageArray.push({\n        id: dict.WIRPageIdentifierKey,\n        title: dict.WIRTitleKey,\n        url: dict.WIRURLKey,\n        isKey: !_.isUndefined(dict.WIRConnectionIdentifierKey),\n      });\n    }\n  }\n  return newPageArray;\n}\n\n/*\n * Given a bundle id, finds the correct remote debugger app that is\n * connected.\n */\nfunction getDebuggerAppKey (bundleId, appDict) {\n  let appId;\n  for (const [key, data] of _.toPairs(appDict)) {\n    if (data.bundleId === bundleId) {\n      appId = key;\n      break;\n    }\n  }\n  // now we need to determine if we should pick a proxy for this instead\n  if (appId) {\n    log.debug(`Found app id key '${appId}' for bundle '${bundleId}'`);\n    let proxyAppId;\n    for (const [key, data] of _.toPairs(appDict)) {\n      if (data.isProxy && data.hostId === appId) {\n        log.debug(`Found separate bundleId '${data.bundleId}' ` +\n                  `acting as proxy for '${bundleId}', with app id '${key}'`);\n        // set the app id... the last one will be used, so just keep re-assigning\n        proxyAppId = key;\n      }\n    }\n    if (proxyAppId) {\n      appId = proxyAppId;\n      log.debug(`Using proxied app id '${appId}'`);\n    }\n  }\n\n  return appId;\n}\n\nfunction appIdForBundle (bundleId, appDict) {\n  let appId;\n  for (const [key, data] of _.toPairs(appDict)) {\n    if (data.bundleId.endsWith(bundleId)) {\n      appId = key;\n      break;\n    }\n  }\n\n  // if nothing is found, try to get the generic app\n  if (!appId && bundleId !== WEB_CONTENT_BUNDLE_ID) {\n    return appIdForBundle(WEB_CONTENT_BUNDLE_ID, appDict);\n  }\n\n  return appId;\n}\n\nfunction getPossibleDebuggerAppKeys (bundleIds, appDict) {\n  let proxiedAppIds = [];\n\n  // go through the possible bundle identifiers\n  const possibleBundleIds = _.uniq([\n    WEB_CONTENT_BUNDLE_ID,\n    WEB_CONTENT_PROCESS_BUNDLE_ID,\n    SAFARI_VIEW_PROCESS_BUNDLE_ID,\n    SAFARI_VIEW_BUNDLE_ID,\n    WILDCARD_BUNDLE_ID,\n    ...bundleIds,\n  ]);\n  log.debug(`Checking for bundle identifiers: ${possibleBundleIds.join(', ')}`);\n  for (const bundleId of possibleBundleIds) {\n    const appId = appIdForBundle(bundleId, appDict);\n\n    // now we need to determine if we should pick a proxy for this instead\n    if (appId) {\n      proxiedAppIds.push(appId);\n      log.debug(`Found app id key '${appId}' for bundle '${bundleId}'`);\n      for (const [key, data] of _.toPairs(appDict)) {\n        if (data.isProxy && data.hostId === appId) {\n          log.debug(`Found separate bundleId '${data.bundleId}' ` +\n                    `acting as proxy for '${bundleId}', with app id '${key}'`);\n          proxiedAppIds.push(key);\n        }\n      }\n    }\n  }\n\n  return _.uniq(proxiedAppIds);\n}\n\nfunction checkParams (params) {\n  // check if all parameters have a value\n  const errors = _.toPairs(params)\n    .filter(([, value]) => _.isNil(value))\n    .map(([param]) => param);\n  if (errors.length) {\n    throw new Error(`Missing ${util.pluralize('parameter', errors.length)}: ${errors.join(', ')}`);\n  }\n}\n\nfunction simpleStringify (value, multiline = false) {\n  if (!value) {\n    return JSON.stringify(value);\n  }\n\n  // we get back objects sometimes with string versions of functions\n  // which muddy the logs\n  let cleanValue = _.clone(value);\n  for (const property of ['ceil', 'clone', 'floor', 'round', 'scale', 'toString']) {\n    delete cleanValue[property];\n  }\n  return multiline ? JSON.stringify(cleanValue, null, 2) : JSON.stringify(cleanValue);\n}\n\nfunction deferredPromise () {\n  // http://bluebirdjs.com/docs/api/deferred-migration.html\n  let resolve;\n  let reject;\n  const promise = new B((res, rej) => { // eslint-disable-line promise/param-names\n    resolve = res;\n    reject = rej;\n  });\n  return {\n    promise,\n    resolve,\n    reject\n  };\n}\n\nfunction convertResult (res) {\n  if (_.isUndefined(res)) {\n    throw new Error(`Did not get OK result from remote debugger. Result was: ${_.truncate(simpleStringify(res), {length: RESPONSE_LOG_LENGTH})}`);\n  } else if (_.isString(res)) {\n    try {\n      res = JSON.parse(res);\n    } catch (err) {\n      // we might get a serialized object, but we might not\n      // if we get here, it is just a value\n    }\n  } else if (!_.isObject(res)) {\n    throw new Error(`Result has unexpected type: (${typeof res}).`);\n  }\n\n  if (res.status && res.status !== 0) {\n    // we got some form of error.\n    throw errorFromMJSONWPStatusCode(res.status, res.value.message || res.value);\n  }\n\n  // with either have an object with a `value` property (even if `null`),\n  // or a plain object\n  const value = _.has(res, 'value') ? res.value : res;\n\n  // get rid of noisy functions on objects\n  if (_.isObject(value)) {\n    for (const property of ['ceil', 'clone', 'floor', 'round', 'scale', 'toString']) {\n      delete value[property];\n    }\n  }\n  return value;\n}\n\n/**\n * Calculates the path to the current module's root folder\n *\n * @returns {string} The full path to module root\n * @throws {Error} If the current module root folder cannot be determined\n */\nconst getModuleRoot = _.memoize(function getModuleRoot () {\n  const root = node.getModuleRootSync(MODULE_NAME, __filename);\n  if (!root) {\n    throw new Error(`Cannot find the root folder of the ${MODULE_NAME} Node.js module`);\n  }\n  return root;\n});\n\nexport {\n  appInfoFromDict, pageArrayFromDict, getDebuggerAppKey,\n  getPossibleDebuggerAppKeys, checkParams, simpleStringify, deferredPromise,\n  convertResult, RESPONSE_LOG_LENGTH, getModuleRoot,\n};\n"],"mappings":"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"}