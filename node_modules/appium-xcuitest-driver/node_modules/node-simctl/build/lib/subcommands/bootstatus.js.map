{"version":3,"file":"bootstatus.js","names":["_logger","_interopRequireDefault","require","_asyncbox","commands","startBootMonitor","opts","timeout","onWaitingDataMigration","onWaitingSystemApp","onFinished","onError","shouldPreboot","udid","requireUdid","status","isBootingFinished","error","timeoutHandler","args","push","bootMonitor","exec","asynchronous","on","stdout","stderr","includes","code","signal","clearTimeout","Error","start","stopMonitor","isRunning","stop","e","log","warn","message","process","hrtime","setTimeout","waitForCondition","waitMs","intervalMs","err","seconds","_default","exports","default"],"sources":["../../../lib/subcommands/bootstatus.js"],"sourcesContent":["import log from '../logger';\nimport { waitForCondition } from 'asyncbox';\n\n\nconst commands = {};\n\n/**\n * @typedef {Object} BootMonitorOptions\n * @property {?number} timeout [240000] - Simulator booting timeout in ms.\n * @property {?Function} onWaitingDataMigration - This event is fired when data migration stage starts.\n * @property {?Function} onWaitingSystemApp - This event is fired when system app wait stage starts.\n * @property {?Function} onFinished - This event is fired when Simulator is fully booted.\n * @property {?Function} onError - This event is fired when there was an error while monitoring the booting process\n * or when the timeout has expired.\n * @property {?boolean} shouldPreboot [false] Whether to preboot the Simulator\n * if this command is called and it is not already in booted or booting state.\n */\n\n/**\n * Start monitoring for boot status of the particular Simulator.\n * If onFinished property is not set then the method will block\n * until Simulator booting is completed.\n * The method is only available since Xcode8.\n *\n * @param {?BootMonitorOptions} opts - Monitoring options.\n * @returns {SubProcess} The instance of the corresponding monitoring process.\n * @throws {Error} If the Simulator fails to finish booting within the given timeout and onFinished\n * property is not set.\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.startBootMonitor = async function startBootMonitor (opts = {}) {\n  const {\n    timeout = 240000,\n    onWaitingDataMigration,\n    onWaitingSystemApp,\n    onFinished,\n    onError,\n    shouldPreboot,\n  } = opts;\n  const udid = this.requireUdid('bootstatus');\n\n  let status = '';\n  let isBootingFinished = false;\n  let error = null;\n  let timeoutHandler = null;\n  const args = [udid];\n  if (shouldPreboot) {\n    args.push('-b');\n  }\n  const bootMonitor = await this.exec('bootstatus', {\n    args,\n    asynchronous: true,\n  });\n  bootMonitor.on('output', (stdout, stderr) => {\n    status += stdout || stderr;\n    if (stdout) {\n      if (stdout.includes('Waiting on Data Migration') && onWaitingDataMigration) {\n        onWaitingDataMigration();\n      } else if (stdout.includes('Waiting on System App') && onWaitingSystemApp) {\n        onWaitingSystemApp();\n      }\n    }\n  });\n  bootMonitor.on('exit', (code, signal) => {\n    if (timeoutHandler) {\n      clearTimeout(timeoutHandler);\n    }\n    if (code === 0) {\n      if (onFinished) {\n        onFinished();\n      }\n      isBootingFinished = true;\n    } else {\n      status = status || signal;\n      error = new Error(status);\n      if (onError) {\n        onError(error);\n      }\n    }\n  });\n  await bootMonitor.start(0);\n  const stopMonitor = async () => {\n    if (bootMonitor.isRunning) {\n      try {\n        await bootMonitor.stop();\n      } catch (e) {\n        log.warn(e.message);\n      }\n    }\n  };\n  const start = process.hrtime();\n  if (onFinished) {\n    timeoutHandler = setTimeout(stopMonitor, timeout);\n  } else {\n    try {\n      await waitForCondition(() => {\n        if (error) {\n          throw error;\n        }\n        return isBootingFinished;\n      }, {waitMs: timeout, intervalMs: 500});\n    } catch (err) {\n      await stopMonitor();\n      const [seconds] = process.hrtime(start);\n      throw new Error(\n        `The simulator ${udid} has failed to finish booting after ${seconds}s. ` +\n        `Original status: ${status}`);\n    }\n  }\n  return bootMonitor;\n};\n\nexport default commands;\n"],"mappings":"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"}