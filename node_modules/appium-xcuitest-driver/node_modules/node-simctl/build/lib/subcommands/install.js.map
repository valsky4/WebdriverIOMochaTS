{"version":3,"file":"install.js","names":["commands","installApp","appPath","exec","args","requireUdid","_default","exports","default"],"sources":["../../../lib/subcommands/install.js"],"sourcesContent":["const commands = {};\n\n/**\n * Install the particular application package on Simulator.\n * It is required that Simulator is in _booted_ state.\n *\n * @param {string} appPath - Full path to .app package, which is\n *                           going to be installed.\n * @throws {Error} If the corresponding simctl subcommand command\n *                 returns non-zero return code.\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.installApp = async function installApp (appPath) {\n  await this.exec('install', {\n    args: [this.requireUdid('install'), appPath],\n  });\n};\n\nexport default commands;\n"],"mappings":";;;;;;;AAAA,MAAMA,QAAQ,GAAG,CAAC,CAAC;AAYnBA,QAAQ,CAACC,UAAU,GAAG,eAAeA,UAAUA,CAAEC,OAAO,EAAE;EACxD,MAAM,IAAI,CAACC,IAAI,CAAC,SAAS,EAAE;IACzBC,IAAI,EAAE,CAAC,IAAI,CAACC,WAAW,CAAC,SAAS,CAAC,EAAEH,OAAO;EAC7C,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAI,QAAA,GAEaN,QAAQ;AAAAO,OAAA,CAAAC,OAAA,GAAAF,QAAA"}