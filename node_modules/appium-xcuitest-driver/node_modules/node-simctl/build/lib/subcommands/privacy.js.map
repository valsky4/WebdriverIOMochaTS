{"version":3,"file":"privacy.js","names":["commands","grantPermission","bundleId","perm","exec","args","requireUdid","revokePermission","resetPermission","_default","exports","default"],"sources":["../../../lib/subcommands/privacy.js"],"sourcesContent":["const commands = {};\n\n/**\n * Grants the given permission on the app with the given bundle identifier\n *\n * @since Xcode 11.4 SDK\n * @param {string} bundleId the identifier of the application whose\n * privacy settings are going to be changed\n * @param {string} perm one of possible permission values:\n * - all: Apply the action to all services.\n * - calendar: Allow access to calendar.\n * - contacts-limited: Allow access to basic contact info.\n * - contacts: Allow access to full contact details.\n * - location: Allow access to location services when app is in use.\n * - location-always: Allow access to location services at all times.\n * - photos-add: Allow adding photos to the photo library.\n * - photos: Allow full access to the photo library.\n * - media-library: Allow access to the media library.\n * - microphone: Allow access to audio input.\n * - motion: Allow access to motion and fitness data.\n * - reminders: Allow access to reminders.\n * - siri: Allow use of the app with Siri.\n * @throws {Error} if the current SDK version does not support the command\n * or there was an error while granting the permission\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.grantPermission = async function grantPermission (bundleId, perm) {\n  await this.exec('privacy', {\n    args: [this.requireUdid('privacy grant'), 'grant', perm, bundleId],\n  });\n};\n\n/**\n * Revokes the given permission on the app with the given bundle identifier\n * after it has been granted\n *\n * @since Xcode 11.4 SDK\n * @param {string} bundleId the identifier of the application whose\n * privacy settings are going to be changed\n * @param {string} perm one of possible permission values (see `grantPermission`)\n * @throws {Error} if the current SDK version does not support the command\n * or there was an error while revoking the permission\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.revokePermission = async function revokePermission (bundleId, perm) {\n  await this.exec('privacy', {\n    args: [this.requireUdid('privacy revoke'), 'revoke', perm, bundleId],\n  });\n};\n\n/**\n * Resets the given permission on the app with the given bundle identifier\n * to its default state\n *\n * @since Xcode 11.4 SDK\n * @param {string} bundleId the identifier of the application whose\n * privacy settings are going to be changed\n * @param {string} perm one of possible permission values (see `grantPermission`)\n * @throws {Error} if the current SDK version does not support the command\n * or there was an error while resetting the permission\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.resetPermission = async function resetPermission (bundleId, perm) {\n  await this.exec('privacy', {\n    args: [this.requireUdid('private reset'), 'reset', perm, bundleId],\n  });\n};\n\nexport default commands;\n"],"mappings":";;;;;;;AAAA,MAAMA,QAAQ,GAAG,CAAC,CAAC;AA0BnBA,QAAQ,CAACC,eAAe,GAAG,eAAeA,eAAeA,CAAEC,QAAQ,EAAEC,IAAI,EAAE;EACzE,MAAM,IAAI,CAACC,IAAI,CAAC,SAAS,EAAE;IACzBC,IAAI,EAAE,CAAC,IAAI,CAACC,WAAW,CAAC,eAAe,CAAC,EAAE,OAAO,EAAEH,IAAI,EAAED,QAAQ;EACnE,CAAC,CAAC;AACJ,CAAC;AAcDF,QAAQ,CAACO,gBAAgB,GAAG,eAAeA,gBAAgBA,CAAEL,QAAQ,EAAEC,IAAI,EAAE;EAC3E,MAAM,IAAI,CAACC,IAAI,CAAC,SAAS,EAAE;IACzBC,IAAI,EAAE,CAAC,IAAI,CAACC,WAAW,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAEH,IAAI,EAAED,QAAQ;EACrE,CAAC,CAAC;AACJ,CAAC;AAcDF,QAAQ,CAACQ,eAAe,GAAG,eAAeA,eAAeA,CAAEN,QAAQ,EAAEC,IAAI,EAAE;EACzE,MAAM,IAAI,CAACC,IAAI,CAAC,SAAS,EAAE;IACzBC,IAAI,EAAE,CAAC,IAAI,CAACC,WAAW,CAAC,eAAe,CAAC,EAAE,OAAO,EAAEH,IAAI,EAAED,QAAQ;EACnE,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAO,QAAA,GAEaT,QAAQ;AAAAU,OAAA,CAAAC,OAAA,GAAAF,QAAA"}