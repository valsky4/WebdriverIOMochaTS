{"version":3,"file":"uninstall.js","names":["commands","removeApp","bundleId","exec","args","requireUdid","_default","exports","default"],"sources":["../../../lib/subcommands/uninstall.js"],"sourcesContent":["const commands = {};\n\n/**\n * Remove the particular application package from Simulator.\n * It is required that Simulator is in _booted_ state and\n * the application with given bundle identifier is already installed.\n *\n * @param {string} bundleId - Bundle identifier of the application,\n *                            which is going to be removed.\n * @throws {Error} If the corresponding simctl subcommand command\n *                 returns non-zero return code.\n * @throws {Error} If the `udid` instance property is unset\n */\ncommands.removeApp = async function removeApp (bundleId) {\n  await this.exec('uninstall', {\n    args: [this.requireUdid('uninstall'), bundleId],\n  });\n};\n\nexport default commands;\n"],"mappings":";;;;;;;AAAA,MAAMA,QAAQ,GAAG,CAAC,CAAC;AAanBA,QAAQ,CAACC,SAAS,GAAG,eAAeA,SAASA,CAAEC,QAAQ,EAAE;EACvD,MAAM,IAAI,CAACC,IAAI,CAAC,WAAW,EAAE;IAC3BC,IAAI,EAAE,CAAC,IAAI,CAACC,WAAW,CAAC,WAAW,CAAC,EAAEH,QAAQ;EAChD,CAAC,CAAC;AACJ,CAAC;AAAC,IAAAI,QAAA,GAEaN,QAAQ;AAAAO,OAAA,CAAAC,OAAA,GAAAF,QAAA"}